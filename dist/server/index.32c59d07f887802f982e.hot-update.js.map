{"version":3,"file":"index.32c59d07f887802f982e.hot-update.js","sources":["webpack:///./app/graphql/PolicyDetails/services/cancelPolicy.ts"],"sourcesContent":["import axios from 'axios';\nimport log from '../../../server/utils/log';\nimport { tracer } from '../../../server/utils/tracer';\nimport { api } from '../../utils/api';\nimport type { CancelPolicyResponse } from '../../../../shared/generated-types/graphql';\nimport nodeMonitor from '../../../server/utils/nodeMonitor';\n\nconst cancelPolicy = async (\n  policyId: string,\n  caseNumber: string,\n  note: string,\n  rentGuaranteeUserToken: string,\n  rentGuaranteeSessionToken: string,\n): Promise<CancelPolicyResponse | null> => {\n  const response = await axios\n    .post(\n      `${api.gql.cancelPolicy}`,\n      {\n        policyId: policyId,\n        caseNumber: caseNumber,\n        note: note,\n        userToken: rentGuaranteeUserToken,\n      },\n      {\n        headers: {\n          Cookie: `rent-guaranteeUserToken=${rentGuaranteeUserToken}; rent-guaranteeSessionToken=${rentGuaranteeSessionToken}`,\n        },\n      },\n    )\n    .then((res) => res.data)\n    .catch((err) => {\n      log.error(`Error cancelling policy for policyId: ${policyId}: ${err}`);\n      // Log an error (using the class instance's logger):\n      nodeMonitor.increment({ name: 'cancelPolicy failed', amount: 1 });\n      return null;\n    });\n\n  if (response) {\n    // Increment a count:\n    await nodeMonitor.increment({ name: 'cancelPolicy viewed', amount: 1 });\n    return response;\n  }\n\n  return null;\n};\n\nexport default tracer.wrap(cancelPolicy);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AAJA;AAOA;AACA;AADA;AADA;AAMA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AA7BA;AAOA;AACA;AARA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAgCA;AAAA;AAAA;AACA;AAjCA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAsCA;;;;A","sourceRoot":""}
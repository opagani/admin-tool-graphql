{"version":3,"file":"index.96417841fd1ef55b0525.hot-update.js","sources":["webpack:///./app/graphql/Reports/services/getLandlordsDataForReports.ts"],"sourcesContent":["import axios from 'axios';\nimport log from '../../../server/utils/log';\nimport { tracer } from '../../../server/utils/tracer';\nimport type { Landlords } from '../../../../shared/generated-types/graphql';\nimport nodeMonitor from '../../../server/utils/nodeMonitor';\n\nconst getLandlordsDataForReports = async (\n  methodToInvoke: string,\n  urlParams: string | undefined | null,\n  rentGuaranteeUserToken: string,\n  rentGuaranteeSessionToken: string,\n): Promise<Landlords | null> => {\n  let url = `${process.env.API}/rent-guarantee/api/v1/admin/${methodToInvoke}`;\n  if (urlParams && urlParams?.length > 0) {\n    url = `${url}?${urlParams}`;\n  }\n\n  const response = await axios\n    .get(`${url}`, {\n      headers: {\n        Cookie: `rent-guaranteeUserToken=${rentGuaranteeUserToken}; rent-guaranteeSessionToken=${rentGuaranteeSessionToken}`,\n      },\n    })\n    .then((res) => res.data.data)\n    .catch((err) => {\n      log.error(`Error fetching Landlords ${methodToInvoke} report: ${err}`);\n      return null;\n    });\n\n  if (response) {\n    // Increment a count:\n    await nodeMonitor.increment({ name: 'rent-guarantee-graphql.landlordsReports.viewed', amount: 1 });\n    return response;\n  }\n\n  return null;\n};\n\nexport default tracer.wrap(getLandlordsDataForReports);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAAA;AACA;AACA;AACA;AAVA;AAAA;AAaA;AACA;AADA;AADA;AAKA;AAAA;AAEA;AACA;AACA;AACA;AAtBA;AAWA;AACA;AAZA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAyBA;AAAA;AAAA;AACA;AA1BA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AA+BA;;;;A","sourceRoot":""}
{"version":3,"file":"index.e8c8db49f0cfc2f8d9fe.hot-update.js","sources":["webpack:///./app/graphql/PolicyDetails/services/getHistoryForPolicyRelatedActions.ts"],"sourcesContent":["import axios from 'axios';\nimport log from '../../../server/utils/log';\nimport { tracer } from '../../../server/utils/tracer';\nimport { api } from '../../utils/api';\nimport type { HistoryForPolicyRelatedActions } from '../../../../shared/generated-types/graphql';\nimport nodeMonitor from '../../../server/utils/nodeMonitor';\n\nconst getHistoryForPolicyRelatedActions = async (\n  policyId: string,\n  rentGuaranteeUserToken: string,\n  rentGuaranteeSessionToken: string,\n): Promise<HistoryForPolicyRelatedActions | null> => {\n  const response = await axios\n    .get(`${api.gql.historyForPolicyRelatedActions}?policyId=${policyId}`, {\n      headers: {\n        Cookie: `rent-guaranteeUserToken=${rentGuaranteeUserToken}; rent-guaranteeSessionToken=${rentGuaranteeSessionToken}`,\n      },\n    })\n    .then((res) => res.data.data)\n    .catch((err) => {\n      log.error(`Error fetching history for policy related actions for for policyId: ${policyId}: ${err}`);\n      return null;\n    });\n\n  if (response) {\n    // Increment a count:\n    await nodeMonitor.increment({ name: 'getHistoryForPolicyRelatedActions viewed', amount: 1 });\n    return response;\n  }\n\n  return null;\n};\n\nexport default tracer.wrap(getHistoryForPolicyRelatedActions);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AADA;AADA;AAKA;AAAA;AAEA;AACA;AACA;AACA;AAhBA;AAKA;AACA;AANA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAmBA;AAAA;AAAA;AACA;AApBA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAyBA;;;;A","sourceRoot":""}
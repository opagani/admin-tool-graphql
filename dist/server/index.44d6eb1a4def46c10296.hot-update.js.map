{"version":3,"file":"index.44d6eb1a4def46c10296.hot-update.js","sources":["webpack:///./app/graphql/SearchPolicies/resolvers.ts"],"sourcesContent":["import type { ResolverFn } from '../../types/ResolversFn';\nimport type {\n  History,\n  Policies,\n  PolicySearchTypes,\n  PolicyStatuses,\n  QueryHistoryArgs,\n  QuerySearchPoliciesArgs,\n} from '../../../shared/generated-types/graphql';\nimport { searchPoliciesServices } from './services';\n\nexport type RentGuaranteeContext = {\n  token: { 'rent-guaranteeUserToken': string; 'rent-guaranteeSessionToken': string };\n};\n\nexport type SearchPoliciesResolver<Query> = ResolverFn<Query, RentGuaranteeContext>;\n\nconst searchPolicies: SearchPoliciesResolver<QuerySearchPoliciesArgs> = (\n  _parent: unknown,\n  { searchType, searchValue }: QuerySearchPoliciesArgs,\n  context: RentGuaranteeContext,\n): Promise<Policies | null> => {\n  return searchPoliciesServices.getSearchPolicies(\n    searchType,\n    searchValue,\n    context?.token?.['rent-guaranteeUserToken'] || '',\n    context?.token?.['rent-guaranteeSessionToken'] || '',\n  );\n};\n\nconst history: SearchPoliciesResolver<QueryHistoryArgs> = (\n  _parent: unknown,\n  { logIdType, logIdValue }: QueryHistoryArgs,\n  context: RentGuaranteeContext,\n): Promise<History | null> => {\n  return searchPoliciesServices.getHistory(\n    logIdType,\n    logIdValue,\n    context?.token?.['rent-guaranteeUserToken'] || '',\n    context?.token?.['rent-guaranteeSessionToken'] || '',\n  );\n};\n\nconst policySearchTypes: SearchPoliciesResolver<unknown> = (\n  _parent: unknown,\n  _vars: unknown,\n  context: RentGuaranteeContext,\n): Promise<PolicySearchTypes | null> => {\n  return searchPoliciesServices.getPolicySearchTypes(\n    context?.token?.['rent-guaranteeUserToken'] || '',\n    context?.token?.['rent-guaranteeSessionToken'] || '',\n  );\n};\n\nconst policyStatuses: SearchPoliciesResolver<unknown> = (\n  _parent: unknown,\n  _vars: unknown,\n  context: RentGuaranteeContext,\n): Promise<PolicyStatuses | null> => {\n  return searchPoliciesServices.getPolicyStatuses(\n    context?.token?.['rent-guaranteeUserToken'] || '',\n    context?.token?.['rent-guaranteeSessionToken'] || '',\n  );\n};\n\nconst { GraphQLScalarType, Kind } = require('graphql');\n\nconst dateScalar = new GraphQLScalarType({\n  name: 'Date',\n  description: 'Date custom scalar type',\n  serialize(value: { getTime: () => unknown }) {\n    console.log('UNO', value);\n    return value.getTime(); // Convert outgoing Date to integer for JSON\n  },\n  parseValue(value: string | number | Date) {\n    console.log('DOS', value);\n    return new Date(value); // Convert incoming integer to Date\n  },\n  parseLiteral(ast: { kind: unknown; value: string }) {\n    if (ast.kind === Kind.INT) {\n      console.log('TRES', ast.value);\n      return new Date(parseInt(ast.value, 10)); // Convert hard-coded AST string to integer and then to Date\n    }\n    return null; // Invalid hard-coded value (not an integer)\n  },\n});\n\nconst searchPoliciesQueryResolvers = {\n  searchPolicies,\n  history,\n  policySearchTypes,\n  policyStatuses,\n  dateScalar,\n};\n\nconst searchPoliciesResolvers = {\n  Query: searchPoliciesQueryResolvers,\n};\n\nexport default searchPoliciesResolvers;\n"],"mappings":";;;;;;;;;;;;;;;;;;;AASA;AACA;AAOA;AAIA;AACA;AADA;AAAA;AACA;AAMA;AACA;AACA;AAIA;AACA;AADA;AAAA;AACA;AAMA;AACA;AACA;AAIA;AACA;AAAA;AAIA;AACA;AACA;AAIA;AACA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAjBA;AAoBA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AADA;AAIA;;;;A","sourceRoot":""}
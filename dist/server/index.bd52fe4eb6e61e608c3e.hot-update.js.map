{"version":3,"file":"index.bd52fe4eb6e61e608c3e.hot-update.js","sources":["webpack:///./app/graphql/SearchPolicies/services/getPolicyStatuses.ts"],"sourcesContent":["import axios from 'axios';\nimport log from '../../../server/utils/log';\nimport { tracer } from '../../../server/utils/tracer';\nimport { api } from '../../utils/api';\nimport type { PolicyStatuses } from '../../../../shared/generated-types/graphql';\nimport nodeMonitor from '../../../server/utils/nodeMonitor';\n\nconst getPolicyStatuses = async (\n  rentGuaranteeUserToken: string,\n  rentGuaranteeSessionToken: string,\n): Promise<PolicyStatuses | null> => {\n  const response = await axios\n    .get(`${api.gql.policyStatuses}`, {\n      headers: {\n        Cookie: `rent-guaranteeUserToken=${rentGuaranteeUserToken}; rent-guaranteeSessionToken=${rentGuaranteeSessionToken}`,\n      },\n    })\n    .then((res) => res.data.data)\n    .catch((err) => {\n      log.error(`Network error fetching policy statuses search types: ${err}`);\n      // Log an error (using the class instance's logger):\n      nodeMonitor.increment({ name: 'getPolicyStatuses failed', amount: 1 });\n      return null;\n    });\n\n  if (response) {\n    // Increment a count:\n    await nodeMonitor.increment({ name: 'getPolicyStatuses viewed', amount: 1 });\n    return response;\n  }\n\n  return null;\n};\n\nexport default tracer.wrap(getPolicyStatuses);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AADA;AADA;AAKA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAjBA;AAIA;AACA;AALA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAoBA;AAAA;AAAA;AACA;AArBA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AA0BA;;;;A","sourceRoot":""}
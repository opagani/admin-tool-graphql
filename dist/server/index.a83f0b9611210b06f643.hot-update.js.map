{"version":3,"file":"index.a83f0b9611210b06f643.hot-update.js","sources":["webpack:////Users/opagani/projects/zillowgroup/rentals-js/modules/monitor-base/src/baseMonitor.ts","webpack:////Users/opagani/projects/zillowgroup/rentals-js/modules/monitor-base/src/index.ts","webpack:////Users/opagani/projects/zillowgroup/rentals-js/modules/monitor-base/src/plugin.ts","webpack:////Users/opagani/projects/zillowgroup/rentals-js/modules/monitor-base/src/plugins/index.ts","webpack:////Users/opagani/projects/zillowgroup/rentals-js/modules/monitor-base/src/plugins/plain-plugin/index.ts","webpack:////Users/opagani/projects/zillowgroup/rentals-js/modules/monitor-base/src/reporter.ts","webpack:////Users/opagani/projects/zillowgroup/rentals-js/modules/monitor-base/src/reporters/index.ts","webpack:////Users/opagani/projects/zillowgroup/rentals-js/modules/monitor-base/src/reporters/log-reporter/index.ts","webpack:////Users/opagani/projects/zillowgroup/rentals-js/modules/monitor-base/src/statController.ts","webpack:////Users/opagani/projects/zillowgroup/rentals-js/modules/monitor-node/src/index.ts","webpack:////Users/opagani/projects/zillowgroup/rentals-js/modules/monitor-node/src/nodeMonitor.ts","webpack:////Users/opagani/projects/zillowgroup/rentals-js/modules/monitor-node/src/plugins/index.ts","webpack:////Users/opagani/projects/zillowgroup/rentals-js/modules/monitor-node/src/plugins/node-vitals-plugin/index.ts","webpack:////Users/opagani/projects/zillowgroup/rentals-js/modules/monitor-node/src/plugins/node-vitals-plugin/nodeVitals.ts","webpack:////Users/opagani/projects/zillowgroup/rentals-js/modules/monitor-node/src/plugins/pontoon-heartbeat-plugin/index.ts","webpack:////Users/opagani/projects/zillowgroup/rentals-js/modules/monitor-node/src/reporters/index.ts","webpack:////Users/opagani/projects/zillowgroup/rentals-js/modules/monitor-node/src/reporters/log-reporter/index.ts","webpack:////Users/opagani/projects/zillowgroup/rentals-js/modules/monitor-node/src/reporters/pontoon-reporter/index.ts","webpack:////Users/opagani/projects/zillowgroup/rentals-js/modules/particles-js-base-logger/src/baseLogger.ts","webpack:////Users/opagani/projects/zillowgroup/rentals-js/modules/particles-js-base-logger/src/index.ts","webpack:////Users/opagani/projects/zillowgroup/rentals-js/modules/particles-js-base-logger/src/plainLogger.ts","webpack:////Users/opagani/projects/zillowgroup/rentals-js/modules/particles-js-base-logger/src/silentLogger.ts","webpack:////Users/opagani/projects/zillowgroup/rentals-js/modules/particles-js-healthcheck/src/index.ts","webpack:////Users/opagani/projects/zillowgroup/rentals-js/modules/particles-js-node-logger/src/httpLogger.ts","webpack:////Users/opagani/projects/zillowgroup/rentals-js/modules/particles-js-node-logger/src/index.ts","webpack:////Users/opagani/projects/zillowgroup/rentals-js/modules/particles-js-node-logger/src/logMiddleware.ts","webpack:////Users/opagani/projects/zillowgroup/rentals-js/modules/particles-js-node-logger/src/logSync.ts","webpack:////Users/opagani/projects/zillowgroup/rentals-js/modules/particles-js-node-logger/src/pinoLogger.ts","webpack:////Users/opagani/projects/zillowgroup/rentals-js/modules/particles-js-utils/src/Batch.ts","webpack:////Users/opagani/projects/zillowgroup/rentals-js/modules/particles-js-utils/src/constants.ts","webpack:////Users/opagani/projects/zillowgroup/rentals-js/modules/particles-js-utils/src/deprecate.ts","webpack:////Users/opagani/projects/zillowgroup/rentals-js/modules/particles-js-utils/src/environmentUtils.ts","webpack:////Users/opagani/projects/zillowgroup/rentals-js/modules/particles-js-utils/src/getBrand.ts","webpack:////Users/opagani/projects/zillowgroup/rentals-js/modules/particles-js-utils/src/getIp.ts","webpack:////Users/opagani/projects/zillowgroup/rentals-js/modules/particles-js-utils/src/helpers/propertiesReader.ts","webpack:////Users/opagani/projects/zillowgroup/rentals-js/modules/particles-js-utils/src/http.ts","webpack:////Users/opagani/projects/zillowgroup/rentals-js/modules/particles-js-utils/src/index.ts","webpack:////Users/opagani/projects/zillowgroup/rentals-js/modules/particles-js-utils/src/node/index.ts","webpack:////Users/opagani/projects/zillowgroup/rentals-js/modules/particles-js-utils/src/safeCreateLogger.ts","webpack:////Users/opagani/projects/zillowgroup/rentals-js/modules/particles-js-utils/src/shutdownListener.ts","webpack:////Users/opagani/projects/zillowgroup/rentals-js/modules/particles-js-utils/src/testUtils.ts","webpack:////Users/opagani/projects/zillowgroup/rentals-js/modules/pontoon/src/batched-metrics.ts","webpack:////Users/opagani/projects/zillowgroup/rentals-js/modules/pontoon/src/index.ts","webpack:////Users/opagani/projects/zillowgroup/rentals-js/modules/pontoon/src/pontoon.ts","webpack:////Users/opagani/projects/zillowgroup/rentals-js/modules/trace-base/src/index.ts","webpack:////Users/opagani/projects/zillowgroup/rentals-js/modules/trace-node/src/index.ts","webpack:////Users/opagani/projects/zillowgroup/rentals-js/modules/trace-node/src/plugins/base.ts","webpack:////Users/opagani/projects/zillowgroup/rentals-js/modules/trace-node/src/plugins/datadog.ts","webpack:////Users/opagani/projects/zillowgroup/rentals-js/modules/trace-node/src/plugins/index.ts","webpack:////Users/opagani/projects/zillowgroup/rentals-js/modules/trace-node/src/tracer.ts","webpack:///./app/graphql/PolicyDetails/resolvers.ts","webpack:///./app/graphql/PolicyDetails/schema.graphql","webpack:///./app/graphql/PolicyDetails/services/cancelPolicy.ts","webpack:///./app/graphql/PolicyDetails/services/getExpandedPolicyDetails.ts","webpack:///./app/graphql/PolicyDetails/services/getHistoryForPolicyRelatedActions.ts","webpack:///./app/graphql/PolicyDetails/services/index.ts","webpack:///./app/graphql/Reports/resolvers.ts","webpack:///./app/graphql/Reports/schema.graphql","webpack:///./app/graphql/Reports/services/getLandlordsDataForReports.ts","webpack:///./app/graphql/Reports/services/getReportsDetails.ts","webpack:///./app/graphql/Reports/services/index.ts","webpack:///./app/graphql/SearchPolicies/PoliciesBuilder.ts","webpack:///./app/graphql/SearchPolicies/resolvers.ts","webpack:///./app/graphql/SearchPolicies/schema.graphql","webpack:///./app/graphql/SearchPolicies/services/getHistory.ts","webpack:///./app/graphql/SearchPolicies/services/getPolicySearchTypes.ts","webpack:///./app/graphql/SearchPolicies/services/getPolicyStatuses.ts","webpack:///./app/graphql/SearchPolicies/services/getSearchPolicies.ts","webpack:///./app/graphql/SearchPolicies/services/index.ts","webpack:///./app/graphql/federatedSchema.ts","webpack:///./app/graphql/index.ts","webpack:///./app/graphql/resolvers.ts","webpack:///./app/graphql/schema.ts","webpack:///./app/graphql/utils/api.ts","webpack:///./app/server/middleware/healthcheck.ts","webpack:///./app/server/middleware/nodeMonitor.ts","webpack:///./app/server/server.ts","webpack:///./app/server/utils/log.ts","webpack:///./app/server/utils/nodeMonitor.ts","webpack:///./app/server/utils/tracer.ts","webpack:///external \"@apollo/federation\"","webpack:///external \"apollo-server-express\"","webpack:///external \"axios\"","webpack:///external \"child_process\"","webpack:///external \"cookie-parser\"","webpack:///external \"core-js/modules/es.number.is-finite.js\"","webpack:///external \"core-js/modules/es.object.freeze.js\"","webpack:///external \"core-js/modules/es.object.values.js\"","webpack:///external \"core-js/modules/es.string.pad-start.js\"","webpack:///external \"cors\"","webpack:///external \"dd-trace\"","webpack:///external \"deepmerge\"","webpack:///external \"env-var\"","webpack:///external \"event-loop-stats\"","webpack:///external \"express-http-context\"","webpack:///external \"graphql-tag\"","webpack:///external \"http\"","webpack:///external \"https\"","webpack:///external \"ip-range-check\"","webpack:///external \"merge-graphql-schemas\"","webpack:///external \"nano-time\"","webpack:///external \"node-fetch\"","webpack:///external \"on-headers\"","webpack:///external \"perf_hooks\"","webpack:///external \"pino\"","webpack:///external \"pino-http\"","webpack:///external \"properties-reader\"","webpack:///external \"read-pkg\"","webpack:///external \"stream\"","webpack:///external \"url\"","webpack:///external \"v8\""],"sourcesContent":["import type { Logger } from '@zg-rentals/particles-js-base-logger';\n\nimport type { MonitorPlugin } from './plugin';\nimport type { MonitorReporter } from './reporter';\nimport type { StatController } from './statController';\n\nexport interface MonitorInterface<PluginType, ReporterType> {\n  logger?: Logger;\n  plugins?: Array<PluginType>;\n  reporters?: Array<ReporterType>;\n}\n\nexport interface MetricAlert {\n  periodMs: number;\n  minThreshold?: number;\n  maxThreshold?: number;\n  alertFrequencyMinutes: number;\n  customEmails?: Array<string>;\n  metricName?: string;\n  metricType?: 'GAUGE' | 'COUNT';\n}\n\nexport interface MetricOptions {\n  tags?: Record<string, unknown>;\n  alert?: MetricAlert;\n  [key: string]: unknown;\n}\n\nexport interface IncrementOptions {\n  name: string;\n  amount?: number;\n  options?: MetricOptions;\n}\n\nexport interface GaugeOptions {\n  name: string;\n  amount?: number;\n  options?: MetricOptions;\n}\nexport interface Monitor {\n  increment: (opts: IncrementOptions) => Promise<void>;\n  gauge: (opts: GaugeOptions) => Promise<void>;\n  error: ({ error }: { error: Error }) => Promise<void>;\n}\n\nexport class BaseMonitor<PluginType extends MonitorPlugin, ReporterType extends MonitorReporter> implements Monitor {\n  public plugins: Array<PluginType>;\n  public reporters: Array<ReporterType>;\n  public stats: Record<string, StatController>;\n\n  protected logger?: Logger;\n\n  constructor({ logger, plugins = [], reporters = [] }: MonitorInterface<PluginType, ReporterType> = {}) {\n    this.logger = logger;\n    this.plugins = plugins;\n    this.reporters = reporters;\n    this.stats = {};\n\n    this._initializeReporters();\n    this._trackMonitorStart();\n    this._initializePlugins();\n  }\n\n  private _initializeReporters() {\n    this.reporters.forEach((reporter) => {\n      reporter.onInitialize(this.logger);\n      if (reporter.stats) {\n        this.stats[reporter.reporterName] = reporter.stats;\n      }\n    });\n  }\n\n  private _initializePlugins() {\n    this.plugins.forEach((plugin) => {\n      plugin.onInitialize(this.increment.bind(this), this.gauge.bind(this), this.logger);\n      if (plugin.stats) {\n        this.stats[plugin.pluginName] = plugin.stats;\n      }\n    });\n  }\n\n  private async _trackMonitorStart() {\n    await this.increment({ name: 'Monitor started' });\n  }\n\n  async increment(...counts: Array<IncrementOptions>) {\n    const countPromises: Array<Promise<void>> = [];\n    counts.forEach(({ name, amount = 1, options }) => {\n      this.reporters.forEach((reporter) => {\n        countPromises.push(\n          reporter.onIncrement({\n            name,\n            amount,\n            options,\n          }),\n        );\n      });\n    });\n    await Promise.all(countPromises);\n  }\n\n  async gauge(...gauges: Array<GaugeOptions>) {\n    const gaugePromises: Array<Promise<void>> = [];\n    gauges.forEach(({ name, amount = 1, options }) => {\n      this.reporters.forEach((reporter) => {\n        gaugePromises.push(\n          reporter.onGauge({\n            name,\n            amount,\n            options,\n          }),\n        );\n      });\n    });\n    await Promise.all(gaugePromises);\n  }\n\n  async error({ error }: { error: Error }) {\n    await Promise.all(\n      this.reporters.map((reporter) => {\n        return reporter.onError({ error });\n      }),\n    );\n  }\n}\n","export * from './baseMonitor';\nexport * from './statController';\nexport * from './plugin';\nexport * from './reporter';\nexport * from './plugins';\nexport * from './reporters';\n","import type { Logger } from '@zg-rentals/particles-js-base-logger';\nimport type { GaugeOptions, IncrementOptions } from './baseMonitor';\nimport type { StatController } from './statController';\n\nexport interface Plugin {\n  pluginName: string;\n  logger?: Logger;\n  stats?: StatController;\n  increment?: (options: IncrementOptions) => void;\n  gauge?: (options: GaugeOptions) => void;\n  onInitialize(increment: (i: IncrementOptions) => void, gauge: (g: GaugeOptions) => void, logger?: Logger): void;\n}\n\nexport interface MonitorPluginInterface {\n  pluginName: string;\n  logger?: Logger;\n}\n\nexport abstract class MonitorPlugin {\n  readonly pluginName: string;\n  logger?: Logger;\n  stats?: StatController;\n  increment?: (options: IncrementOptions) => void;\n  gauge?: (options: GaugeOptions) => void;\n\n  abstract onInitialize(\n    increment: (i: IncrementOptions) => void,\n    gauge: (g: GaugeOptions) => void,\n    logger?: Logger,\n  ): void;\n\n  constructor({ pluginName, logger }: MonitorPluginInterface) {\n    this.pluginName = pluginName;\n    this.logger = logger;\n  }\n}\n","export * from './plain-plugin';\n","import type { MonitorPluginInterface } from '../../plugin';\nimport { MonitorPlugin } from '../../plugin';\nimport { StatController } from '../../statController';\n\nexport class PlainPlugin extends MonitorPlugin {\n  constructor(args: Omit<MonitorPluginInterface, 'pluginName'> = {}) {\n    super({\n      ...args,\n      pluginName: 'PlainPlugin',\n    });\n\n    this.stats = new StatController({\n      limit: 10,\n    });\n  }\n\n  onError({ error }: { error: Error }) {\n    this.logger && this.logger.error(error);\n\n    return Promise.resolve();\n  }\n\n  onInitialize() {}\n}\n","import type { Logger } from '@zg-rentals/particles-js-base-logger';\nimport type { StatController } from './statController';\n\nexport interface MetricFnInterface {\n  name: string;\n  amount: number;\n  options?: Record<string, unknown>;\n}\n\nexport interface MetricFn {\n  ({ name, amount, options }: MetricFnInterface): Promise<void>;\n}\n\nexport interface Reporter {\n  sampleRate: number;\n  reporterName: string;\n  logger?: Logger;\n  stats?: StatController;\n  onInitialize(logger?: Logger): void;\n  onIncrement: MetricFn;\n  onGauge: MetricFn;\n  onError<T>({ error, args }: { error: Error; args?: T }): Promise<void>;\n}\n\nexport interface MonitorReporterInterface {\n  reporterName: string;\n  logger?: Logger;\n  sampleRate?: number;\n}\n\nexport abstract class MonitorReporter implements Reporter {\n  readonly reporterName: string;\n  logger?: Logger;\n  stats?: StatController;\n  sampleRate: number;\n\n  abstract onInitialize(logger?: Logger): void;\n  abstract onIncrement(args: MetricFnInterface): Promise<void>;\n  abstract onGauge(args: MetricFnInterface): Promise<void>;\n  abstract onError<T>({ error, args }: { error: Error; args?: T }): Promise<void>;\n\n  constructor({ reporterName, logger, sampleRate = 1 }: MonitorReporterInterface) {\n    this.reporterName = reporterName;\n    this.logger = logger;\n    this.sampleRate = sampleRate;\n  }\n}\n","export * from './log-reporter';\n","import type { LogFn, Logger } from '@zg-rentals/particles-js-base-logger';\nimport type { MetricOptions } from '../../baseMonitor';\nimport { MonitorReporter } from '../../reporter';\n\nexport type LogLevel = 'info' | 'warn' | 'error' | 'debug' | 'trace';\nexport type LogReporterFilter = (name: string, amount?: number) => boolean;\n\nexport class LogReporter extends MonitorReporter {\n  level: LogLevel;\n  log?: LogFn;\n  filter?: LogReporterFilter;\n\n  constructor({\n    logger,\n    level = 'warn',\n    filter,\n    sampleRate,\n  }: {\n    logger?: Logger;\n    level?: LogLevel;\n    filter?: LogReporterFilter;\n    sampleRate?: number;\n  } = {}) {\n    super({\n      logger,\n      reporterName: 'LogReporter',\n      sampleRate,\n    });\n\n    this.level = level;\n    this.filter = filter;\n    this.setLogLevel();\n  }\n\n  setLogLevel() {\n    this.log = this.logger && this.logger[this.level];\n  }\n\n  onInitialize(logger?: Logger) {\n    this.logger = this.logger || logger;\n    this.setLogLevel();\n  }\n\n  shouldLog(name: string, amount?: number, options: MetricOptions = {}) {\n    if (this.log && (!this.filter || this.filter(name, amount))) {\n      const random = Math.random();\n      return (\n        (this.sampleRate === 1 || random <= this.sampleRate) &&\n        (typeof options.sampleRate !== 'number' || random <= options.sampleRate)\n      );\n    }\n  }\n\n  serializeTags(tags?: Record<string, unknown>) {\n    const tagStrings: Array<string> = [];\n    if (tags) {\n      Object.keys(tags).forEach((key) => {\n        tagStrings.push(`${key}=${tags[key]}`);\n      });\n    }\n    return tagStrings.length ? `; ${tagStrings.join(', ')}` : '';\n  }\n\n  onIncrement({ name, amount = 1, options }: { name: string; amount: number; options?: MetricOptions }) {\n    if (this.shouldLog(name, amount, options)) {\n      this.log!(`(count) ${name}: +${amount}${this.serializeTags(options?.tags)}`);\n    }\n\n    return Promise.resolve();\n  }\n\n  onGauge({ name, amount, options }: { name: string; amount: number; options?: MetricOptions }): Promise<void> {\n    if (this.shouldLog(name, amount, options)) {\n      this.log!(`(gauge) ${name}: ${amount}${this.serializeTags(options?.tags)}`);\n    }\n\n    return Promise.resolve();\n  }\n\n  onError({ error }: { error: Error }) {\n    this.logger?.error(error);\n\n    return Promise.resolve();\n  }\n}\n","export interface Stat {\n  name: string;\n  count: number;\n  url?: string;\n}\n\nexport class StatController {\n  onRecord: ({ name, count }: Stat) => Stat;\n\n  stats: Record<string, Stat>;\n  limit: number;\n\n  constructor({\n    onRecord,\n    limit = 50,\n  }: {\n    onRecord?: ({ name, count }: Stat) => Stat;\n    limit?: number;\n  } = {}) {\n    this.onRecord = onRecord || (({ name, count }) => ({ name, count }));\n    this.stats = {};\n    this.limit = limit;\n  }\n\n  record = ({ name, count = 1 }: { name: string; count?: number }): Stat => {\n    const existingStat = this.stats[name];\n\n    if (!existingStat) {\n      const keys = Object.keys(this.stats);\n      if (keys.length >= this.limit) {\n        delete this.stats[keys[0]];\n      }\n\n      const stat = this.onRecord({ name, count });\n\n      this.stats[name] = stat;\n\n      return stat;\n    }\n\n    existingStat.count = existingStat.count + count;\n\n    return existingStat;\n  };\n}\n","export * from './nodeMonitor';\nexport * from './plugins';\nexport * from './reporters';\n","import type { RequestHandler } from 'express';\nimport type { MonitorInterface } from '@zg-rentals/monitor-base';\nimport { BaseMonitor, MonitorPlugin, MonitorReporter } from '@zg-rentals/monitor-base';\n\nexport abstract class NodeMonitorPlugin extends MonitorPlugin {\n  abstract onShutdown(): void;\n}\n\nexport abstract class NodeMonitorReporter extends MonitorReporter {\n  abstract onRequest(...args: Parameters<RequestHandler>): void;\n}\n\nexport class NodeMonitor extends BaseMonitor<NodeMonitorPlugin, NodeMonitorReporter> {\n  constructor(args: MonitorInterface<NodeMonitorPlugin, NodeMonitorReporter> = {}) {\n    super(args);\n\n    this._initializeProcessListeners();\n    this._initializeOnEnd();\n  }\n\n  _initializeProcessListeners = (): void => {\n    process.on('uncaughtExceptionMonitor', (err: Error, origin: 'uncaughtException' | 'unhandledRejection') => {\n      this.logger &&\n        this.logger.error(\n          {\n            stack: err.stack,\n            name: err.name,\n          },\n          `[${origin}] node server about to crash: ${err.message}`,\n        );\n\n      this.error({ error: err });\n    });\n  };\n\n  _initializeOnEnd = (): void => {\n    process.on('SIGINT', () => {\n      this.logger && this.logger.warn(`SIGINT detected, running plugins onEnd`);\n\n      this.plugins.map((plugin) => {\n        plugin.onShutdown();\n      });\n\n      this.logger && this.logger.warn(`notify shutdown listener finished`);\n\n      // todo: hack: fix for pino needing to finish writing\n      // before process terminates\n      // should work to implement pino.final and custom pino.destination in ServerLogger\n      // https://github.com/pinojs/pino/blob/master/docs/api.md#pino-final\n      setTimeout(() => process.exit(), 1000);\n    });\n  };\n\n  async onRequest(...args: Parameters<RequestHandler>) {\n    await Promise.all(\n      this.reporters.map((reporter) => {\n        return reporter.onRequest(...args);\n      }),\n    );\n    args[2]();\n  }\n}\n","export * from './pontoon-heartbeat-plugin';\nexport * from './node-vitals-plugin';\n","import { MonitorPlugin } from '@zg-rentals/monitor-base';\nimport type { GaugeOptions, IncrementOptions } from '@zg-rentals/monitor-base';\nimport type { Logger } from '@zg-rentals/particles-js-base-logger';\nimport { NodeUtil } from '@zg-rentals/particles-js-utils';\nimport nodeVitals from './nodeVitals';\n\nexport interface NodeVitalsPluginArgs {\n  logger?: Logger;\n  webappName: string;\n  buildNumber?: number;\n  gitCommit?: string;\n  propertiesFilePath?: string;\n}\n\nexport interface NodeVitalsBuildInfo {\n  serverType: string;\n  buildNumber: string;\n  gitCommit: string;\n}\n\nconst DEFAULT_PROPERTIES_FILE_PATH = '/hotpads/config/server.properties';\nconst INTERVAL_MS = 5_000;\n\nexport class NodeVitalsPlugin extends MonitorPlugin {\n  buildInfo: NodeVitalsBuildInfo;\n  logger?: Logger;\n  interval?: NodeJS.Timeout;\n\n  constructor({\n    webappName,\n    buildNumber = 0,\n    gitCommit = '',\n    logger,\n    propertiesFilePath = DEFAULT_PROPERTIES_FILE_PATH,\n  }: NodeVitalsPluginArgs) {\n    super({\n      logger,\n      pluginName: 'NodePontoonPlugin',\n    });\n\n    const { serverProperties } = new NodeUtil.EnvironmentUtil(propertiesFilePath, { appName: webappName });\n\n    this.buildInfo = {\n      serverType: serverProperties.type,\n      buildNumber: buildNumber.toString(),\n      gitCommit,\n    };\n\n    const requiredArgs = ['buildNumber', 'gitCommit'];\n    const missingArgs = requiredArgs.filter(\n      (arg) => this.buildInfo[arg as keyof NodeVitalsPlugin['buildInfo']] === undefined,\n    );\n    if (missingArgs.length) {\n      const errorMessage = `${this.pluginName} plugin missing required arg(s): ${missingArgs.join(', ')}`;\n      if (this.logger) {\n        this.logger.error(errorMessage);\n      }\n      throw new Error(errorMessage);\n    }\n  }\n\n  initVitals() {\n    nodeVitals.start(this);\n    this.interval = setInterval(() => nodeVitals.record(this), INTERVAL_MS);\n  }\n\n  onInitialize(increment: (i: IncrementOptions) => void, gauge: (g: GaugeOptions) => void, logger?: Logger) {\n    this.increment = increment;\n    this.gauge = gauge;\n    this.logger = this.logger || logger;\n    this.initVitals();\n  }\n\n  async onShutdown() {\n    if (this.interval) {\n      clearInterval(this.interval);\n      delete this.interval;\n    }\n    nodeVitals.stop();\n  }\n}\n","import os from 'os';\nimport fs from 'fs';\nimport v8 from 'v8';\nimport { constants, PerformanceObserver } from 'perf_hooks';\nimport eventLoopStats from 'event-loop-stats';\nimport type { NodeVitalsPlugin } from '.';\nimport type { PerformanceEntry } from 'perf_hooks';\n\nconst gcFlagMap = {\n  [constants.NODE_PERFORMANCE_GC_MAJOR]: 'MarkSweepCompact',\n  [constants.NODE_PERFORMANCE_GC_MINOR]: 'Scavange',\n  [constants.NODE_PERFORMANCE_GC_INCREMENTAL]: 'IncrementalMarking',\n  [constants.NODE_PERFORMANCE_GC_WEAKCB]: 'ProcessWeakCallbacks',\n};\n\nlet observer: PerformanceObserver;\n\nexport const Bytes = {\n  toKb: (bytes: number) => Math.round(bytes / 1024),\n  toMb: (bytes: number) => Math.round(bytes / 1024 / 1024),\n};\n\nexport default {\n  start({ increment }: NodeVitalsPlugin) {\n    if (increment) {\n      increment({ name: 'App startup', amount: 1 });\n\n      observer = new PerformanceObserver((list) => {\n        list.getEntries().forEach((entry: PerformanceEntry) => {\n          // @ts-ignore the type definition is missing this property\n          const kindFlag = entry.kind;\n          const typeName = `${kindFlag}-${gcFlagMap[kindFlag]}`;\n          const pauseMS = Math.round(entry.duration);\n          increment({ name: 'gc type ' + typeName, amount: 1 });\n          increment({ name: 'gc pause ms', amount: pauseMS });\n          increment({ name: 'gc type ' + typeName + ' pause ms', amount: pauseMS });\n        });\n      });\n\n      observer.observe({\n        entryTypes: ['gc'],\n      });\n    }\n  },\n\n  stop() {\n    observer.disconnect();\n  },\n\n  record({ buildInfo, increment, gauge }: NodeVitalsPlugin) {\n    const serverType = buildInfo.serverType;\n    const loopStats = eventLoopStats.sense();\n\n    if (increment) {\n      increment({ name: 'App heartbeat ' + serverType, amount: 1 });\n      increment({ name: 'App heartbeat type-build ' + serverType + ' ' + buildInfo.buildNumber, amount: 1 });\n      increment({ name: 'App heartbeat type-commit ' + serverType + ' ' + buildInfo.gitCommit, amount: 1 });\n      increment({ name: 'App heartbeat build ' + buildInfo.buildNumber, amount: 1 });\n      increment({ name: 'App heartbeat commit ' + buildInfo.gitCommit, amount: 1 });\n      increment({ name: 'event loops', amount: loopStats.num });\n    }\n\n    if (gauge) {\n      const loadavg = os.loadavg();\n      const loadavgScaler = 1_000; //pontoon rounds to integer, scale for additional precision\n      gauge({ name: 'os load avg 1m', amount: loadavg[0] * loadavgScaler });\n      gauge({ name: 'os load avg 5m', amount: loadavg[1] * loadavgScaler });\n      gauge({ name: 'os load avg 15m', amount: loadavg[2] * loadavgScaler });\n\n      const totalmem = os.totalmem();\n      const freemem = os.freemem();\n      const usedmem = totalmem - freemem;\n      gauge({ name: 'memory total MB', amount: Bytes.toMb(totalmem) });\n      gauge({ name: 'memory free MB', amount: Bytes.toMb(freemem) });\n      gauge({ name: 'memory used MB', amount: Bytes.toMb(usedmem) });\n\n      const memoryUsage = process.memoryUsage();\n      gauge({ name: 'node memory mb rss', amount: Bytes.toMb(memoryUsage.rss) });\n      gauge({ name: 'node memory mb heapTotal', amount: Bytes.toMb(memoryUsage.heapTotal) });\n      gauge({ name: 'node memory mb heapUsed', amount: Bytes.toMb(memoryUsage.heapUsed) });\n      gauge({ name: 'node memory mb external', amount: Bytes.toMb(memoryUsage.external) });\n\n      v8.getHeapSpaceStatistics().forEach(\n        ({ space_name, space_size, space_used_size, space_available_size, physical_space_size }) => {\n          const prefix = 'v8 heap kb ' + space_name + ' ';\n          gauge({ name: prefix + 'space_size', amount: Bytes.toKb(space_size) });\n          gauge({ name: prefix + 'space_used_size', amount: Bytes.toKb(space_used_size) });\n          gauge({ name: prefix + 'space_available_size', amount: Bytes.toKb(space_available_size) });\n          gauge({ name: prefix + 'physical_space_size', amount: Bytes.toKb(physical_space_size) });\n        },\n      );\n\n      gauge({ name: 'event loop ms max', amount: loopStats.max });\n      gauge({ name: 'event loop ms min', amount: loopStats.min });\n      gauge({ name: 'event loop ms avg', amount: loopStats.sum / loopStats.num });\n\n      fs.readFile('/proc/sys/fs/file-nr', (err, out) => {\n        if (!err) {\n          const fileNrParts = out.toString().replace(/\\n/g, '').split(' ');\n          const fileHandles = parseInt(fileNrParts[0], 10);\n          gauge({ name: 'file-nr allocated file handles', amount: fileHandles });\n        }\n      });\n    }\n  },\n};\n","import { MonitorPlugin } from '@zg-rentals/monitor-base';\nimport type { GaugeOptions, IncrementOptions } from '@zg-rentals/monitor-base';\nimport type { Logger } from '@zg-rentals/particles-js-base-logger';\nimport { Pontoon } from '@zg-rentals/pontoon';\nimport { NodeUtil } from '@zg-rentals/particles-js-utils';\nimport type { WebappInstance } from '@zg-rentals/pontoon';\n\nexport interface PontoonHeartbeatPluginArgs {\n  api: string;\n  apiKey: string;\n  logger?: Logger;\n  webappName: string;\n  startupDate: number | Date | string;\n  buildDate: number | Date | string;\n  buildId?: number;\n  commitId?: string;\n  gitBranch?: string;\n  propertiesFilePath?: string;\n  processManagerId?: string;\n}\n\nconst HEARTBEAT_INTERVAL_MS = 5_000;\nconst DEFAULT_PROPERTIES_FILE_PATH = '/hotpads/config/server.properties';\nconst REQUIRED_ARGS = ['api', 'apiKey', 'webappName', 'buildId', 'commitId', 'gitBranch', 'startupDate', 'buildDate'];\n\nexport class PontoonHeartbeatPlugin extends MonitorPlugin {\n  pontoon: Pontoon;\n  appData: WebappInstance;\n  logger?: Logger;\n  heartbeat?: NodeJS.Timeout;\n\n  constructor({\n    api,\n    apiKey,\n    webappName,\n    startupDate,\n    buildDate,\n    buildId = 0,\n    commitId = '',\n    gitBranch = '',\n    logger,\n    propertiesFilePath = DEFAULT_PROPERTIES_FILE_PATH,\n    processManagerId = process.env.pm_id,\n  }: PontoonHeartbeatPluginArgs) {\n    super({\n      logger,\n      pluginName: 'NodePontoonPlugin',\n    });\n\n    const { serverProperties, envProperties } = new NodeUtil.EnvironmentUtil(propertiesFilePath, {\n      appName: webappName,\n    });\n    const serverName = serverProperties.name || '';\n    const containerIdMatch = envProperties.hostname.match(/-\\d+$/);\n    const containerId = containerIdMatch ? containerIdMatch[0] : '';\n    const processManagerIdSuffix = processManagerId ? `-${processManagerId}` : '';\n\n    this.appData = {\n      api,\n      apiKey,\n      webappName,\n      serverName: `${serverName}${containerId}${processManagerIdSuffix}`,\n      serverType: serverProperties.type,\n      serverPublicIp: serverProperties.publicIp,\n      serverPrivateIp: serverProperties.privateIp,\n      buildId: buildId.toString(),\n      commitId,\n      gitBranch,\n      startupDate: this.formatDate(startupDate),\n      buildDate: this.formatDate(buildDate),\n    };\n\n    const missingArgs = REQUIRED_ARGS.filter((arg) => this.appData[arg as keyof WebappInstance] === undefined);\n    if (missingArgs.length) {\n      const errorMessage = `${this.pluginName} plugin missing required arg(s): ${missingArgs.join(', ')}`;\n      if (this.logger) {\n        this.logger.error(errorMessage);\n      }\n      throw new Error(errorMessage);\n    }\n\n    this.pontoon = new Pontoon({ api, apiKey });\n  }\n\n  initHeartbeat() {\n    this.heartbeat = setInterval(() => {\n      this.pontoon.addHeartbeat({\n        ...this.appData,\n        refreshedLast: this.formatDate(Date.now()),\n      });\n    }, HEARTBEAT_INTERVAL_MS);\n  }\n\n  onInitialize(increment: (i: IncrementOptions) => void, gauge: (g: GaugeOptions) => void, logger?: Logger) {\n    this.logger = this.logger || logger;\n    this.initHeartbeat();\n  }\n\n  async onShutdown() {\n    if (this.heartbeat) {\n      clearInterval(this.heartbeat);\n      delete this.heartbeat;\n    }\n    await this.pontoon.removeHeartbeat({\n      webappName: this.appData.webappName,\n      serverName: this.appData.serverName,\n    });\n  }\n\n  formatDate(date: string | Date | number = new Date()): string {\n    if (!(date instanceof Date)) {\n      date = new Date(date);\n    }\n    return date.toISOString();\n  }\n}\n","export * from './pontoon-reporter';\nexport * from './log-reporter';\n","import type { Logger } from '@zg-rentals/particles-js-base-logger';\nimport type { LogLevel } from '@zg-rentals/monitor-base';\nimport type { Request } from 'express';\nimport { LogReporter } from '@zg-rentals/monitor-base';\n\nexport class NodeLogReporter extends LogReporter {\n  enableRequestLogs: boolean;\n\n  constructor({\n    logger,\n    level = 'warn',\n    enableRequestLogs = true,\n    sampleRate,\n  }: {\n    logger?: Logger;\n    level?: LogLevel;\n    enableRequestLogs?: boolean;\n    sampleRate?: number;\n  } = {}) {\n    super({\n      logger,\n      level,\n      sampleRate,\n    });\n\n    this.enableRequestLogs = enableRequestLogs;\n  }\n\n  onRequest(req: Request) {\n    if (this.enableRequestLogs && this.log && (this.sampleRate === 1 || Math.random() <= this.sampleRate)) {\n      this.log(`${req.method}: ${req.url}`);\n    }\n\n    return Promise.resolve();\n  }\n}\n","import type { MetricFnInterface, MetricOptions } from '@zg-rentals/monitor-base';\nimport type { Logger } from '@zg-rentals/particles-js-base-logger';\nimport type { MetricAlert } from '@zg-rentals/pontoon';\nimport type { Request, Response } from 'express';\nimport { MonitorReporter, StatController } from '@zg-rentals/monitor-base';\nimport { Pontoon } from '@zg-rentals/pontoon';\nimport { NodeUtil } from '@zg-rentals/particles-js-utils';\nimport onHeaders from 'on-headers';\n\nexport interface NodeMonitorPontoonReporterArgs {\n  api: string;\n  apiKey: string;\n  logger?: Logger;\n  webappName: string;\n  propertiesFilePath?: string;\n  processManagerId?: string;\n  sampleRate?: number;\n}\n\nexport interface PontoonMetricFnInterface extends MetricFnInterface {\n  name: string;\n  amount: number;\n  options?: MetricOptions;\n}\n\nconst DEFAULT_PROPERTIES_FILE_PATH = '/hotpads/config/server.properties';\n\nexport class NodeMonitorPontoonReporter extends MonitorReporter {\n  pontoon: Pontoon;\n  intervals: Record<string, NodeJS.Timeout> = {};\n  logger?: Logger;\n  webappName: string;\n  serverName: string;\n  stats: StatController;\n  registeredAlerts: Record<string, boolean> = {};\n\n  constructor({\n    api,\n    apiKey,\n    webappName,\n    logger,\n    propertiesFilePath = DEFAULT_PROPERTIES_FILE_PATH,\n    processManagerId = process.env.pm_id,\n    sampleRate,\n  }: NodeMonitorPontoonReporterArgs) {\n    super({\n      logger,\n      reporterName: 'NodePontoonReporter',\n      sampleRate,\n    });\n\n    const { serverProperties, envProperties } = new NodeUtil.EnvironmentUtil(propertiesFilePath, {\n      appName: webappName,\n    });\n    const serverName = serverProperties.name || '';\n    const containerIdMatch = envProperties.hostname.match(/-\\d+$/);\n    const containerId = containerIdMatch ? containerIdMatch[0] : '';\n    const processManagerIdSuffix = processManagerId ? `-${processManagerId}` : '';\n\n    this.webappName = webappName;\n    this.serverName = `${serverName}${containerId}${processManagerIdSuffix}`;\n\n    if (api === undefined || apiKey === undefined || webappName === undefined) {\n      const errorMessage = `${this.reporterName} reporter missing required arg(s)`;\n      this.logger?.error(errorMessage);\n      throw new Error(errorMessage);\n    }\n\n    this.pontoon = new Pontoon({ api, apiKey });\n\n    this.stats = new StatController({\n      limit: 100,\n      onRecord: (stat) => this.pontoon.addStatUrl({ stat, serviceName: webappName, api }),\n    });\n  }\n\n  onInitialize(logger?: Logger) {\n    this.logger = this.logger || logger;\n  }\n\n  shouldSave(options: Record<string, unknown> = {}) {\n    const random = Math.random();\n    return random <= this.sampleRate && (typeof options.sampleRate !== 'number' || random <= options.sampleRate);\n  }\n\n  async onIncrement({ name, amount = 1, options }: PontoonMetricFnInterface) {\n    if (options?.alert) {\n      this.registerAlert({\n        metricName: name,\n        metricType: 'COUNT',\n        ...options.alert,\n      } as MetricAlert);\n    }\n    if (this.shouldSave(options)) {\n      this.logger?.info(`incrementing ${name} by ${amount}`);\n      await this.pontoon\n        .sendCounts({\n          serviceName: this.webappName,\n          serverName: this.serverName,\n          counts: {\n            [Date.now()]: {\n              [name]: amount,\n            },\n          },\n        })\n        .then(() => {\n          this.stats.record({ name, count: amount });\n          return;\n        })\n        .catch((e) => this.onError({ error: e }));\n    }\n  }\n\n  async onGauge({ name, amount, options }: PontoonMetricFnInterface): Promise<void> {\n    if (options?.alert) {\n      this.registerAlert({\n        metricName: name,\n        metricType: 'GAUGE',\n        ...options.alert,\n      } as MetricAlert);\n    }\n    if (this.shouldSave(options)) {\n      this.logger?.info(`${name}, ${amount}`);\n      await this.pontoon\n        .sendGauges({\n          serviceName: this.webappName,\n          serverName: this.serverName,\n          gauges: {\n            [name]: [[Date.now(), amount]],\n          },\n        })\n        .then(() => this.stats.record({ name, count: amount }))\n        .catch((e) => this.onError({ error: e }));\n    }\n  }\n\n  async onError({ error }: { error: Error }) {\n    this.logger?.error(error);\n  }\n\n  registerAlert(alertOptions: MetricAlert) {\n    if (this.registeredAlerts[alertOptions.metricName]) {\n      return;\n    }\n    if (!alertOptions.periodMs || !alertOptions.alertFrequencyMinutes) {\n      this.logger?.error('could not register alert, missing frequency information');\n      return;\n    }\n\n    if (alertOptions.minThreshold === undefined && alertOptions.maxThreshold === undefined) {\n      this.logger?.error('could not register alert, no min or max threshold');\n      return;\n    }\n\n    this.logger?.debug(`registering metric alert: ${alertOptions.metricType} ${alertOptions.metricName}`);\n    this.registeredAlerts[alertOptions.metricName] = true;\n    return this.pontoon.registerAlert(alertOptions);\n  }\n\n  onRequest(req: Request, res: Response) {\n    this.onIncrement({ name: 'request', amount: 1 });\n    this.onIncrement({ name: `request method ${req.method}`, amount: 1 });\n    onHeaders(res, () => {\n      const statusCode = Number.isFinite(res.statusCode) ? res.statusCode : 'UNKNOWN';\n      this.onIncrement({ name: `response status code ${statusCode}`, amount: 1 });\n    });\n  }\n}\n","import type { LogFn, Logger } from '.';\n\n// export interface ChildLogger<T> extends BaseLogger<T> {\n//   level: string;\n// }\n\nexport abstract class BaseLogger<T> implements Logger {\n  _children: Map<string, T> = new Map();\n  _enableLogSync: boolean = false;\n  __reset: () => void;\n  runtime: string | undefined;\n  level: string | undefined;\n\n  constructor({\n    __reset = () => {},\n    runtime,\n    level,\n  }: {\n    __reset?: () => void;\n    runtime?: 'node' | 'browser';\n    level?: string;\n  } = {}) {\n    this.__reset = __reset;\n    this.runtime = runtime;\n    this.level = level;\n  }\n\n  setChildLogLevel?(name: string, level?: string): void;\n\n  abstract child(name: string, loggerArgs: unknown): BaseLogger<T>;\n  abstract error(...args: Parameters<LogFn>): void;\n  abstract info(...args: Parameters<LogFn>): void;\n  abstract warn(...args: Parameters<LogFn>): void;\n  abstract debug(...args: Parameters<LogFn>): void;\n  abstract trace(...args: Parameters<LogFn>): void;\n}\n","export * from './plainLogger';\nexport * from './silentLogger';\nexport * from './baseLogger';\n\nexport interface LogFn {\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  <T extends object>(obj: T, msg?: string, ...args: Array<unknown>): void;\n  (msg: string, ...args: Array<unknown>): void;\n}\nexport interface Logger {\n  error: LogFn;\n  warn: LogFn;\n  info: LogFn;\n  debug: LogFn;\n  trace: LogFn;\n  _enableLogSync?: boolean;\n  level?: string;\n  child: (name: string, loggerArgs?: Record<string, unknown>) => unknown;\n  setChildLogLevel?: (name: string, level?: string) => void;\n  __reset?: () => void;\n  _children: Map<string, unknown>;\n  runtime?: string;\n}\n\nexport interface GetLoggerInterface {\n  __reset?: () => void;\n  type?: string;\n  [key: string]: unknown;\n}\n\nexport type LoggerInstance = new <T extends Record<string, unknown>>(args: T) => Logger;\n\nexport function getLoggerWrapper({ loggerMap }: { loggerMap: Record<string, LoggerInstance> }) {\n  let _defaultLogger: Logger | undefined;\n\n  return function getLogger<LoggerArgs extends GetLoggerInterface>(loggerArgs?: LoggerArgs): Logger {\n    const { type = 'plain' } = loggerArgs || {};\n\n    if (!type || !loggerMap[type]) {\n      throw new Error(`invalid logger type: ${type} not found in loggerMap`);\n    }\n\n    const LoggerInstance = loggerMap[type];\n\n    if (!_defaultLogger) {\n      _defaultLogger = new LoggerInstance({\n        __reset: () => {\n          _defaultLogger = undefined;\n        },\n        ...loggerArgs,\n      });\n    }\n\n    return _defaultLogger;\n  };\n}\n","/* eslint-disable no-console */\nimport { BaseLogger } from './baseLogger';\nimport type { GetLoggerInterface } from '.';\n\nexport type Level = 'trace' | 'debug' | 'info' | 'warn' | 'error';\n\nexport interface PlainLoggerArgs {\n  level?: Level;\n}\n\nconst levelMap: Record<Level, number> = {\n  trace: 0,\n  debug: 1,\n  info: 2,\n  warn: 3,\n  error: 4,\n};\n\nexport interface PlainLoggerInterface extends GetLoggerInterface {\n  level: Level;\n}\n\nexport class PlainLogger extends BaseLogger<PlainLogger> {\n  level: Level;\n\n  constructor({ __reset, level }: { __reset?: () => void; level?: Level } = {}) {\n    super({ __reset });\n    this.level = level || 'warn';\n  }\n\n  error(...args: Array<unknown>) {\n    if (levelMap[this.level] <= levelMap.error) {\n      console.error(args);\n    }\n  }\n  warn(...args: Array<unknown>) {\n    if (levelMap[this.level] <= levelMap.warn) {\n      console.warn(args);\n    }\n  }\n  info(...args: Array<unknown>) {\n    if (levelMap[this.level] <= levelMap.info) {\n      console.info(args);\n    }\n  }\n  debug(...args: Array<unknown>) {\n    if (levelMap[this.level] <= levelMap.debug) {\n      console.debug(args);\n    }\n  }\n  trace(...args: Array<unknown>) {\n    if (levelMap[this.level] <= levelMap.trace) {\n      console.trace(args);\n    }\n  }\n  child(name: string) {\n    const logger = new PlainLogger();\n\n    this._children.set(name, logger);\n\n    return logger;\n  }\n}\n","import { BaseLogger } from './baseLogger';\n\nexport class SilentLogger extends BaseLogger<SilentLogger> {\n  level: string;\n\n  constructor({ __reset }: { __reset?: () => void } = {}) {\n    super({ __reset });\n    this.level = '';\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  error(...args: Array<unknown>) {}\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  warn(...args: Array<unknown>) {}\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  info(...args: Array<unknown>) {}\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  debug(...args: Array<unknown>) {}\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  trace(...args: Array<unknown>) {}\n  child(name: string) {\n    const logger = new SilentLogger();\n\n    this._children.set(name, logger);\n\n    return logger;\n  }\n}\n","import type { Logger } from '@zg-rentals/particles-js-base-logger';\nimport { Utils } from '@zg-rentals/particles-js-utils';\nimport type express from 'express';\nimport os from 'os';\nimport readPkg from 'read-pkg';\nimport v8 from 'v8';\n\nexport const BAD_SHUTDOWN_TOKEN_MSG = 'invalid shutdown token provided.';\nexport const GOOD_STATUS_CODE = 200;\nexport const SHUTDOWN_STATUS_CODE = 555;\n\nexport interface onPingInterface {\n  hasAccess: boolean;\n  isProtected: boolean;\n  response: { [key: string]: unknown };\n}\n\nexport interface HealthcheckInterface {\n  shutdownToken?: string;\n  accessToken?: string;\n  protectedQueryParams?: Array<string>;\n  onPing?: ({ hasAccess, isProtected, response }: onPingInterface) => unknown;\n  logger?: Logger;\n  buildNumber: string | number;\n  maxMemoryThresholdMb?: number;\n}\n\nexport interface EnvironmentData {\n  node_version: string;\n  NODE_ENV: string;\n  gitCommit: string;\n  gitUsername: string;\n  gitBranch: string;\n  buildDate: string;\n}\n\nexport interface ServerData {\n  host: string;\n  uptime: number;\n  memory_used: NodeJS.MemoryUsage;\n  memory_total: number;\n  memory_free: number;\n  average_load: Array<number>;\n  heap: v8.HeapInfo;\n}\n\nexport interface DependencyMap {\n  [key: string]: string;\n}\n\nexport interface PackageJson {\n  name: string;\n  alias?: string;\n  version?: string;\n  main?: string;\n  module?: string;\n  bin?: string | Record<string, string>;\n  scripts?: Record<string, string>;\n  sideEffects?: boolean;\n  publishConfig?: Record<string, string>;\n  private?: boolean;\n  dependencies?: DependencyMap;\n  devDependencies?: DependencyMap;\n  peerDependencies?: DependencyMap;\n  workspaces?: Array<string>;\n}\n\nexport type ConfidentialData = EnvironmentData & ServerData & Pick<PackageJson, 'dependencies' | 'devDependencies'>;\n\nexport class Healthcheck {\n  shutdownToken?: string;\n  protectedQueryParams: Array<string>;\n  accessToken?: string;\n  isShuttingDown: boolean;\n  logger?: Logger;\n  packageJson: readPkg.NormalizedPackageJson;\n  buildNumber: number;\n  onPing?: ({ hasAccess, isProtected, response }: onPingInterface) => unknown;\n  maxMemoryThresholdMb: number;\n\n  constructor({\n    logger,\n    shutdownToken,\n    accessToken,\n    buildNumber = 0,\n    onPing,\n    protectedQueryParams = ['runscope', 'sonar', 'liveliness', 'site_liveliness'],\n    maxMemoryThresholdMb = 5_120,\n  }: HealthcheckInterface) {\n    this.logger = logger;\n    this.accessToken = accessToken;\n    this.shutdownToken = shutdownToken;\n    this.protectedQueryParams = protectedQueryParams;\n    this.isShuttingDown = false;\n    this.buildNumber = Number(buildNumber);\n    this.setupPm2GracefulExit();\n    this.packageJson = readPkg.sync();\n    this.onPing = onPing;\n    this.maxMemoryThresholdMb = maxMemoryThresholdMb;\n\n    this.logger?.info('instantiating healthcheck');\n  }\n\n  setupPm2GracefulExit = (): void => {\n    if (Utils.isProd() && process && process.send) {\n      this.logger?.debug('setting up pm2 graceful exit');\n\n      process.on('message', (message: { topic?: string; [key: string]: unknown }) => {\n        this.logger?.warn(message, 'healthcheck received a process message');\n\n        const { topic } = message;\n\n        if (topic === 'TRIGGER_SHUTDOWN') {\n          this.isShuttingDown = true;\n        }\n      });\n    }\n  };\n\n  bytesToMb(bytes: number): number {\n    if (bytes === 0) return 0;\n\n    return bytes / 1024 / 1024;\n  }\n\n  getPackageJsonData(): Pick<PackageJson, 'dependencies' | 'devDependencies'> {\n    const data: { dependencies: DependencyMap; devDependencies: DependencyMap } = {\n      dependencies: {},\n      devDependencies: {},\n    };\n\n    const { dependencies = {}, devDependencies = {} } = this.packageJson;\n\n    for (const dependency in dependencies) {\n      if (dependency.startsWith('@zg-rentals/')) {\n        data.dependencies[dependency] = dependencies[dependency];\n      }\n    }\n    for (const dependency in devDependencies) {\n      if (dependency.startsWith('@zg-rentals/')) {\n        data.devDependencies[dependency] = devDependencies[dependency];\n      }\n    }\n\n    return data;\n  }\n\n  getEnvironmentData(): EnvironmentData {\n    return {\n      NODE_ENV: process.env.NODE_ENV || 'development',\n      node_version: process.versions.node,\n      gitCommit: process.env.GIT_COMMIT || '',\n      gitUsername: process.env.GIT_COMMIT_AUTHOR || '',\n      gitBranch: process.env.BRANCH_NAME || '',\n      buildDate: process.env.BUILD_TIME || '',\n    };\n  }\n\n  getServerData(): ServerData {\n    return {\n      host: os.hostname(),\n      uptime: process.uptime(),\n      memory_used: process.memoryUsage(),\n      memory_total: os.totalmem(),\n      memory_free: os.freemem(),\n      average_load: os.loadavg(),\n      heap: v8.getHeapStatistics(),\n    };\n  }\n\n  hasAccess = (req: express.Request): boolean => {\n    if (!this.accessToken) return false;\n\n    if (req.query.accessToken === this.accessToken) return true;\n\n    return false;\n  };\n\n  isMemoryOverloaded(memoryUsage: NodeJS.MemoryUsage): boolean {\n    if (!memoryUsage || !memoryUsage.rss) {\n      return false;\n    }\n\n    const mb = this.bytesToMb(memoryUsage.rss);\n\n    if (mb >= Number(this.maxMemoryThresholdMb)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  aggregateConfidentialData = (req: express.Request): ConfidentialData | undefined => {\n    const data = {\n      ...this.getPackageJsonData(),\n      ...this.getEnvironmentData(),\n      ...this.getServerData(),\n    };\n\n    if (this.isMemoryOverloaded(data.memory_used)) {\n      this.isShuttingDown = true;\n    }\n\n    if (!this.hasAccess(req)) {\n      return;\n    }\n\n    return data;\n  };\n\n  generateBaseResponse(): { name: string; buildNumber: number } {\n    return {\n      name: this.packageJson.name,\n      buildNumber: this.buildNumber,\n    };\n  }\n\n  shouldIgnoreShutdown(req: express.Request): boolean {\n    if (typeof req.query.mode === 'string' && this.protectedQueryParams.includes(req.query.mode)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  getStatusCode = (req: express.Request): number => {\n    if (this.isShuttingDown) {\n      if (this.shouldIgnoreShutdown(req)) {\n        this.logger?.warn(`app is ignoring shutdown mode, returning status code=${GOOD_STATUS_CODE}`);\n        return GOOD_STATUS_CODE;\n      }\n      this.logger?.warn(`app is in shutdown mode, returning status code=${SHUTDOWN_STATUS_CODE}`);\n\n      return SHUTDOWN_STATUS_CODE;\n    } else {\n      return GOOD_STATUS_CODE;\n    }\n  };\n\n  check = (req: express.Request, res: express.Response): void => {\n    try {\n      const confidentialData = this.aggregateConfidentialData(req);\n      const baseResponse = this.generateBaseResponse();\n      const status = this.getStatusCode(req);\n\n      const response = {\n        ...confidentialData,\n        ...baseResponse,\n      };\n\n      if (this.onPing) {\n        res.status(status).json(\n          this.onPing({\n            hasAccess: this.hasAccess(req),\n            isProtected: this.shouldIgnoreShutdown(req),\n            response,\n          }),\n        );\n      } else {\n        res.status(status).json(response);\n      }\n    } catch (err: any) {\n      res.status(500).json({\n        error: err.message,\n        success: false,\n      });\n    }\n  };\n\n  shutdown = (req: express.Request, res: express.Response): void => {\n    const reqShutdownToken = req.query.secretToken;\n    const isNotEmpty = reqShutdownToken !== '';\n    const isDefined = typeof reqShutdownToken !== 'undefined' && typeof this.shutdownToken !== 'undefined';\n\n    if (isDefined && isNotEmpty && reqShutdownToken === this.shutdownToken) {\n      this.isShuttingDown = true;\n      this.logger?.warn('successful shutdownToken received, putting app in shutdown mode');\n\n      res.status(200).json({\n        success: true,\n        statusCode: SHUTDOWN_STATUS_CODE,\n      });\n    } else {\n      this.logger?.warn('incorrect or missing shutdown token');\n\n      res.status(500).json({\n        success: false,\n        error: BAD_SHUTDOWN_TOKEN_MSG,\n      });\n    }\n  };\n}\n","import type { IncomingMessage, ServerResponse } from 'http';\nimport type { Level } from 'pino';\nimport pinoHttp from 'pino-http';\nexport interface RequestSerializerInput extends IncomingMessage {\n  raw: {\n    get: (s: string) => string;\n  };\n}\n\ninterface GetHttpLoggerInterface extends pinoHttp.Options {\n  level?: Level;\n}\n\nexport const defaultSerializers = {\n  req: (req: RequestSerializerInput) => ({\n    id: req.id as string,\n    ip: req.raw.get('X-Client-Ip'),\n    userAgent: req.raw.get('User-Agent'),\n    referer: req.raw.get('Referer'),\n    method: req.method,\n    url: req.url,\n  }),\n  res: (res: ServerResponse) => ({\n    statusCode: res.statusCode,\n  }),\n  err: (err: Error) => ({\n    name: err.name,\n    stack: err.stack?.replace(/\\s+/g, ' '),\n    message: err.message,\n  }),\n};\n\nexport function getHttpLogger(args: GetHttpLoggerInterface) {\n  const logger = args.logger;\n\n  if (!logger) {\n    throw new Error('must pass a pino Logger');\n  }\n\n  const options: pinoHttp.Options = {\n    genReqId: (req: IncomingMessage) => req.id || '',\n    customLogLevel: (res, err) => (err ? 'error' : args.level || 'info'),\n    ...args,\n    logger,\n    serializers: {\n      ...defaultSerializers,\n      ...(args.serializers || {}),\n    },\n  };\n\n  return pinoHttp(options);\n}\n","import { getLoggerWrapper, PlainLogger, SilentLogger } from '@zg-rentals/particles-js-base-logger';\n\nimport { PinoLogger } from './pinoLogger';\n\nexport * from './pinoLogger';\nexport * from './logMiddleware';\nexport * from './logSync';\nexport * from './httpLogger';\n\nexport type LoggerTypes = {\n  pino: PinoLogger;\n  plain: PlainLogger;\n  silent: SilentLogger;\n};\n\nexport const loggerMap = {\n  pino: PinoLogger,\n  plain: PlainLogger,\n  silent: SilentLogger,\n};\n\nconst getLogger = getLoggerWrapper({\n  loggerMap,\n});\n\nexport default getLogger;\n","import type { Request, Response } from 'express';\nimport type { LogEvent } from 'pino';\nimport type { Level } from '@zg-rentals/particles-js-base-logger';\nimport type { PinoLogger } from './pinoLogger';\n\nexport function getLogMiddleware(logger: PinoLogger) {\n  return function logMiddleware(req: Request, res: Response) {\n    const { logs } = req.body;\n\n    if (logs && Array.isArray(logs)) {\n      logs.forEach((logEvent: LogEvent) => {\n        const { level, ts, messages, bindings } = logEvent;\n        const bindingsAsObj = bindings.reduce((acc, binding) => {\n          return {\n            ...acc,\n            ...binding,\n          };\n        }, {});\n\n        bindingsAsObj.browser = true;\n\n        if (!bindingsAsObj.name) {\n          return;\n        }\n\n        const childLogger = logger.child(bindingsAsObj.name, bindingsAsObj);\n\n        if (messages[0]) {\n          if (typeof messages[0] !== 'object') {\n            messages.unshift({});\n          }\n\n          messages[0] = {\n            ...messages[0],\n            requestId: req.id,\n            time: ts,\n          };\n\n          childLogger[level.label as Level](messages[0], ...messages.slice(1));\n        }\n      });\n    }\n\n    res.send('ok');\n  };\n}\n","import fetch from 'node-fetch';\nimport type { Response } from 'node-fetch';\nimport type { Logger } from '@zg-rentals/particles-js-base-logger';\n\ntype LogLevel = 'warn' | 'error' | 'trace' | 'info' | 'debug' | 'fatal';\n\ntype GetNodeLoggersResponse = Array<{\n  name: string;\n  level: LogLevel;\n}>;\n\nexport async function logSync({\n  logger,\n  lookoutApi = 'https://lookout.hotpads.com',\n  apiKey,\n  app,\n}: {\n  logger: Logger;\n  lookoutApi?: string;\n  apiKey: string;\n  app: string;\n}) {\n  async function runSync() {\n    try {\n      await registerChildLoggers({ logger, lookoutApi, apiKey });\n      const levelsFromApi = await getChildLoggerLevels({ apiKey, lookoutApi, app });\n\n      await setChildLogLevels({\n        logger,\n        levelsFromApi,\n      });\n    } catch (e) {\n      logger && logger.error(e);\n      return;\n    }\n  }\n\n  runSync();\n\n  setTimeout(async () => {\n    await runSync();\n  }, 5000);\n}\n\nexport class ResponseError extends Error {\n  errors: Array<Error>;\n  constructor(errors: Array<Error>) {\n    super();\n    this.errors = errors;\n  }\n\n  toString() {\n    return this.errors.map(({ message }) => message).join(', ');\n  }\n}\n\nexport async function parseLookoutResponse<T>(res: Response): Promise<T | string> {\n  const contentType = res.headers.get('content-type');\n\n  if (res.status !== 200) {\n    throw new ResponseError([new Error(`error querying ${res.url}: ${res.statusText} - ${res.status}`)]);\n  } else if (contentType && contentType.includes('application/json')) {\n    return await res.json();\n  } else {\n    return await res.text();\n  }\n}\n\nexport async function registerChildLoggers({\n  logger,\n  lookoutApi = 'https://lookout.hotpads.com',\n  apiKey,\n}: {\n  logger: Logger;\n  lookoutApi?: string;\n  apiKey: string;\n}) {\n  if (!logger._enableLogSync) return;\n\n  const loggers = Object.keys(logger._children);\n\n  const url = new URL('lookout/api/node/logger/register', lookoutApi);\n  url.search = new URLSearchParams({ apiKey }).toString();\n\n  const res = await fetch(url, {\n    method: 'post',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({\n      env: process.env.ZG_ENV,\n      loggers,\n    }),\n  });\n\n  return (await parseLookoutResponse<''>(res)) as string;\n}\n\nexport async function getChildLoggerLevels({\n  apiKey,\n  app,\n  lookoutApi = 'https://lookout.hotpads.com',\n}: {\n  app: string;\n  lookoutApi?: string;\n  apiKey: string;\n}) {\n  const url = new URL('lookout/api/node/logger/get', lookoutApi);\n  url.search = new URLSearchParams({\n    apiKey,\n    app,\n    env: process.env.ZG_ENV || '',\n  }).toString();\n\n  const res = await fetch(url, {\n    method: 'get',\n    headers: { 'Content-Type': 'application/json' },\n  });\n\n  return (await parseLookoutResponse<GetNodeLoggersResponse>(res)) as GetNodeLoggersResponse;\n}\n\nexport async function setChildLogLevels({\n  logger,\n  levelsFromApi,\n}: {\n  logger: Logger;\n  levelsFromApi: GetNodeLoggersResponse;\n}) {\n  if (!logger._enableLogSync) return;\n\n  const customLevelLoggers = levelsFromApi.reduce<Record<string, string>>((acc, child) => {\n    acc[child.name] = child.level;\n\n    return acc;\n  }, {});\n\n  for (const name of logger._children.keys()) {\n    if (!logger.setChildLogLevel) {\n      continue;\n    }\n\n    logger.setChildLogLevel(name, customLevelLoggers[name]);\n  }\n}\n","import type { GetLoggerInterface, LogFn, Logger } from '@zg-rentals/particles-js-base-logger';\nimport { BaseLogger } from '@zg-rentals/particles-js-base-logger';\n\nimport child_process from 'child_process';\nimport fs from 'fs';\nimport path from 'path';\nimport pino from 'pino';\nimport stream from 'stream';\n\nexport interface PinoLoggerInterface extends GetLoggerInterface {\n  logPath?: string;\n  prettyPath?: string;\n  pinoArgs?: pino.LoggerOptions;\n  logger?: pino.Logger;\n}\nexport class PinoLogger extends BaseLogger<pino.Logger> implements Logger {\n  logger: pino.Logger;\n  prettyLogger?: child_process.ChildProcess;\n  _enableLogSync = true;\n  runtime: 'node';\n  options: PinoLoggerInterface;\n  error: LogFn;\n  warn: LogFn;\n  info: LogFn;\n  debug: LogFn;\n  trace: LogFn;\n\n  constructor(options: PinoLoggerInterface = {}) {\n    super({\n      __reset: options.__reset || (() => {}),\n      runtime: 'node',\n    });\n\n    const { pinoArgs = {}, logPath = '', prettyPath = 'node_modules/pino-pretty/bin.js', logger } = options;\n\n    this.options = options;\n\n    this.runtime = 'node';\n\n    const cwd = process.cwd();\n    const logThrough = new stream.PassThrough();\n\n    this.logger =\n      logger ||\n      pino(\n        {\n          level: 'info',\n          ...pinoArgs,\n        },\n        logThrough,\n      );\n\n    this.error = this.logger.error.bind(this.logger);\n    this.warn = this.logger.warn.bind(this.logger);\n    this.info = this.logger.info.bind(this.logger);\n    this.debug = this.logger.debug.bind(this.logger);\n    this.trace = this.logger.trace.bind(this.logger);\n\n    if (logPath) {\n      logThrough.pipe(fs.createWriteStream(logPath, { flags: 'a' }));\n    }\n\n    if (prettyPath) {\n      const prettyLogger = child_process.spawn(process.execPath, [path.join(process.cwd(), prettyPath), '-c'], {\n        cwd,\n        env: process.env,\n      });\n\n      logThrough.pipe(prettyLogger.stdin);\n\n      prettyLogger.stdout.pipe(process.stdout);\n\n      this.prettyLogger = prettyLogger;\n    } else {\n      logThrough.pipe(process.stdout);\n    }\n  }\n\n  child(name: string, bindings?: pino.Bindings): PinoLogger {\n    if (name.length > 255) {\n      throw new Error(`child logger name length is ${name.length}, must be less than 255`);\n    }\n\n    const logger = this.logger.child({ ...bindings, name });\n\n    this._children.set(name, logger);\n\n    return new PinoLogger({\n      ...this.options,\n      logger,\n    });\n  }\n\n  _getChildLogger(name: string) {\n    return this._children.get(name);\n  }\n\n  setChildLogLevel(name: string, level?: string) {\n    const logger = this._getChildLogger(name);\n\n    if (logger) logger.level = level || process.env.LOG_LEVEL || 'warn';\n  }\n}\n","export interface BatchInterface<T> {\n  flushIntervalMs?: number;\n  flushItemsThreshold?: number;\n  flushUniqueItemsThreshold?: number;\n  onFlush: (items: Array<T>) => Promise<unknown>;\n  debug?: boolean;\n}\n\nconst defaults = {\n  flushIntervalMs: 5_000,\n  flushItemsThreshold: 3_000,\n  flushUniqueItemsThreshold: 150,\n};\n\nconst LOG_PREFIX = 'particles-js-utils#Batch: ';\n\nexport class Batch<T> {\n  public flushIntervalMs: number;\n  public flushItemsThreshold: number;\n  public flushUniqueItemsThreshold: number;\n  public flushTimeout: NodeJS.Timeout | undefined;\n  public flushing: boolean;\n  public onFlush: (items: Array<T>) => Promise<unknown>;\n  public bufferUniqueIds: Set<string>;\n  public buffer: Array<T>;\n\n  // don't use our particles logger, since this class is used by the logger at instantiation\n  public logger: Console;\n  private debug: boolean;\n\n  constructor(options: BatchInterface<T>) {\n    this.flushIntervalMs = options.flushIntervalMs || defaults.flushIntervalMs;\n    this.flushItemsThreshold = options.flushItemsThreshold || defaults.flushItemsThreshold;\n    this.flushUniqueItemsThreshold = options.flushUniqueItemsThreshold || defaults.flushUniqueItemsThreshold;\n    this.flushing = false;\n    this.onFlush = options.onFlush;\n    this.logger = console;\n    this.debug = options.debug || false;\n    this.bufferUniqueIds = new Set();\n    this.buffer = [];\n\n    this.reset();\n    this.startFlushTimeout();\n  }\n\n  log = (...args: Array<unknown>) => {\n    if (!this.debug) return;\n\n    this.logger.debug(LOG_PREFIX, ...args);\n  };\n\n  hasHitUniqueThreshold = (): boolean => {\n    const { bufferUniqueIds, flushUniqueItemsThreshold, log } = this;\n\n    const brokeThreshold = bufferUniqueIds.size >= flushUniqueItemsThreshold;\n\n    if (!brokeThreshold) {\n      return false;\n    }\n\n    log('batch unique threshold reached, trigger flush', {\n      uniqueIdSize: bufferUniqueIds.size,\n      threshold: flushUniqueItemsThreshold,\n    });\n\n    return true;\n  };\n\n  hasHitSizeThreshold = (): boolean => {\n    const { buffer, flushItemsThreshold, log } = this;\n\n    const brokeThreshold = buffer.length >= flushItemsThreshold;\n\n    if (!brokeThreshold) {\n      return false;\n    }\n\n    log('batch buffer size threshold reached, trigger flush', {\n      bufferSize: buffer.length,\n      threshold: flushItemsThreshold,\n    });\n\n    return true;\n  };\n\n  public add = (id: string, metric: T): Promise<unknown> => {\n    this.bufferUniqueIds.add(id);\n    this.buffer.push(metric);\n\n    if (!this.flushing && (this.hasHitSizeThreshold() || this.hasHitUniqueThreshold())) {\n      return this.flush();\n    }\n\n    return Promise.resolve();\n  };\n\n  finishFlush = () => {\n    this.flushing = false;\n\n    if (!this.flushTimeout) {\n      this.startFlushTimeout();\n    }\n  };\n\n  public flush = (): Promise<unknown> => {\n    const { buffer: items, log, reset, onFlush } = this;\n\n    this.flushing = true;\n\n    log('triggering flush');\n\n    reset();\n\n    if (!items.length) {\n      log('nothing to flush');\n\n      this.finishFlush();\n      return Promise.resolve();\n    }\n\n    return onFlush(items).finally(() => {\n      this.finishFlush();\n    });\n  };\n\n  private reset = () => {\n    this.bufferUniqueIds = new Set();\n    this.buffer = [];\n\n    if (this.flushTimeout) {\n      clearTimeout(this.flushTimeout);\n      this.flushTimeout = undefined;\n    }\n  };\n\n  private startFlushTimeout = () => {\n    this.log('starting flush timeout', this.flushIntervalMs);\n\n    this.flushTimeout = setTimeout(() => this.flush(), this.flushIntervalMs);\n  };\n}\n","export const messages: {\n  [key: string]: string;\n} = {\n  NODE_SERVER_START_FAILURE: 'node server failed to start',\n  NODE_SERVER_START_SUCCESS: 'server started and listening',\n};\n","export const deprecateMessage = (msg: string): void => {\n  console.warn('[DEPRECATED]: this feature will be deprecated in the next major release. ' + msg);\n};\n","import { deprecateMessage } from './deprecate';\n\nconst prodEnvList = ['production', 'production-docker'];\nexport const isProd = () => {\n  const zgEnv = process.env.ZG_ENV;\n\n  if (!zgEnv) return false;\n\n  return prodEnvList.includes(zgEnv);\n};\n\nconst stageEnvList = ['comet-1', 'node-int'];\nexport const isStaging = () => {\n  deprecateMessage('Please use the EnvrionmentUtil class from @zg-rentals/particles-js-utils/lib/server');\n\n  const zgEnv = process.env.ZG_ENV;\n\n  if (!zgEnv) return false;\n\n  return stageEnvList.includes(zgEnv);\n};\n","import type http from 'http';\nimport type { Request } from 'express';\n\nimport cookie from 'cookie';\n\nconst BRANDS = ['hotpads', 'trulia', 'zillow'];\n\nexport function findBrand(search?: string) {\n  if (!search) return '';\n\n  const foundBrand = BRANDS.find((brand) => {\n    return search.includes(brand);\n  });\n\n  if (foundBrand) {\n    return foundBrand;\n  } else {\n    // staging server specific to brands\n    // useful for production builds (do not respect cookie) deployed on non-production servers\n    if (search.includes('testpads')) {\n      return 'hotpads';\n    }\n  }\n\n  return '';\n}\n\nexport function getBrand(req: http.IncomingMessage | Request, isDev = true) {\n  let brand = null;\n\n  if (isDev) {\n    if ('cookies' in req) {\n      brand = findBrand(req.cookies.dev_brand);\n    }\n\n    if (brand) {\n      return brand;\n    }\n\n    if (req.headers.cookie) {\n      const headerCookies = cookie.parse(req.headers.cookie);\n\n      brand = findBrand(headerCookies.dev_brand);\n\n      if (brand) {\n        return brand;\n      }\n    }\n  }\n\n  brand = findBrand((req.headers['X-Forwarded-Host'] as string) || req.headers.host);\n\n  if (brand) {\n    return brand;\n  }\n\n  // array.find returns undefined if no match\n  // cannot return undefined, will break request headers\n  if (!brand) {\n    return null;\n  }\n}\n","import type http from 'http';\n\n/* eslint-disable @typescript-eslint/no-var-requires */\nconst ipRangeCheck = require('ip-range-check');\n\n// TODO: inherently insecure to ip spoofing\n// x-client-ip is only set on node -> node proxy\n// need to protect against x-client-ip spoof on client requests\n\n// req.get is a case-insensitive match\n// http://expressjs.com/en/api.html#req.get\nexport function getIpsFromReq(req: http.IncomingMessage) {\n  const zgIpHeader = req.headers['x-client-ip'] || req.headers['X-Client-Ip'];\n  const xForwadedFor = req.headers['x-forwarded-for'];\n  const socketRemoteAddres = (req.socket || {}).remoteAddress;\n\n  return {\n    zgIpHeader,\n    xForwadedFor,\n    socketRemoteAddres,\n    defaultIpAddress: '0.0.0.0',\n  };\n}\n\nexport function selectValidIp(req: http.IncomingMessage) {\n  const { zgIpHeader, xForwadedFor, socketRemoteAddres, defaultIpAddress } = getIpsFromReq(req);\n  const ipByPrecedence = zgIpHeader || xForwadedFor || socketRemoteAddres || defaultIpAddress;\n\n  // deal with comma delimited ips\n  if (!Array.isArray(ipByPrecedence) && ipByPrecedence.indexOf(',') > -1) {\n    const ipArr = ipByPrecedence.replace(/ /g, '').split(',');\n    const filteredIps = ipArr.filter((ip) => !ipRangeCheck(ip, '10.0.0.0/8') && !ipRangeCheck(ip, '172.16.1.0/12'));\n\n    if (filteredIps.length) {\n      return filteredIps[0];\n    }\n\n    return defaultIpAddress;\n  }\n\n  return ipByPrecedence;\n}\n","import PropertiesReader from 'properties-reader';\n\nfunction properties(propertiesFilePath: string): PropertiesReader.Reader {\n  return PropertiesReader(propertiesFilePath);\n}\n\nexport { properties };\n","import type { AxiosError } from 'axios';\nimport type { Logger } from '@zg-rentals/particles-js-base-logger';\n\nexport function axiosErrorHandler(error: AxiosError, logger: Logger, logPrefix = 'axios'): void {\n  if (error.response) {\n    logger.error(\n      {\n        data: error.response.data,\n        status: error.response.status,\n        headers: error.response.headers,\n      },\n      logPrefix + ': server responded with bad http status code',\n    );\n  } else if (error.request) {\n    logger.error(\n      {\n        request: {\n          xClientIp: error.request.getHeader('x-client-ip'),\n          xBrand: error.request.getHeader('x-brand'),\n          path: error.request.path,\n          cookie: error.request.getHeader('cookie'),\n        },\n        stack: error.stack,\n        msg: error.message,\n      },\n      logPrefix + ': server did not response to http request',\n    );\n  } else {\n    logger.error(\n      {\n        stack: error.stack,\n        msg: error.message,\n      },\n      logPrefix + ': request did not successfully send',\n    );\n  }\n}\n","import { getBrand } from './getBrand';\nimport { getIpsFromReq, selectValidIp } from './getIp';\nimport { isProd, isStaging } from './environmentUtils';\nimport { safeCreateLogger, safeUseLogger } from './safeCreateLogger';\nimport { deprecateMessage } from './deprecate';\nimport { messages } from './constants';\nimport { Batch } from './Batch';\nimport { axiosErrorHandler } from './http';\n\nexport { default as TestUtility } from './testUtils';\nexport { default as ShutdownListener } from './shutdownListener';\n\nexport * from './http';\n\nexport const Utils = {\n  getBrand,\n  // getIp is legacy export\n  getIp: selectValidIp,\n  selectValidIp,\n  getIpsFromReq,\n  isProd,\n  isStaging,\n  safeCreateLogger,\n  safeUseLogger,\n  deprecateMessage,\n  messages,\n  axiosErrorHandler,\n  Batch,\n};\n\nexport type { fakeLogger, ParticlesLogger } from './safeCreateLogger';\nexport type { BatchInterface } from './Batch';\n\n// server only\nexport * as NodeUtil from './node';\n","import os from 'os';\n\nimport { properties } from '../helpers/propertiesReader';\n\ntype environment = 'sherman' | 'comet1' | 'node-int' | 'production' | 'local' | 'ttest' | 'ztest' | 'other' | 'jenkins';\n\nexport interface ServerProperties {\n  name: string;\n  type: string;\n  publicIp: string;\n  privateIp: string;\n}\n\nexport interface EnvProperties {\n  server: ServerProperties;\n  hostname: string;\n  id: string;\n  environment: environment;\n}\n\nexport interface EnvironmentUtilInterface {\n  appName: string;\n}\n\nexport class EnvironmentUtil {\n  public serverProperties: ServerProperties;\n  public envProperties: EnvProperties;\n\n  constructor(propertiesFilePath: string, { appName }: EnvironmentUtilInterface) {\n    try {\n      const readProperties = properties(propertiesFilePath);\n\n      const sp: ServerProperties = {\n        name: String(readProperties.get('server.name')),\n        type: String(readProperties.get('server.type')),\n        publicIp: String(readProperties.get('server.publicIp')),\n        privateIp: String(readProperties.get('server.privateIp')),\n      };\n\n      this.serverProperties = sp;\n    } catch (err) {\n      this.serverProperties = {\n        name: os.hostname(),\n        type: appName,\n        publicIp: '',\n        privateIp: '',\n      };\n    }\n\n    const hostname = os.hostname();\n\n    this.envProperties = {\n      server: this.serverProperties,\n      hostname,\n      id: `${this.serverProperties.name}-${hostname}`,\n      environment: this.guessEnvironment(),\n    };\n  }\n\n  guessEnvironment(): environment {\n    const { name } = this.serverProperties;\n\n    if (name.includes('node-int')) {\n      return 'node-int';\n    } else if (name.includes('production')) {\n      return 'production';\n    } else if (name.includes('comet')) {\n      return 'comet1';\n    } else if (name.includes('ttest')) {\n      return 'ttest';\n    } else if (name.includes('ztest')) {\n      return 'ztest';\n    } else if (name.includes('sherman')) {\n      return 'sherman';\n    } else if (name.includes('jenkins')) {\n      return 'jenkins';\n    } else {\n      return 'other';\n    }\n  }\n  // any non-local server that is not production\n  isStaging() {\n    const { environment } = this.envProperties;\n\n    return ['node-int', 'comet1', 'ttest', 'ztest', 'sherman'].indexOf(environment) > -1;\n  }\n\n  // production servers\n  isProduction() {\n    const { environment } = this.envProperties;\n\n    return environment === 'production';\n  }\n\n  isSherman() {\n    const { environment } = this.envProperties;\n\n    return environment === 'sherman';\n  }\n\n  isJenkins() {\n    const { environment } = this.envProperties;\n\n    return environment === 'jenkins';\n  }\n}\n\nexport default EnvironmentUtil;\n","import type pino from 'pino';\n\nexport interface fakeLogger {\n  trace: () => void;\n  debug: () => void;\n  info: () => void;\n  warn: () => void;\n  error: () => void;\n  fatal?: () => void;\n  child?: () => any;\n}\n\nexport type ParticlesLogger = fakeLogger | pino.Logger;\n\nexport function safeCreateLogger(log?: any, name?: string): pino.Logger | fakeLogger {\n  if (log) {\n    return log.child({ name });\n  } else {\n    const logger = {\n      child: function () {\n        return this;\n      },\n      trace: (...args: Array<any>) => {\n        console.log(args);\n      },\n      debug: (...args: Array<any>) => {\n        console.log(args);\n      },\n      info: (...args: Array<any>) => {\n        console.log(args);\n      },\n      warn: (...args: Array<any>) => {\n        console.log(args);\n      },\n      error: (...args: Array<any>) => {\n        console.log(args);\n      },\n      fatal: (...args: Array<any>) => {\n        console.log(args);\n      },\n    };\n    return logger;\n  }\n}\n\nexport function safeUseLogger(\n  logger: ParticlesLogger,\n  log: ParticlesLogger,\n  backupName: string,\n): pino.Logger | fakeLogger {\n  // try to use a created logger\n  if (logger) {\n    return logger;\n  } else {\n    return safeCreateLogger(log, backupName);\n  }\n}\n","export default class ShutdownListener {\n  constructor(onShutdown: () => void, onSigInt: () => void = onShutdown) {\n    console.log({\n      msg: '[DEPRECATED]: ShutdownListener class has been deprecated. please use particles-js-notify instead.',\n      level: 50,\n    });\n\n    process.on('SIGINT', () => {\n      onSigInt();\n    });\n\n    process.on('message', ({ topic }) => {\n      if (topic === 'TRIGGER_SHUTDOWN') {\n        onShutdown();\n      }\n    });\n  }\n}\n","/* requires jest to run\n */\nexport default class TestUtility {\n  private output: string;\n  private write: typeof process.stdout.write;\n\n  constructor() {\n    this.output = '';\n    this.write = process.stdout.write;\n  }\n\n  getOutput = (): string => {\n    return this.output;\n  };\n\n  mockStdout = (): void => {\n    jest.spyOn(process.stdout, 'write').mockImplementation((data) => {\n      this.output += data;\n      return true;\n    });\n  };\n\n  clearOutput = (): void => {\n    this.output = '';\n  };\n\n  restoreStdout = (): void => {\n    process.stdout.write = this.write;\n  };\n}\n","import { post } from './pontoon';\nimport type { MetricCounts, MetricGauges } from './request-types';\n\nexport interface CountBatch {\n  api?: string;\n  apiKey?: string;\n  headers?: Record<string, string>;\n  counts: MetricCounts['counts'];\n}\n\nexport interface GaugeBatch {\n  api?: string;\n  apiKey?: string;\n  headers?: Record<string, string>;\n  gauges: MetricGauges['gauges'];\n}\n\nexport interface Batch<K> {\n  [serverName: string]: {\n    [serviceName: string]: K;\n  };\n}\n\nexport const BATCH_THROTTLE_MS = 5_000;\n\nexport function throttle(fn: () => void) {\n  let timeout: ReturnType<typeof setTimeout> | null = null;\n  return () => {\n    if (timeout !== null) {\n      return;\n    }\n    timeout = setTimeout(() => {\n      timeout = null;\n      fn();\n    }, BATCH_THROTTLE_MS);\n  };\n}\n\nexport const batches: {\n  count: Batch<CountBatch>;\n  gauge: Batch<GaugeBatch>;\n} = {\n  count: {},\n  gauge: {},\n};\n\nexport function makeThrottledMetricRequest(type: 'count' | 'gauge') {\n  const pluralType = type + 's';\n  return throttle(() => {\n    const batch = batches[type];\n    Object.keys(batch).forEach((serverName) => {\n      Object.keys(batch[serverName]).forEach((serviceName) => {\n        const serviceBatch = batch[serverName][serviceName];\n        const payload: Record<string, unknown> = {\n          api: serviceBatch.api,\n          apiKey: serviceBatch.apiKey,\n          headers: serviceBatch.headers,\n          serverName,\n          serviceName,\n          // counts: serviceBatch.counts, OR\n          // gauges: serviceBatch.gauges\n          [pluralType]: serviceBatch[pluralType as keyof typeof serviceBatch],\n        };\n        // browserTime is used in browser requests only, to compensate for inaccurate browser clocks\n        if (typeof window !== 'undefined') {\n          payload.browserTime = Date.now();\n        }\n        post(type + 'Publisher/v2/add', payload);\n      });\n    });\n    batches[type] = {};\n  });\n}\n\nexport const throttledSendCounts = makeThrottledMetricRequest('count');\nexport const throttledSendGauges = makeThrottledMetricRequest('gauge');\n\nexport function getBatch<BatchType>(metrics: MetricCounts | MetricGauges, type: 'count' | 'gauge'): BatchType {\n  const { serverName = '', serviceName = '', api, apiKey, headers = {} } = metrics;\n  const batch = batches[type];\n  batch[serverName] = batch[serverName] || {};\n  batch[serverName][serviceName] = batch[serverName][serviceName] || {\n    api,\n    apiKey,\n    headers,\n    [type + 's']: {},\n  };\n  const serviceBatch: unknown = batch[serverName][serviceName];\n  return serviceBatch as BatchType;\n}\n\nexport function mergeCounts(batchedCounts: MetricCounts['counts'], newCounts: MetricCounts['counts']) {\n  Object.keys(newCounts).forEach((ms) => {\n    batchedCounts[ms] = batchedCounts[ms] || {};\n    Object.keys(newCounts[ms]).forEach((name) => {\n      batchedCounts[ms][name] = batchedCounts[ms][name] || 0;\n      batchedCounts[ms][name] += newCounts[ms][name];\n    });\n  });\n}\n\nexport function mergeGauges(batchedGauges: MetricGauges['gauges'], newGauges: MetricGauges['gauges']) {\n  Object.keys(newGauges).forEach((metricName) => {\n    batchedGauges[metricName] = batchedGauges[metricName] || [];\n    newGauges[metricName].forEach(([timestamp, value]) => {\n      const existingGauge = batchedGauges[metricName].find((point) => point[0] === timestamp);\n      if (existingGauge) {\n        existingGauge[1] += value;\n      } else {\n        batchedGauges[metricName].push([timestamp, value]);\n      }\n    });\n  });\n}\n\nexport async function batchCounts(metrics: MetricCounts) {\n  const batch = getBatch<CountBatch>(metrics, 'count');\n  if (metrics.headers) {\n    Object.assign(batch.headers, metrics.headers);\n  }\n  mergeCounts(batch.counts, metrics.counts);\n  throttledSendCounts();\n}\n\nexport async function batchGauges(metrics: MetricGauges) {\n  const batch = getBatch<GaugeBatch>(metrics, 'gauge');\n  if (metrics.headers) {\n    Object.assign(batch.headers, metrics.headers);\n  }\n  mergeGauges(batch.gauges, metrics.gauges);\n  throttledSendGauges();\n}\n","export * from './pontoon';\nexport * from './request-types';\nexport * from './response-types';\nexport * from './batched-metrics';\n","import axios from 'axios';\nimport type {\n  HeartbeatDescriptor,\n  MetricAlert,\n  MetricCounts,\n  MetricGauges,\n  MetricQueryRequest,\n  MetricWindow,\n  PontoonOptions,\n  ServiceConfigDescriptor,\n  ServiceConfiguration,\n  StatUrlOptions,\n  WebappBatchDescriptor,\n  WebappDescriptor,\n  WebappInstance,\n} from './request-types';\nimport { batchCounts, batchGauges } from './batched-metrics';\nimport type {\n  GenericResponse,\n  MetricQueryDataResponse,\n  MetricWindowResponse,\n  ServiceConfigResponse,\n  WebappInstanceResponse,\n} from './response-types';\nimport type { Stat } from '@zg-rentals/monitor-base';\n\nexport async function post<K>(apiPath: string, body: K & PontoonOptions) {\n  const { api, apiKey, headers, ...data } = body;\n  const response = await axios.post(`${api}/pontoon/api/${apiPath}`, data, {\n    params: { apiKey },\n    headers,\n  });\n  return response.data;\n}\n\nexport async function get<K>(apiPath: string, opts: K & PontoonOptions) {\n  const { api, headers, ...params } = opts;\n  const response = await axios.get(`${api}/pontoon/api/${apiPath}`, {\n    params,\n    headers,\n  });\n  return response.data;\n}\n\nexport function sendCounts(metrics: MetricCounts): Promise<void> {\n  return batchCounts(metrics);\n}\n\nexport function sendGauges(metrics: MetricGauges): Promise<void> {\n  return batchGauges(metrics);\n}\n\nexport function addServiceConfig(serviceConfig: ServiceConfiguration): Promise<GenericResponse> {\n  return post('externalServiceConfiguration/add', serviceConfig);\n}\n\nexport function getServiceConfig(descriptor: ServiceConfigDescriptor): Promise<ServiceConfigResponse> {\n  return get('externalServiceConfiguration/get', descriptor);\n}\n\nexport async function getAllServiceConfigs(options: PontoonOptions): Promise<Array<ServiceConfigResponse>> {\n  const results = await get('externalServiceConfiguration/getAll', options);\n  return results.batch;\n}\n\nexport function areGaugesDelayed(options: PontoonOptions): Promise<boolean> {\n  return get('gaugeAggregation/isDelayed', options);\n}\n\nexport function registerAlert(alert: MetricAlert): Promise<void> {\n  return post('metric/alert/register', alert);\n}\n\nexport function getWindow(metricWindow: MetricWindow): Promise<MetricWindowResponse> {\n  return post('metric/getWindow', metricWindow);\n}\n\nexport function query(metricQuery: MetricQueryRequest): Promise<MetricQueryDataResponse> {\n  return post('metric/query', metricQuery);\n}\n\nexport function addHeartbeat(webApp: WebappInstance): Promise<GenericResponse> {\n  webApp.servletContainerVersion = webApp.servletContainerVersion || '';\n  webApp.servletContextPath = webApp.servletContextPath || '';\n  return post('webappInstancePublisher/add', webApp);\n}\n\nexport function removeHeartbeat(descriptor: HeartbeatDescriptor): Promise<GenericResponse> {\n  return get('webappInstancePublisher/delete', descriptor);\n}\n\nexport async function getAllWebapps(descriptor: WebappBatchDescriptor): Promise<Array<WebappInstanceResponse>> {\n  const results = await get('webappInstanceReader/get', descriptor);\n  return results.dtos;\n}\n\nexport function getWebapp(webApp: WebappDescriptor): Promise<WebappInstanceResponse> {\n  return get('webappInstanceReader/getInstance', webApp);\n}\n\nexport function addStatUrl({ stat, serviceName, api }: StatUrlOptions) {\n  const statUrlParams = {\n    periodMs: 300000,\n    frequency: 'period',\n    regexSplitLimit: 50,\n    showMinMax: false,\n    entries: [\n      {\n        accountName: serviceName,\n        metricInput: stat.name,\n        serviceName,\n        serverName: 'All',\n        splitServer: false,\n      },\n    ],\n  };\n  const queryString = encodeURIComponent(JSON.stringify(statUrlParams));\n  stat.url = `${api}/pontoon/metrics/viewMetrics/view?q=${queryString}`;\n  return stat;\n}\n\n// exported functions may be called directly or called as methods of a Pontoon instance\nexport class Pontoon {\n  options: PontoonOptions;\n\n  constructor(options: PontoonOptions) {\n    if (typeof window === 'undefined' && !(options.api && options.apiKey)) {\n      throw new Error(\"Can't query Pontoon without the api and apiKey options.\");\n    }\n    this.options = options;\n  }\n\n  // Wraps a function so that the `api` and `apiKey` options will be added\n  // to whatever object is passed in. Without typing it would look like this:\n  // addOpts: request => options => request({ ...this.options, ...options })\n  private addOpts<T, S>(request: (options: T) => S) {\n    return (options: T) =>\n      request({\n        ...this.options,\n        ...options,\n      });\n  }\n\n  sendCounts = this.addOpts<MetricCounts, Promise<void>>(sendCounts);\n  addServiceConfig = this.addOpts<ServiceConfiguration, Promise<GenericResponse>>(addServiceConfig);\n  getServiceConfig = this.addOpts<ServiceConfigDescriptor, Promise<ServiceConfigResponse>>(getServiceConfig);\n  getAllServiceConfigs = this.addOpts<PontoonOptions, Promise<Array<ServiceConfigResponse>>>(getAllServiceConfigs);\n  areGaugesDelayed = this.addOpts<PontoonOptions, Promise<boolean>>(areGaugesDelayed);\n  sendGauges = this.addOpts<MetricGauges, Promise<void>>(sendGauges);\n  registerAlert = this.addOpts<MetricAlert, Promise<void>>(registerAlert);\n  getWindow = this.addOpts<MetricWindow, Promise<MetricWindowResponse>>(getWindow);\n  query = this.addOpts<MetricQueryRequest, Promise<MetricQueryDataResponse>>(query);\n  addHeartbeat = this.addOpts<WebappInstance, Promise<GenericResponse>>(addHeartbeat);\n  removeHeartbeat = this.addOpts<HeartbeatDescriptor, Promise<GenericResponse>>(removeHeartbeat);\n  getAllWebapps = this.addOpts<WebappBatchDescriptor, Promise<Array<WebappInstanceResponse>>>(getAllWebapps);\n  getWebapp = this.addOpts<WebappDescriptor, Promise<WebappInstanceResponse>>(getWebapp);\n  addStatUrl = this.addOpts<StatUrlOptions, Stat>(addStatUrl);\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n\nexport type Tags = Record<string, unknown>;\n\nexport interface Trace {\n  traceId: string;\n  sessionId: string;\n  reqId?: string;\n  doSave: boolean;\n  tags: Tags;\n}\n\nexport interface Span {\n  spanId: string;\n  traceId: string;\n  finish: (error?: Error) => void;\n  getTags: () => Tags;\n  setTags: (tags: Tags) => void;\n}\n\n// ASYNC_FN_MATCHER matches any stringified function that accepts one or more arguments/callbacks\n// YES: (arg) => { ... }\n// YES: arg => { ... }\n// YES: function hello ( goodbye ) { ... }\n// NO: ( ) => { ... }\n// NO: function test() { ... }\n// NO: function( ) { ... }\nexport const ASYNC_FN_MATCHER = /^(\\(?\\s*\\w+\\s*\\)?\\s*=>|function(\\s+\\w*\\s*)?\\(\\s*\\w)/;\n\nexport abstract class TracerInterface {\n  abstract trace<T>(fn: (...args: Array<unknown>) => T, name: string, tags?: Tags): T;\n  abstract wrap<T extends Function>(fn: T, name: string, tags?: Tags): T;\n  abstract setSpanTag(key: string, value: unknown): void;\n  abstract getSpanTag(key: string): void;\n  abstract getCurrentTrace(): Trace;\n  abstract getCurrentSpan(): Span | undefined;\n  abstract getCurrentTags(): Tags;\n  abstract setSaveTrace(save: boolean): void;\n}\n\nexport default class BaseTracer implements TracerInterface {\n  static isAsyncFunction(fn: Function) {\n    return !!fn.toString().match(ASYNC_FN_MATCHER);\n  }\n\n  trace<T>(fn: (...args: Array<unknown>) => T, name: string, tags?: Tags) {\n    throw new Error(`Not Implemented: Tracer.trace(${fn}, ${name}, ${tags})`);\n    return fn();\n  }\n\n  wrap<T extends Function>(fn: T, name = fn.name, tags?: Tags) {\n    return ((...args: Array<unknown>) => {\n      return this.trace(() => fn.apply(this, args), name, tags);\n    }) as unknown as T;\n  }\n\n  setSpanTag(key: string, value: unknown) {\n    const span = this.getCurrentSpan();\n    if (span) {\n      span.setTags({ [key]: value });\n    }\n  }\n\n  getSpanTag(key: string) {\n    const span = this.getCurrentSpan();\n    if (span) {\n      return span.getTags()[key];\n    }\n  }\n\n  getCurrentTrace() {\n    throw new Error(`Not Implemented: Tracer.getCurrentTrace()`);\n    return {\n      traceId: 'traceId',\n      sessionId: 'sessionId',\n      doSave: false,\n      tags: {} as Tags,\n    };\n  }\n\n  getCurrentSpan(): Span | undefined {\n    throw new Error(`Not Implemented: Tracer.getCurrentSpan()`);\n    return undefined;\n  }\n\n  getCurrentTags() {\n    const trace = this.getCurrentTrace();\n    const span = this.getCurrentSpan();\n    return {\n      ...trace.tags,\n      ...span?.getTags(),\n    };\n  }\n\n  setSaveTrace(doSave: boolean) {\n    const trace = this.getCurrentTrace();\n    trace.doSave = doSave;\n  }\n}\n","export * from './tracer';\nexport * from './plugins';\n","import type { NodeTracerPlugin, TraceCallback } from '.';\nimport type { Tags } from '@zg-rentals/trace-base';\nimport BaseTracer from '@zg-rentals/trace-base';\n\nexport class BaseSpan {\n  tags: Record<string, unknown> = {};\n  onFinish?: () => void;\n  spanId = '';\n  traceId = '';\n\n  constructor(onFinish?: () => void) {\n    this.onFinish = onFinish;\n  }\n\n  getTags() {\n    return this.tags;\n  }\n\n  setTags(tags: Tags) {\n    Object.assign(this.tags, tags);\n  }\n\n  finish() {\n    if (this.onFinish) {\n      this.onFinish();\n    }\n  }\n}\n\nexport class BaseTracerPlugin implements NodeTracerPlugin {\n  activeSpan?: BaseSpan;\n\n  trace<T>(fn: TraceCallback<T>, name: string, tags: Record<string, unknown>) {\n    const span = this.startSpan();\n    const finish = span.finish.bind(span);\n    Object.assign(span.tags, tags, { name });\n    if (BaseTracer.isAsyncFunction(fn)) {\n      return fn(finish);\n    }\n    const ret = fn(finish);\n    if (ret instanceof Promise) {\n      return ret.finally(finish);\n    }\n    finish();\n    return ret;\n  }\n\n  setTags(tags: Tags) {\n    if (this.activeSpan) {\n      Object.assign(this.activeSpan.tags, tags);\n    }\n  }\n\n  parseRequestTags() {\n    return {};\n  }\n\n  startSpan() {\n    this.activeSpan = new BaseSpan(() => {\n      delete this.activeSpan;\n    });\n    return this.activeSpan;\n  }\n\n  getCurrentSpan() {\n    return this.activeSpan;\n  }\n\n  getAllTags() {\n    return this.activeSpan?.tags;\n  }\n}\n","import type { Span as DDSpanScope, SpanContext, Tracer, TracerOptions } from 'dd-trace';\nimport type { Request } from 'express';\nimport type { NodeTracerPlugin, ParseCookie, TraceCallback } from '.';\nimport type { Span, Tags } from '@zg-rentals/trace-base';\nimport tracer from 'dd-trace';\nimport BaseTracer from '@zg-rentals/trace-base';\n\nexport interface TaggedSpanContext extends SpanContext {\n  _tags: Tags;\n}\n\n// DataDog automatically adds these tags to each span,\n// but we don't necessarily want to include them in every log\nconst DD_TAG_BLACKLIST: Record<string, true> = {\n  _sample_rate: true,\n  'service.name': true,\n  service: true,\n  env: true,\n  version: true,\n  'resource.name': true,\n};\n\nexport class DatadogTracerPlugin implements NodeTracerPlugin {\n  tracer: Tracer;\n\n  constructor(options: TracerOptions) {\n    if (options.runtimeMetrics === undefined) {\n      options.runtimeMetrics = true;\n    }\n    this.tracer = tracer.init(options);\n  }\n\n  trace<T>(fn: TraceCallback<T>, name: string, tags: Record<string, unknown>): T {\n    if (BaseTracer.isAsyncFunction(fn)) {\n      return this.tracer.trace(name, (_, done) => {\n        this.setTags(tags);\n        return fn(done as (error?: Error) => unknown);\n      });\n    }\n    return this.tracer.trace(name, () => {\n      this.setTags(tags);\n      return fn(() => this.endSpan());\n    });\n  }\n\n  scopeToSpan(scope: DDSpanScope): Span {\n    const context = scope.context() as TaggedSpanContext;\n\n    return Object.assign(scope, {\n      spanId: context.toSpanId(),\n      traceId: context.toTraceId(),\n      getTags: () => context._tags || {},\n      setTags: (tags: Tags) => scope.addTags(tags),\n      finish: scope.finish,\n    }) as Span;\n  }\n\n  startSpan(name: string) {\n    const scope = this.tracer.startSpan(name);\n    return this.scopeToSpan(scope);\n  }\n\n  endSpan(span = this.getCurrentSpan()) {\n    span?.finish();\n  }\n\n  getCurrentSpan(): Span | undefined {\n    const scope = this.tracer.scope().active();\n    if (scope) {\n      return this.scopeToSpan(scope);\n    }\n    return;\n  }\n\n  setTags(tags: Tags) {\n    const span = this.getCurrentSpan();\n    if (span) {\n      span.setTags(tags);\n    }\n  }\n\n  getAllTags() {\n    const span = this.getCurrentSpan();\n    const spanTags = span?.getTags() || {};\n    if (!spanTags.ddTraceID) {\n      spanTags.ddTraceID = span?.traceId;\n    }\n    const filteredTags: Record<string, unknown> = {};\n    let hasTags;\n    Object.keys(spanTags).forEach((key) => {\n      if (!DD_TAG_BLACKLIST[key]) {\n        hasTags = true;\n        filteredTags[key] = spanTags[key];\n      }\n    });\n    return hasTags ? filteredTags : undefined;\n  }\n\n  parseRequestTags(req: Request, parseCookie: ParseCookie) {\n    const tags: {\n      ddTrcID?: string;\n      ddSesID?: string;\n    } = {};\n    const ddTraceId = req.headers['x-datadog-trace-id'] as string | undefined;\n    if (ddTraceId) {\n      tags.ddTrcID = ddTraceId.split(', ')[0];\n    }\n    const ddCookie = parseCookie('_dd_s', req) || '';\n    const [, ddCookieFragment = ''] = ddCookie.split('&id=');\n    const [ddSessionId] = ddCookieFragment.split('&');\n    if (ddSessionId) {\n      tags.ddSesID = ddSessionId;\n    }\n    return tags;\n  }\n}\n","import type { Span, Tags } from '@zg-rentals/trace-base';\nimport type { Request } from 'express';\n\nexport * from './datadog';\nexport * from './base';\n\n// Matches any stringified function that expects to be passed an argument\n// YES: (arg) => { ... }\n// YES: arg => { ... }\n// YES: function hello ( goodbye ) { ... }\n// NO: ( ) => { ... }\n// NO: function test() { ... }\n// NO: function( ) { ... }\nexport const ASYNC_FN_MATCHER = /^(\\(?\\s*\\w+\\s*\\)?\\s*=>|function(\\s+\\w*\\s*)?\\(\\s*\\w)/;\n\nexport type TraceCallback<T> = (done: (error?: Error) => unknown) => T;\n\nexport type TraceFunc<T = unknown> = (fn: TraceCallback<T>, name: string, tags: Record<string, unknown>) => T;\n\nexport type ParseCookie = (cookieName: string, req: Request) => string | void;\n\nexport interface NodeTracerPlugin {\n  trace: TraceFunc;\n  setTags: (tags: Tags) => void;\n  parseRequestTags: (req: Request, parseCookie: ParseCookie) => Record<string, unknown>;\n  startSpan: (name: string) => Span;\n  getCurrentSpan: () => Span | undefined;\n  getAllTags: () => Record<string, unknown> | undefined;\n}\n","import type { Span, Trace } from '@zg-rentals/trace-base';\nimport { BaseTracerPlugin } from './plugins';\nimport crypto from 'crypto';\nimport httpContext from 'express-http-context';\nimport http from 'http';\nimport https from 'https';\nimport { URL } from 'url';\nimport type { Application, NextFunction, Request, Response } from 'express';\nimport type { NodeTracerPlugin } from './plugins';\nimport nanoTime from 'nano-time';\nimport BaseTracer from '@zg-rentals/trace-base';\n\nexport const TRACE_COOKIE_NAME = 'rjs-trace';\nexport const TRACE_COOKIE_DURATION_SEC = 31536000;\nexport const SESSION_ID_LENGTH = 26;\nexport const TRACE_ID_LENGTH = 32;\nexport const SPAN_ID_LENGTH = 16;\n\nexport interface NodeTracerOptions {\n  plugin?: NodeTracerPlugin;\n  app?: Application;\n  saveAllTraces?: boolean;\n}\n\nexport type HttpCallback = (res: http.IncomingMessage) => void;\n\nlet requestsIntercepted: boolean = false;\n\nconst ERROR_KEYS = ['error', 'stack', 'err', 'errorStack', 'trace'];\n\nexport class NodeTracer extends BaseTracer {\n  plugin: NodeTracerPlugin;\n  app?: Application;\n  saveAllTraces: boolean;\n\n  constructor({ app, plugin, saveAllTraces = false }: NodeTracerOptions = {}) {\n    super();\n\n    if (typeof window !== 'undefined') {\n      throw new Error('@zg-rentals/trace-node should not be included in client-side code.');\n    }\n\n    this.saveAllTraces = saveAllTraces;\n\n    this.plugin = plugin || new BaseTracerPlugin();\n\n    if (app) {\n      this.traceApp(app);\n    }\n\n    if (!requestsIntercepted) {\n      this.interceptRequests(http);\n      this.interceptRequests(https);\n    }\n\n    requestsIntercepted = true;\n  }\n\n  interceptRequests(protocol: typeof http | typeof https) {\n    const originalRequest = protocol.request;\n    const wrappedRequest = (\n      urlOrOptions: http.RequestOptions | string | URL,\n      optionsOrCallback?: http.RequestOptions | HttpCallback,\n      callbackOrVoid?: HttpCallback,\n    ) => {\n      let url: string | URL;\n      let options: http.RequestOptions;\n      let callback: (res: http.IncomingMessage) => void;\n      if (typeof urlOrOptions === 'string' || urlOrOptions instanceof URL) {\n        url = urlOrOptions as string | URL;\n        options = optionsOrCallback as http.RequestOptions;\n        callback = callbackOrVoid as HttpCallback;\n        this.addTraceHeaders(options);\n        return originalRequest(url, options, callback);\n      }\n      options = urlOrOptions as http.RequestOptions;\n      callback = optionsOrCallback as HttpCallback;\n      this.addTraceHeaders(options);\n      return originalRequest(options, callback);\n    };\n    protocol.request = wrappedRequest;\n  }\n\n  traceApp(app: Application) {\n    this.app = app;\n    app.use(httpContext.middleware);\n    app.use(this.middleware.bind(this));\n  }\n\n  shouldBeTraced(req: Request) {\n    const contentType = req.headers['content-type'];\n    return Boolean(!contentType || contentType.match(/^(text|application)\\/(html|json)/i));\n  }\n\n  parseTraceState(tracestate = '') {\n    const state: Record<string, string> = {};\n    tracestate.split(',').forEach((keyVal) => {\n      if (keyVal) {\n        const [key, value] = keyVal.split('=');\n        state[key.trim()] = value.trim();\n      }\n    });\n    return state;\n  }\n\n  parseCookie(cookieName: string, req: Request) {\n    const cookies = req.get('cookie');\n    if (cookies) {\n      const regex = new RegExp(`(?:^|;\\\\s*)${cookieName}=(.*?)(?:;|$)`);\n      const match = cookies.match(regex);\n      if (match) {\n        return match[1];\n      }\n    }\n  }\n\n  middleware(req: Request, res: Response, next: NextFunction) {\n    if (this.shouldBeTraced(req)) {\n      const traceCookie = this.parseCookie(TRACE_COOKIE_NAME, req);\n      const cookieParts = traceCookie ? traceCookie.split(':') : [];\n      let [sessionId, traceId] = cookieParts;\n      let doSaveFlag = cookieParts[2];\n      if (!traceId || traceId.length !== TRACE_ID_LENGTH) {\n        const traceparent = req.headers?.traceparent || '';\n        const traceParts = traceparent.toString().split('-');\n        if (traceParts.length === 4 && traceParts[1].length === TRACE_ID_LENGTH) {\n          traceId = traceParts[1];\n          doSaveFlag = traceParts[3];\n        }\n        if (!traceId) {\n          traceId = this.makeTraceID();\n        }\n      }\n      if (!sessionId) {\n        sessionId = this.makeID(SESSION_ID_LENGTH);\n      }\n      res.setHeader(\n        'set-cookie',\n        `${TRACE_COOKIE_NAME}=${sessionId}::; path=/; max-age=${TRACE_COOKIE_DURATION_SEC}; samesite=strict`,\n      );\n      const tracestate = this.parseTraceState(req.headers.tracestate as string);\n      const pluginTags = this.plugin.parseRequestTags(req, this.parseCookie);\n      httpContext.set('trace', {\n        traceId,\n        sessionId,\n        reqId: this.makeID(SPAN_ID_LENGTH),\n        doSave: doSaveFlag || this.saveAllTraces || req.query.debug,\n        tags: {\n          ...tracestate,\n          ...pluginTags,\n        },\n      });\n      this.plugin.trace(\n        (done) => {\n          res.on('finish', () => {\n            done();\n          });\n        },\n        `${req.method} ${req.path}`,\n        tracestate,\n      );\n    }\n    next();\n  }\n\n  trace<T>(fn: (...args: Array<unknown>) => T, name = fn.name || 'anonymous', tags: Record<string, unknown> = {}): T {\n    const currentTrace = this.getCurrentTrace();\n    if (currentTrace) {\n      Object.assign(tags, currentTrace.tags);\n    }\n    return this.plugin.trace(fn, name, tags) as T;\n  }\n\n  setRequestTag(key: string, value: string) {\n    const trace = this.getCurrentTrace() || { tags: {} };\n    trace.tags[key] = value;\n  }\n\n  getRequestTag(key: string) {\n    const trace = this.getCurrentTrace() || {};\n    return trace.tags[key];\n  }\n\n  getCurrentTrace(): Trace {\n    return httpContext.get('trace');\n  }\n\n  getCurrentSpan(): Span | undefined {\n    return this.plugin.getCurrentSpan();\n  }\n\n  makeID(length = SESSION_ID_LENGTH) {\n    const id = crypto.randomBytes(Math.ceil(length / 2)).toString('hex');\n    return id.slice(0, length);\n  }\n\n  makeTraceID() {\n    const currentTimeNs = BigInt(nanoTime());\n    const formattedTimestamp = currentTimeNs.toString(16).padStart(16, '0').substring(0, 16);\n    return formattedTimestamp + this.makeID(SPAN_ID_LENGTH);\n  }\n\n  getCurrentTags() {\n    let spanTags = this.plugin.getAllTags();\n    let trace = httpContext.get('trace');\n    if (trace || spanTags) {\n      trace = trace || { tags: {} };\n      spanTags = spanTags || {};\n      const { sessionId, reqId } = trace;\n      return {\n        sessionId,\n        reqId,\n        ...trace.tags,\n        ...spanTags,\n      };\n    }\n  }\n\n  addTraceHeaders(options: http.RequestOptions) {\n    let trace = httpContext.get('trace');\n    let tags = this.getCurrentTags();\n    if (trace || tags) {\n      trace = trace || {};\n      tags = tags || {};\n      const traceId = trace.traceId || this.makeTraceID();\n      const spanId = this.makeID(SPAN_ID_LENGTH);\n      let doSaveFlag: string | number = parseInt(trace.doSave);\n      if (isNaN(doSaveFlag)) {\n        doSaveFlag = trace.doSave || this.saveAllTraces ? '1' : '0';\n      }\n      const traceparent = `00-${traceId}-${spanId}-0${doSaveFlag}`;\n      const tracestate = Object.keys(tags)\n        .map((key) => `${key}=${tags[key]}`)\n        .join(',');\n      options.headers = options.headers || {};\n      options.headers.traceparent = traceparent;\n      options.headers.tracestate = tracestate;\n    }\n  }\n\n  logMixin(log?: unknown) {\n    const tags = this.getCurrentTags();\n    if (tags) {\n      const trace = httpContext.get('trace') || {};\n      if (this.isError(log)) {\n        this.setSaveTrace(true);\n      }\n      return {\n        traceId: trace.traceId,\n        ...tags,\n      };\n    }\n    return {};\n  }\n\n  isError(log?: unknown) {\n    return log && typeof log === 'object' && ERROR_KEYS.find((key) => (log as Record<string, unknown>)[key]);\n  }\n\n  setSaveTrace(doSave: boolean) {\n    const trace = httpContext.get('trace');\n    if (trace) {\n      trace.doSave = doSave;\n    }\n  }\n\n  errorMiddleware(app = this.app) {\n    app?.use((error: Error, req: Request, res: Response, next: NextFunction) => {\n      this.setSaveTrace(true);\n      error.name && this.setSpanTag('error.type', error.name);\n      error.message && this.setSpanTag('error.msg', error.message);\n      error.stack && this.setSpanTag('error.stack', error.stack);\n      next(error);\n    });\n  }\n}\n","import type { ResolverFn } from '../../types/ResolversFn';\nimport type {\n  CancelPolicyResponse,\n  HistoryForPolicyRelatedActions,\n  MutationCancelPolicyArgs,\n  PolicyDetails,\n  QueryExpandedPolicyDetailsArgs,\n  QueryHistoryForPolicyRelatedActionsArgs,\n} from '../../../shared/generated-types/graphql';\nimport { policyDetailsServices } from './services';\n\nexport type RentGuaranteeContext = {\n  token: { 'rent-guaranteeUserToken': string; 'rent-guaranteeSessionToken': string };\n};\n\nexport type PolicyResolver<Query> = ResolverFn<Query, RentGuaranteeContext>;\n\nconst expandedPolicyDetails: PolicyResolver<QueryExpandedPolicyDetailsArgs> = async (\n  _parent: unknown,\n  { policyId }: QueryExpandedPolicyDetailsArgs,\n  context: RentGuaranteeContext,\n): Promise<PolicyDetails | null> => {\n  return policyDetailsServices.getExpandedPolicyDetails(\n    policyId,\n    context?.token?.['rent-guaranteeUserToken'] || '',\n    context?.token?.['rent-guaranteeSessionToken'] || '',\n  );\n};\n\nconst historyForPolicyRelatedActions: PolicyResolver<QueryHistoryForPolicyRelatedActionsArgs> = async (\n  _parent: unknown,\n  { policyId }: QueryHistoryForPolicyRelatedActionsArgs,\n  context: RentGuaranteeContext,\n): Promise<HistoryForPolicyRelatedActions | null> => {\n  return policyDetailsServices.getHistoryForPolicyRelatedActions(\n    policyId,\n    context?.token?.['rent-guaranteeUserToken'],\n    context?.token?.['rent-guaranteeSessionToken'],\n  );\n};\n\nconst cancelPolicy: PolicyResolver<MutationCancelPolicyArgs> = async (\n  _parent: unknown,\n  { policyId, caseNumber, note }: MutationCancelPolicyArgs,\n  context: RentGuaranteeContext,\n): Promise<CancelPolicyResponse | null> => {\n  return policyDetailsServices.cancelPolicy(\n    policyId,\n    caseNumber,\n    note,\n    context?.token?.['rent-guaranteeUserToken'],\n    context?.token?.['rent-guaranteeSessionToken'],\n  );\n};\n\nconst policyDetailsQueryResolvers = {\n  expandedPolicyDetails,\n  historyForPolicyRelatedActions,\n};\n\nconst policyDetailsMutationResolvers = {\n  cancelPolicy,\n};\n\nconst policyDetailsResolvers = {\n  Query: policyDetailsQueryResolvers,\n  Mutation: policyDetailsMutationResolvers,\n};\n\nexport default policyDetailsResolvers;\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Lease\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"monthlyRentUsd\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"startDate\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Float\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"endDate\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Float\"}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Payments\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"termType\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"firstExpectedPaymentDate\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"PaymentDateType\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"finalExpectedPaymentDate\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"PaymentDateType\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"firstSuccessfulPaymentDate\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"PaymentDateType\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"mostRecentSuccessfulPaymentDate\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"PaymentDateType\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"rentTermsCancelledDate\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"PaymentDateType\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"daysDelinquent\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"PaymentDateType\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"year\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"month\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"day\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Property\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"listingAlias\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"street\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"unit\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"city\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"state\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"zip\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Landlord\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"firstName\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"lastName\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"email\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"phone\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"ApplicationEligibility\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"applicationId\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"applicationEligibilityStatus\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Renter\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"renterId\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"firstName\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"lastName\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"email\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"phone\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"creditCheckEligibleFlag\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Boolean\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"incomeToRentEligibleFlag\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Boolean\"}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"PolicyDetails\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"policyId\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"property\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Property\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"lease\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Lease\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"payments\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Payments\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"landlords\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Landlord\"}}}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"applicationEligibility\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ApplicationEligibility\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"renters\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Renter\"}}}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"policyStatus\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"isCancellable\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Boolean\"}}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"HistoryForPolicyRelatedActionsType\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"policyId\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"action\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"createdDate\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Float\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"message\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"source\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"sourceId\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"HistoryForPolicyRelatedActions\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"logs\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"HistoryForPolicyRelatedActionsType\"}}}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"CancelPolicyResponse\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"success\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Boolean\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"httpStatus\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"error\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"CancelPolicyError\"}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"CancelPolicyError\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"message\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Query\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"expandedPolicyDetails\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"policyId\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"PolicyDetails\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"historyForPolicyRelatedActions\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"policyId\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"HistoryForPolicyRelatedActions\"}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Mutation\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"cancelPolicy\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"policyId\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"caseNumber\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"note\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"CancelPolicyResponse\"}},\"directives\":[]}]}],\"loc\":{\"start\":0,\"end\":1858}};\n    doc.loc.source = {\"body\":\"type Lease {\\n  id: Int\\n  monthlyRentUsd: Int\\n  startDate: Float\\n  endDate: Float\\n}\\n\\ntype Payments {\\n  id: Int\\n  termType: String\\n  firstExpectedPaymentDate: PaymentDateType\\n  finalExpectedPaymentDate: PaymentDateType\\n  firstSuccessfulPaymentDate: PaymentDateType\\n  mostRecentSuccessfulPaymentDate: PaymentDateType\\n  rentTermsCancelledDate: PaymentDateType\\n  daysDelinquent: Int\\n}\\n\\ntype PaymentDateType {\\n  year: Int\\n  month: Int\\n  day: Int\\n}\\n\\ntype Property {\\n  listingAlias: String!\\n  street: String!\\n  unit: String\\n  city: String!\\n  state: String!\\n  zip: String!\\n}\\n\\ntype Landlord {\\n  id: String\\n  firstName: String!\\n  lastName: String!\\n  email: String!\\n  phone: String\\n}\\n\\ntype ApplicationEligibility {\\n  applicationId: String\\n  applicationEligibilityStatus: String\\n}\\n\\ntype Renter {\\n  renterId: String\\n  firstName: String!\\n  lastName: String!\\n  email: String!\\n  phone: String\\n  creditCheckEligibleFlag: Boolean\\n  incomeToRentEligibleFlag: Boolean\\n}\\n\\ntype PolicyDetails {\\n  policyId: String!\\n  property: Property\\n  lease: Lease\\n  payments: Payments\\n  landlords: [Landlord!]!\\n  applicationEligibility: ApplicationEligibility!\\n  renters: [Renter!]!\\n  policyStatus: String\\n  isCancellable: Boolean!\\n}\\n\\ntype HistoryForPolicyRelatedActionsType {\\n  policyId: String!\\n  action: String!\\n  createdDate: Float!\\n  message: String!\\n  source: String!\\n  sourceId: String!\\n}\\n\\ntype HistoryForPolicyRelatedActions {\\n  logs: [HistoryForPolicyRelatedActionsType]!\\n}\\n\\ntype CancelPolicyResponse {\\n  success: Boolean!\\n  httpStatus: Int!\\n  error: CancelPolicyError\\n}\\n\\ntype CancelPolicyError {\\n  message: String\\n}\\n\\ntype Query {\\n  expandedPolicyDetails(policyId: String!): PolicyDetails\\n  historyForPolicyRelatedActions(policyId: String!): HistoryForPolicyRelatedActions\\n}\\n\\ntype Mutation {\\n  cancelPolicy(policyId: String!, caseNumber: String!, note: String!): CancelPolicyResponse\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n      module.exports = doc;\n    \n","import axios from 'axios';\nimport log from '../../../server/utils/log';\nimport { tracer } from '../../../server/utils/tracer';\nimport { api } from '../../utils/api';\nimport type { CancelPolicyResponse } from '../../../../shared/generated-types/graphql';\nimport nodeMonitor from '../../../server/utils/nodeMonitor';\n\nconst cancelPolicy = async (\n  policyId: string,\n  caseNumber: string,\n  note: string,\n  rentGuaranteeUserToken: string,\n  rentGuaranteeSessionToken: string,\n): Promise<CancelPolicyResponse | null> => {\n  const response = await axios\n    .post(\n      `${api.gql.cancelPolicy}`,\n      {\n        policyId: policyId,\n        caseNumber: caseNumber,\n        note: note,\n        userToken: rentGuaranteeUserToken,\n      },\n      {\n        headers: {\n          Cookie: `rent-guaranteeUserToken=${rentGuaranteeUserToken}; rent-guaranteeSessionToken=${rentGuaranteeSessionToken}`,\n        },\n      },\n    )\n    .then((res) => res.data)\n    .catch((err) => {\n      log.error(`Network error cancelling policy for policyId: ${policyId}: ${err}`);\n      // Log an error (using the class instance's logger):\n      nodeMonitor.increment({ name: 'cancelPolicy failed', amount: 1 });\n      return null;\n    });\n\n  if (response) {\n    // Increment a count:\n    await nodeMonitor.increment({ name: 'cancelPolicy viewed', amount: 1 });\n    return response;\n  }\n\n  return null;\n};\n\nexport default tracer.wrap(cancelPolicy);\n","import axios from 'axios';\nimport log from '../../../server/utils/log';\nimport { tracer } from '../../../server/utils/tracer';\nimport { api } from '../../utils/api';\nimport type { PolicyDetails } from '../../../../shared/generated-types/graphql';\nimport nodeMonitor from '../../../server/utils/nodeMonitor';\n\nconst getExpandedPolicyDetails = async (\n  policyId: string,\n  rentGuaranteeUserToken: string,\n  rentGuaranteeSessionToken: string,\n): Promise<PolicyDetails | null> => {\n  const response = await axios\n    .get(`${api.gql.expandedPolicyDetails}?policyId=${policyId}`, {\n      headers: {\n        Cookie: `rent-guaranteeUserToken=${rentGuaranteeUserToken}; rent-guaranteeSessionToken=${rentGuaranteeSessionToken}`,\n      },\n    })\n    .then((res) => res.data.data)\n    .catch((err) => {\n      log.error(`Network error fetching policy for policyId: ${policyId}: ${err}`);\n      // Log an error (using the class instance's logger):\n      nodeMonitor.increment({ name: 'getExpandedPolicyDetails failed', amount: 1 });\n      return null;\n    });\n\n  if (response) {\n    // Increment a count:\n    await nodeMonitor.increment({ name: 'getExpandedPolicyDetails viewed', amount: 1 });\n    return response;\n  }\n\n  return null;\n};\n\nexport default tracer.wrap(getExpandedPolicyDetails);\n","import axios from 'axios';\nimport log from '../../../server/utils/log';\nimport { tracer } from '../../../server/utils/tracer';\nimport { api } from '../../utils/api';\nimport type { HistoryForPolicyRelatedActions } from '../../../../shared/generated-types/graphql';\nimport nodeMonitor from '../../../server/utils/nodeMonitor';\n\nconst getHistoryForPolicyRelatedActions = async (\n  policyId: string,\n  rentGuaranteeUserToken: string,\n  rentGuaranteeSessionToken: string,\n): Promise<HistoryForPolicyRelatedActions | null> => {\n  const response = await axios\n    .get(`${api.gql.historyForPolicyRelatedActions}?policyId=${policyId}`, {\n      headers: {\n        Cookie: `rent-guaranteeUserToken=${rentGuaranteeUserToken}; rent-guaranteeSessionToken=${rentGuaranteeSessionToken}`,\n      },\n    })\n    .then((res) => res.data.data)\n    .catch((err) => {\n      log.error(`Network error fetching history for policy related actions for for policyId: ${policyId}: ${err}`);\n      // Log an error (using the class instance's logger):\n      nodeMonitor.increment({ name: 'getHistoryForPolicyRelatedActions failed', amount: 1 });\n      return null;\n    });\n\n  if (response) {\n    // Increment a count:\n    await nodeMonitor.increment({ name: 'getHistoryForPolicyRelatedActions viewed', amount: 1 });\n    return response;\n  }\n\n  return null;\n};\n\nexport default tracer.wrap(getHistoryForPolicyRelatedActions);\n","import getExpandedPolicyDetails from './getExpandedPolicyDetails';\nimport getHistoryForPolicyRelatedActions from './getHistoryForPolicyRelatedActions';\nimport cancelPolicy from './cancelPolicy';\n\nexport const policyDetailsServices = {\n  getExpandedPolicyDetails,\n  getHistoryForPolicyRelatedActions,\n  cancelPolicy,\n};\n","import type { ResolverFn } from '../../types/ResolversFn';\nimport type { Landlords, QueryLandlordsDataForReportsArgs, Reports } from '../../../shared/generated-types/graphql';\nimport { reportsServices } from './services';\n\nexport type RentGuaranteeContext = {\n  token: { 'rent-guaranteeUserToken': string; 'rent-guaranteeSessionToken': string };\n};\n\nexport type ReportResolver<Query> = ResolverFn<Query, RentGuaranteeContext>;\n\nconst reports: ReportResolver<unknown> = async (\n  _parent: unknown,\n  _vars: unknown,\n  context: RentGuaranteeContext,\n): Promise<Reports | null | unknown> => {\n  return reportsServices.getReportsDetails(\n    context?.token?.['rent-guaranteeUserToken'] || '',\n    context?.token?.['rent-guaranteeSessionToken'] || '',\n  );\n};\n\nconst landlordsDataForReports: ReportResolver<QueryLandlordsDataForReportsArgs> = async (\n  _parent: unknown,\n  { methodToInvoke, urlParams }: QueryLandlordsDataForReportsArgs,\n  context: RentGuaranteeContext,\n): Promise<Landlords | null | unknown> => {\n  return reportsServices.getLandlordsDataForReports(\n    methodToInvoke,\n    urlParams,\n    context?.token?.['rent-guaranteeUserToken'] || '',\n    context?.token?.['rent-guaranteeSessionToken'] || '',\n  );\n};\n\nconst reportsQueryResolvers = {\n  reports,\n  landlordsDataForReports,\n};\n\nconst reportsResolvers = {\n  Query: reportsQueryResolvers,\n};\n\nexport default reportsResolvers;\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"MethodParamsDetails\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"paramName\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"paramDataType\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"paramDefaultValue\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Report\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"reportName\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"reportDescription\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"methodToInvoke\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"methodParamsDetails\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"MethodParamsDetails\"}}}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Reports\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"reportsDetails\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Report\"}}}}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"RentGuaranteeLandLord\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"landlordUserToken\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"firstName\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"lastName\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"emails\"},\"arguments\":[],\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"phones\"},\"arguments\":[],\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"RentGuaranteeLandLordObject\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"landlord\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"RentGuaranteeLandLord\"}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Landlords\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"rentGuaranteeLandlords\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"RentGuaranteeLandLordObject\"}}}}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Query\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"reports\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Reports\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"landlordsDataForReports\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"methodToInvoke\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"urlParams\"},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Landlords\"}},\"directives\":[]}]}],\"loc\":{\"start\":0,\"end\":692}};\n    doc.loc.source = {\"body\":\"type MethodParamsDetails {\\n  paramName: String!\\n  paramDataType: String!\\n  paramDefaultValue: Int!\\n}\\n\\ntype Report {\\n  reportName: String!\\n  reportDescription: String!\\n  methodToInvoke: String!\\n  methodParamsDetails: [MethodParamsDetails]!\\n}\\n\\ntype Reports {\\n  reportsDetails: [Report!]!\\n}\\n\\ntype RentGuaranteeLandLord {\\n  landlordUserToken: String!\\n  firstName: String\\n  lastName: String\\n  emails: [String]\\n  phones: [String]\\n}\\n\\ntype RentGuaranteeLandLordObject {\\n  landlord: RentGuaranteeLandLord\\n}\\n\\ntype Landlords {\\n  rentGuaranteeLandlords: [RentGuaranteeLandLordObject!]!\\n}\\n\\ntype Query {\\n  reports: Reports\\n  landlordsDataForReports(methodToInvoke: String!, urlParams: String): Landlords\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n      module.exports = doc;\n    \n","import axios from 'axios';\nimport log from '../../../server/utils/log';\nimport { tracer } from '../../../server/utils/tracer';\nimport type { Landlords } from '../../../../shared/generated-types/graphql';\nimport nodeMonitor from '../../../server/utils/nodeMonitor';\n\nconst getLandlordsDataForReports = async (\n  methodToInvoke: string,\n  urlParams: string | undefined | null,\n  rentGuaranteeUserToken: string,\n  rentGuaranteeSessionToken: string,\n): Promise<Landlords | null> => {\n  let url = `${process.env.API}/rent-guarantee/api/v1/admin/${methodToInvoke}`;\n  if (urlParams && urlParams?.length > 0) {\n    url = `${url}?${urlParams}`;\n  }\n\n  const response = await axios\n    .get(`${url}`, {\n      headers: {\n        Cookie: `rent-guaranteeUserToken=${rentGuaranteeUserToken}; rent-guaranteeSessionToken=${rentGuaranteeSessionToken}`,\n      },\n    })\n    .then((res) => res.data.data)\n    .catch((err) => {\n      log.error(`Network error fetching Landlords ${methodToInvoke} report: ${err}`);\n      // Log an error (using the class instance's logger):\n      nodeMonitor.increment({ name: 'landlordsReports failed', amount: 1 });\n      return null;\n    });\n\n  if (response) {\n    // Increment a count:\n    await nodeMonitor.increment({ name: 'landlordsReports viewed', amount: 1 });\n    return response;\n  }\n\n  return null;\n};\n\nexport default tracer.wrap(getLandlordsDataForReports);\n","import axios from 'axios';\nimport { api } from '../../utils/api';\nimport log from '../../../server/utils/log';\nimport { tracer } from '../../../server/utils/tracer';\nimport type { Reports } from '../../../../shared/generated-types/graphql';\nimport nodeMonitor from '../../../server/utils/nodeMonitor';\n\nconst getReportsDetails = async (\n  rentGuaranteeUserToken: string,\n  rentGuaranteeSessionToken: string,\n): Promise<Reports | null> => {\n  const response = await axios\n    .get(`${api.gql.reports}`, {\n      headers: {\n        Cookie: `rent-guaranteeUserToken=${rentGuaranteeUserToken}; rent-guaranteeSessionToken=${rentGuaranteeSessionToken}`,\n      },\n    })\n    .then((res) => res.data.data)\n    .catch((err) => {\n      log.error(`Network error fetching reports: ${err}`);\n      // Log an error (using the class instance's logger):\n      nodeMonitor.increment({ name: 'getHistoryForPolicyRelatedActions failed', amount: 1 });\n      return null;\n    });\n\n  if (response) {\n    // Increment a count:\n    await nodeMonitor.increment({ name: 'getExpandedPolicyDetails viewed', amount: 1 });\n    return response;\n  }\n\n  return null;\n};\n\nexport default tracer.wrap(getReportsDetails);\n","import getReportsDetails from './getReportsDetails';\nimport getLandlordsDataForReports from './getLandlordsDataForReports';\n\nexport const reportsServices = {\n  getReportsDetails,\n  getLandlordsDataForReports,\n};\n","import type { Policies, Policy } from '../../../shared/generated-types/graphql';\n\nexport type UnformattedPolicy = Policy & { applicationId: string; leaseId: number; paymentId: number };\n\nconst formatPolicy = (policy: UnformattedPolicy): Policy => {\n  return {\n    ...policy,\n    applicationId: {\n      id: policy.applicationId,\n    },\n    leaseId: {\n      id: policy.leaseId,\n    },\n    paymentId: {\n      id: policy.paymentId,\n    },\n  };\n};\n\nexport const buildPoliciesFromResponse = (response: { policies?: Array<UnformattedPolicy> }): Policies => {\n  const formattedPolicies = response?.policies?.map((policy) => formatPolicy(policy)) || [];\n\n  return { policies: formattedPolicies };\n};\n","import type { ResolverFn } from '../../types/ResolversFn';\nimport type {\n  History,\n  Policies,\n  PolicySearchTypes,\n  PolicyStatuses,\n  QueryHistoryArgs,\n  QuerySearchPoliciesArgs,\n} from '../../../shared/generated-types/graphql';\nimport { searchPoliciesServices } from './services';\n\nexport type RentGuaranteeContext = {\n  token: { 'rent-guaranteeUserToken': string; 'rent-guaranteeSessionToken': string };\n};\n\nexport type SearchPoliciesResolver<Query> = ResolverFn<Query, RentGuaranteeContext>;\n\nconst searchPolicies: SearchPoliciesResolver<QuerySearchPoliciesArgs> = async (\n  _parent: unknown,\n  { searchType, searchValue }: QuerySearchPoliciesArgs,\n  context: RentGuaranteeContext,\n): Promise<Policies | null> => {\n  return searchPoliciesServices.getSearchPolicies(\n    searchType,\n    searchValue,\n    context?.token?.['rent-guaranteeUserToken'] || '',\n    context?.token?.['rent-guaranteeSessionToken'] || '',\n  );\n};\n\nconst history: SearchPoliciesResolver<QueryHistoryArgs> = async (\n  _parent: unknown,\n  { logIdType, logIdValue }: QueryHistoryArgs,\n  context: RentGuaranteeContext,\n): Promise<History | null> => {\n  return searchPoliciesServices.getHistory(\n    logIdType,\n    logIdValue,\n    context?.token?.['rent-guaranteeUserToken'] || '',\n    context?.token?.['rent-guaranteeSessionToken'] || '',\n  );\n};\n\nconst policySearchTypes: SearchPoliciesResolver<unknown> = async (\n  _parent: unknown,\n  _vars: unknown,\n  context: RentGuaranteeContext,\n): Promise<PolicySearchTypes | null> => {\n  return searchPoliciesServices.getPolicySearchTypes(\n    context?.token?.['rent-guaranteeUserToken'] || '',\n    context?.token?.['rent-guaranteeSessionToken'] || '',\n  );\n};\n\nconst policyStatuses: SearchPoliciesResolver<unknown> = async (\n  _parent: unknown,\n  _vars: unknown,\n  context: RentGuaranteeContext,\n): Promise<PolicyStatuses | null> => {\n  return searchPoliciesServices.getPolicyStatuses(\n    context?.token?.['rent-guaranteeUserToken'] || '',\n    context?.token?.['rent-guaranteeSessionToken'] || '',\n  );\n};\n\nconst searchPoliciesQueryResolvers = {\n  searchPolicies,\n  history,\n  policySearchTypes,\n  policyStatuses,\n};\n\nconst searchPoliciesResolvers = {\n  Query: searchPoliciesQueryResolvers,\n};\n\nexport default searchPoliciesResolvers;\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Application\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Lease\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Payments\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Policy\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"createdDate\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Float\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"updatedDate\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Float\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"listingAlias\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"isActive\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Boolean\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"policyStatus\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"applicationId\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Application\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"leaseId\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Lease\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"paymentId\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Payments\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"policyId\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"leaseTermStartDate\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Float\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"leaseTermEndDate\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Float\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"policyTermStartDate\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Float\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"policyTermEndDate\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Float\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"landlordUserToken\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"renterIds\"},\"arguments\":[],\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Policies\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"policies\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Policy\"}}}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"HistoryType\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"idType\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"idValue\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"action\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"createdDate\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Float\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"userToken\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"message\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"History\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"logs\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"HistoryType\"}}}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"PolicySearchType\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"value\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"displayName\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"PolicySearchTypes\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"values\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"PolicySearchType\"}}}}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"PolicyStatus\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"value\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"displayName\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"PolicyStatuses\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"values\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"PolicyStatus\"}}}}},\"directives\":[]}]},{\"kind\":\"EnumTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"LogIdType\"},\"directives\":[],\"values\":[{\"kind\":\"EnumValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"listingAlias\"},\"directives\":[]},{\"kind\":\"EnumValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"userToken\"},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Query\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"searchPolicies\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"searchType\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"searchValue\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Policies\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"history\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"logIdType\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"LogIdType\"}}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"logIdValue\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"History\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"policySearchTypes\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"PolicySearchTypes\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"policyStatuses\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"PolicyStatuses\"}},\"directives\":[]}]}],\"loc\":{\"start\":0,\"end\":1199}};\n    doc.loc.source = {\"body\":\"type Application {\\n  id: String!\\n}\\n\\ntype Lease {\\n  id: Int\\n}\\n\\ntype Payments {\\n  id: Int\\n}\\n\\ntype Policy {\\n  createdDate: Float!\\n  updatedDate: Float!\\n  listingAlias: String!\\n  isActive: Boolean!\\n  policyStatus: String!\\n  applicationId: Application!\\n  leaseId: Lease!\\n  paymentId: Payments\\n  policyId: String!\\n  leaseTermStartDate: Float\\n  leaseTermEndDate: Float\\n  policyTermStartDate: Float\\n  policyTermEndDate: Float\\n  landlordUserToken: String\\n  renterIds: [String]\\n}\\n\\ntype Policies {\\n  policies: [Policy]!\\n}\\n\\ntype HistoryType {\\n  idType: String!\\n  idValue: String!\\n  action: String!\\n  createdDate: Float!\\n  userToken: String!\\n  message: String\\n}\\n\\ntype History {\\n  logs: [HistoryType]!\\n}\\n\\ntype PolicySearchType {\\n  value: String!\\n  displayName: String!\\n}\\n\\ntype PolicySearchTypes {\\n  values: [PolicySearchType!]!\\n}\\n\\ntype PolicyStatus {\\n  value: String!\\n  displayName: String!\\n}\\n\\ntype PolicyStatuses {\\n  values: [PolicyStatus!]!\\n}\\n\\nenum LogIdType {\\n  listingAlias\\n  userToken\\n}\\n\\ntype Query {\\n  searchPolicies(searchType: String!, searchValue: String!): Policies\\n  history(logIdType: LogIdType!, logIdValue: String!): History\\n  policySearchTypes: PolicySearchTypes\\n  policyStatuses: PolicyStatuses\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n      module.exports = doc;\n    \n","import type { LogIdType } from './../../../../shared/generated-types/graphql';\nimport axios from 'axios';\nimport log from '../../../server/utils/log';\nimport { tracer } from '../../../server/utils/tracer';\nimport { api } from '../../utils/api';\nimport type { History } from '../../../../shared/generated-types/graphql';\nimport nodeMonitor from '../../../server/utils/nodeMonitor';\n\nconst getHistory = async (\n  searchType: LogIdType,\n  searchValue: string,\n  rentGuaranteeUserToken: string,\n  rentGuaranteeSessionToken: string,\n): Promise<History | null> => {\n  const response = await axios\n    .get(`${api.gql.history}?logIdType=${searchType}&logIdValue=${searchValue}`, {\n      headers: {\n        Cookie: `rent-guaranteeUserToken=${rentGuaranteeUserToken}; rent-guaranteeSessionToken=${rentGuaranteeSessionToken}`,\n      },\n    })\n    .then((res) => res.data.data)\n    .catch((err) => {\n      log.error(`Network error fetching history for searchValue: ${searchValue}: ${err}`);\n      // Log an error (using the class instance's logger):\n      nodeMonitor.increment({ name: 'getHistory failed', amount: 1 });\n      return null;\n    });\n\n  // Increment a count:\n  await nodeMonitor.increment({ name: 'getHistory viewed', amount: 1 });\n\n  return response;\n};\n\nexport default tracer.wrap(getHistory);\n","import axios from 'axios';\nimport log from '../../../server/utils/log';\nimport { tracer } from '../../../server/utils/tracer';\nimport { api } from '../../utils/api';\nimport type { PolicySearchTypes } from '../../../../shared/generated-types/graphql';\nimport nodeMonitor from '../../../server/utils/nodeMonitor';\n\nconst getPolicySearchTypes = async (\n  rentGuaranteeUserToken: string,\n  rentGuaranteeSessionToken: string,\n): Promise<PolicySearchTypes | null> => {\n  const response = await axios\n    .get(`${api.gql.policySearchTypes}`, {\n      headers: {\n        Cookie: `rent-guaranteeUserToken=${rentGuaranteeUserToken}; rent-guaranteeSessionToken=${rentGuaranteeSessionToken}`,\n      },\n    })\n    .then((res) => res.data.data)\n    .catch((err) => {\n      log.error(`Network error fetching policy for policy search types: ${err}`);\n      // Log an error (using the class instance's logger):\n      nodeMonitor.increment({ name: 'getPolicySearchTypes failed', amount: 1 });\n      return null;\n    });\n\n  if (response) {\n    // Increment a count:\n    await nodeMonitor.increment({ name: 'getPolicySearchTypes viewed', amount: 1 });\n    return response;\n  }\n\n  return null;\n};\n\nexport default tracer.wrap(getPolicySearchTypes);\n","import axios from 'axios';\nimport log from '../../../server/utils/log';\nimport { tracer } from '../../../server/utils/tracer';\nimport { api } from '../../utils/api';\nimport type { PolicyStatuses } from '../../../../shared/generated-types/graphql';\nimport nodeMonitor from '../../../server/utils/nodeMonitor';\n\nconst getPolicyStatuses = async (\n  rentGuaranteeUserToken: string,\n  rentGuaranteeSessionToken: string,\n): Promise<PolicyStatuses | null> => {\n  const response = await axios\n    .get(`${api.gql.policyStatuses}`, {\n      headers: {\n        Cookie: `rent-guaranteeUserToken=${rentGuaranteeUserToken}; rent-guaranteeSessionToken=${rentGuaranteeSessionToken}`,\n      },\n    })\n    .then((res) => res.data.data)\n    .catch((err) => {\n      log.error(`Network error fetching policy statuses search types: ${err}`);\n      // Log an error (using the class instance's logger):\n      nodeMonitor.increment({ name: 'getPolicyStatuses failed', amount: 1 });\n      return null;\n    });\n\n  if (response) {\n    // Increment a count:\n    await nodeMonitor.increment({ name: 'getPolicyStatuses viewed', amount: 1 });\n    return response;\n  }\n\n  return null;\n};\n\nexport default tracer.wrap(getPolicyStatuses);\n","import axios from 'axios';\nimport log from '../../../server/utils/log';\nimport { tracer } from '../../../server/utils/tracer';\nimport { api } from '../../utils/api';\nimport { buildPoliciesFromResponse } from '../PoliciesBuilder';\nimport type { Policies } from '../../../../shared/generated-types/graphql';\nimport nodeMonitor from '../../../server/utils/nodeMonitor';\n\nconst getSearchPolicies = async (\n  searchType: string,\n  searchValue: string,\n  rentGuaranteeUserToken: string,\n  rentGuaranteeSessionToken: string,\n): Promise<Policies | null> => {\n  const response = await axios\n    .get(`${api.gql.searchPolicies}?searchType=${searchType}&searchValue=${searchValue}`, {\n      headers: {\n        Cookie: `rent-guaranteeUserToken=${rentGuaranteeUserToken}; rent-guaranteeSessionToken=${rentGuaranteeSessionToken}`,\n      },\n    })\n    .then((res) => res.data.data)\n    .catch((err) => {\n      log.error(`Network error fetching policy for ${searchType}: ${searchValue}: ${err}`);\n      // Log an error (using the class instance's logger):\n      nodeMonitor.increment({ name: 'getSearchPolicies failed', amount: 1 });\n      return null;\n    });\n\n  if (response) {\n    // Increment a count:\n    await nodeMonitor.increment({ name: 'getSearchPolicies viewed', amount: 1 });\n    return buildPoliciesFromResponse(response);\n  }\n\n  return null;\n};\n\nexport default tracer.wrap(getSearchPolicies);\n","import getSearchPolicies from './getSearchPolicies';\nimport getHistory from './getHistory';\nimport getPolicySearchTypes from './getPolicySearchTypes';\nimport getPolicyStatuses from './getPolicyStatuses';\n\nexport const searchPoliciesServices = {\n  getSearchPolicies,\n  getHistory,\n  getPolicySearchTypes,\n  getPolicyStatuses,\n};\n","import { buildFederatedSchema } from '@apollo/federation';\nimport gql from 'graphql-tag';\nimport resolvers from './resolvers';\nimport schema from './schema';\n\nconst federatedSchema = buildFederatedSchema({\n  typeDefs: gql`\n    ${schema}\n  `,\n  resolvers,\n});\n\nexport default federatedSchema;\n","//resolvers\nimport searchPoliciesResolvers from './SearchPolicies/resolvers';\nimport policyDetailsResolvers from './PolicyDetails/resolvers';\nimport reportsResolvers from './Reports/resolvers';\n\n//typedefs\nimport searchPoliciesSchema from './SearchPolicies/schema.graphql';\nimport policyDetailsSchema from './PolicyDetails/schema.graphql';\nimport reportsSchema from './Reports/schema.graphql';\n\nexport const mergedResolvers = {\n  searchPoliciesResolvers,\n  policyDetailsResolvers,\n  reportsResolvers,\n};\n\nexport const mergedSchema = {\n  searchPoliciesSchema,\n  policyDetailsSchema,\n  reportsSchema,\n};\n","import merge from 'deepmerge';\nimport { mergedResolvers } from './index';\n\nconst allResolvers = [...Object.values(mergedResolvers)];\n\nlet resolversObj = {};\n\nallResolvers.forEach((resolver) => {\n  resolversObj = merge.all([resolversObj, resolver]);\n});\n\nexport default resolversObj;\n","import { mergeTypes } from 'merge-graphql-schemas';\nimport { mergedSchema } from './index';\n\nconst allSchemas = [...Object.values(mergedSchema)];\n\nconst schema = mergeTypes(allSchemas, { all: true });\n\nexport default schema;\n","export const makePath = (path: string, proxyPath?: string): string => {\n  if (proxyPath) {\n    return `${proxyPath}/${path}`;\n  }\n\n  return `${path}`;\n};\n\nexport const api = {\n  gql: {\n    searchPolicies: `${process.env.API}/rent-guarantee/api/v1/admin/searchPolicies`,\n    history: `${process.env.API}/rent-guarantee/api/v1/admin/getActionLogs`,\n    policySearchTypes: `${process.env.API}/rent-guarantee/api/v1/admin/getPolicySearchTypes`,\n    policyStatuses: `${process.env.API}/rent-guarantee/api/v1/admin/getPolicyStatuses`,\n    expandedPolicyDetails: `${process.env.API}/rent-guarantee/api/v1/admin/getExpandedPolicyDetails`,\n    historyForPolicyRelatedActions: `${process.env.API}/rent-guarantee/api/v1/admin/getPolicyActionLogs`,\n    cancelPolicy: `${process.env.API}/rent-guarantee/api/v1/admin/cancelPolicy`,\n    reports: `${process.env.API}/rent-guarantee/api/v1/admin/getReportsDetails`,\n  },\n};\n","import { Healthcheck } from '@zg-rentals/particles-js-healthcheck';\nimport type { Logger } from '@zg-rentals/particles-js-base-logger';\n\nfunction createHealthcheck(logger: Logger) {\n  const healthcheck = new Healthcheck({\n    accessToken: 'changeit',\n    logger: logger,\n    buildNumber: parseInt(__BUILD_NUMBER__ || '-1', 10),\n    onPing: ({ response, hasAccess }) => {\n      return {\n        ...response,\n        ...(hasAccess ? { zgApi: process.env.ZG_API } : {}),\n      };\n    },\n  });\n\n  return healthcheck;\n}\n\nexport default createHealthcheck;\n","import type { NextFunction, ParamsDictionary, Request, Response } from 'express-serve-static-core';\nimport type { ParsedQs } from 'qs';\nimport nodeMonitor from '../utils/nodeMonitor';\n\nexport default (app: {\n  use: (\n    arg0: (\n      req: Request<ParamsDictionary, unknown, unknown, ParsedQs, Record<string, unknown>>,\n      res: Response<unknown, Record<string, unknown>, number>,\n      next: NextFunction,\n    ) => Promise<void>,\n  ) => void;\n}) => {\n  app.use(nodeMonitor.onRequest.bind(nodeMonitor));\n};\n","import type { Logger } from '@zg-rentals/particles-js-base-logger';\nimport type { PinoLogger } from '@zg-rentals/particles-js-node-logger';\nimport express from 'express';\nimport cookieParser from 'cookie-parser';\nimport { getHttpLogger } from '@zg-rentals/particles-js-node-logger';\nimport cors from 'cors';\n\nimport monitorMiddleware from './middleware/nodeMonitor';\nimport log from './utils/log';\nimport createHealthcheck from './middleware/healthcheck';\nimport { tracer } from './utils/tracer';\n\n// GraphQL\nimport { ApolloServer } from 'apollo-server-express';\nimport schema from '../graphql/federatedSchema';\n\nconst step = log.child('server') as Logger;\n\nstep.warn('running server');\n\nconst server = new ApolloServer({\n  schema,\n  context: ({ req }) => {\n    const token = req.cookies;\n\n    return {\n      token,\n    };\n  },\n  introspection: __DEV__,\n  playground: __DEV__,\n});\n\n// Express\nconst app = express();\nconst healthcheck = createHealthcheck(log.child('healthcheck') as Logger);\n\nconst httpLogger = getHttpLogger({\n  logger: (log as PinoLogger).logger,\n});\n\n// must bind 'this' because of JS\nmonitorMiddleware(app);\n\ntracer.traceApp(app);\n\nif (__DEV__) {\n  const corsOptions = {\n    // @ts-ignore expect-any\n    origin: (origin, callback) => {\n      callback(null, origin);\n    },\n    credentials: true,\n  };\n  app.use(cors(corsOptions));\n}\n\napp.use(cookieParser());\napp.use(httpLogger);\napp.use(`*/check`, tracer.wrap(healthcheck.check as (...args: Array<unknown>) => unknown, 'healthcheck'));\napp.use(`*/shutdown`, healthcheck.shutdown);\napp.get(`/`, (req, res) => {\n  step.warn(req.cookies, 'Cookies');\n  res.writeHead(200, { 'Content-Type': 'text/html' });\n  res.write(`Rent Guarantee Express Server Response!`);\n  res.end();\n});\n\ntracer.errorMiddleware();\n\n// Express error handler\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\napp.use((err: any, req: unknown, res: { status: (arg0: number) => void }, next: () => void) => {\n  log.error(err);\n  res.status(500);\n  next();\n});\n\nserver.applyMiddleware({ app, path: '/rent-guarantee-graphql/graphql', cors: false });\n\nexport default app;\n","import type { PinoLoggerInterface } from '@zg-rentals/particles-js-node-logger';\nimport getLogger from '@zg-rentals/particles-js-node-logger';\nimport { tracer } from './tracer';\n\nconst log = getLogger<PinoLoggerInterface>({\n  type: 'pino',\n  logPath: process.env.NODE_OUT_FILE,\n  prettyPath: '',\n  pinoArgs: {\n    level: process.env.LOG_LEVEL,\n    mixin: () => tracer.logMixin(),\n  },\n});\n\nexport default log;\n","import env from 'env-var';\n\nimport log from '../../server/utils/log';\nimport type { Logger } from '@zg-rentals/particles-js-base-logger';\n\nimport {\n  NodeMonitor,\n  NodeMonitorPontoonReporter,\n  NodeVitalsPlugin,\n  PontoonHeartbeatPlugin,\n} from '@zg-rentals/monitor-node';\n\nconst webappName = env.get('APP_NAME').asString();\nconst gitCommit = env.get('GIT_COMMIT').asString();\nconst pontoonApi = env.get('PONTOON_API').asString();\nconst pontoonApiKey = env.get('PONTOON_API_KEY').asString();\nconst gitBranch = env.get('GIT_BRANCH').asString();\nconst startupDate = env.get('APP_START_TIME').asInt() || Date.now();\n\n// I'm using presence or lack of pontoon env vars to indicate env support -- could also be done through new env var PONTOON_ENABLED\nconst pontoonEnabled = pontoonApi && pontoonApiKey;\n\nconst plugins = [];\nconst reporters = [];\n\nconst monitorLogger = log.child('monitor-node') as Logger;\n\nif (pontoonEnabled) {\n  const pontoonReporter = new NodeMonitorPontoonReporter({\n    logger: monitorLogger,\n    webappName: webappName as string,\n    api: pontoonApi,\n    apiKey: pontoonApiKey,\n  });\n  reporters.push(pontoonReporter);\n\n  const pontoonHeartbeatPlugin = new PontoonHeartbeatPlugin({\n    logger: monitorLogger,\n    webappName: webappName as string,\n    api: pontoonApi,\n    apiKey: pontoonApiKey,\n    startupDate,\n    buildDate: typeof __BUILD_DATE__ === 'undefined' ? startupDate : parseInt(__BUILD_DATE__),\n    buildId: parseInt(__BUILD_NUMBER__),\n    commitId: gitCommit,\n    gitBranch,\n  });\n\n  plugins.push(pontoonHeartbeatPlugin);\n}\n\nconst nodeVitalsPlugin = new NodeVitalsPlugin({\n  logger: monitorLogger,\n  webappName: webappName as string,\n  buildNumber: parseInt(__BUILD_NUMBER__),\n  gitCommit,\n});\n\nplugins.push(nodeVitalsPlugin);\n\nconst nodeMonitor = new NodeMonitor({\n  logger: monitorLogger,\n  reporters,\n  plugins,\n});\n\nexport default nodeMonitor;\n","import { DatadogTracerPlugin, NodeTracer } from '@zg-rentals/trace-node';\n\nconst service = process.env.DD_SERVICE || __APP_NAME__;\nconst hostname = process.env.DD_TRACE_AGENT_HOSTNAME || process.env.DD_AGENT_HOST || 'datadog-agent';\n\nconst plugin = new DatadogTracerPlugin({\n  service: __APP_NAME__,\n  version: String(__BUILD_NUMBER__),\n  sampleRate: 0.5,\n  hostname,\n});\n\nplugin.tracer.use('express', { service });\nplugin.tracer.use('graphql', { service });\n\nexport const tracer = new NodeTracer({ plugin });\n","module.exports = require(\"@apollo/federation\");","module.exports = require(\"apollo-server-express\");","module.exports = require(\"axios\");","module.exports = require(\"child_process\");","module.exports = require(\"cookie-parser\");","module.exports = require(\"core-js/modules/es.number.is-finite.js\");","module.exports = require(\"core-js/modules/es.object.freeze.js\");","module.exports = require(\"core-js/modules/es.object.values.js\");","module.exports = require(\"core-js/modules/es.string.pad-start.js\");","module.exports = require(\"cors\");","module.exports = require(\"dd-trace\");","module.exports = require(\"deepmerge\");","module.exports = require(\"env-var\");","module.exports = require(\"event-loop-stats\");","module.exports = require(\"express-http-context\");","module.exports = require(\"graphql-tag\");","module.exports = require(\"http\");","module.exports = require(\"https\");","module.exports = require(\"ip-range-check\");","module.exports = require(\"merge-graphql-schemas\");","module.exports = require(\"nano-time\");","module.exports = require(\"node-fetch\");","module.exports = require(\"on-headers\");","module.exports = require(\"perf_hooks\");","module.exports = require(\"pino\");","module.exports = require(\"pino-http\");","module.exports = require(\"properties-reader\");","module.exports = require(\"read-pkg\");","module.exports = require(\"stream\");","module.exports = require(\"url\");","module.exports = require(\"v8\");"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAjBA;AAAA;AAAA;AAkBA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAzBA;AAAA;AAAA;AA2BA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAlCA;AAAA;AAAA;AAAA;AAoCA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AArCA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwCA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AAZA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAzCA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwDA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AAZA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAzDA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwEA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAzEA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;;;;;;;;;;;;;AC7CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACcA;AAaA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AAAA;AACA;AACA;;;;;;;;;;;;AClCA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCA;AACA;AAEA;AAAA;AACA;AADA;AACA;AAAA;AAAA;AACA;AADA;AACA;AADA;AACA;AAAA;AAEA;AAFA;AAKA;AACA;AADA;AANA;AASA;AACA;AAXA;AAAA;AAAA;AAYA;AACA;AAEA;AACA;AAhBA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;;;;;;;;;;;;;;;;;;;;;;AC0BA;AAWA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;AC7CA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACEA;AAKA;AAAA;AACA;AADA;AACA;AAIA;AAUA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAFA;AACA;AADA;AACA;AADA;AACA;AAMA;AACA;AACA;AAAA;AACA;AAVA;AAUA;AACA;AA1BA;AAAA;AAAA;AA4BA;AACA;AA7BA;AAAA;AAAA;AAgCA;AACA;AACA;AAlCA;AAAA;AAAA;AAoCA;AACA;AAAA;AACA;AACA;AAIA;AACA;AA5CA;AAAA;AAAA;AA+CA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAtDA;AAAA;AAAA;AAwDA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AA9DA;AAAA;AAAA;AAgEA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAtEA;AAAA;AAAA;AAwEA;AACA;AADA;AACA;AAEA;AACA;AA5EA;AACA;AADA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AAYA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AAMA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAzBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;;;;;;;;;;;;;ACtBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCA;AAEA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAIA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAIA;AAAA;AACA;AADA;AACA;AAAA;AAAA;AACA;AADA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAQA;AACA;AAGA;AACA;AAFA;AACA;AAMA;AAAA;AAAA;AACA;AACA;AACA;AArBA;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AApCA;AACA;AAAA;AACA;AALA;AAKA;AACA;AAPA;AAAA;AAAA;AAAA;AAyCA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAGA;AACA;AACA;AALA;AAMA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA1CA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AAGA;AACA;AAgBA;AACA;AAEA;AAAA;AACA;AADA;AACA;AAIA;AAMA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AAFA;AACA;AAFA;AACA;AADA;AACA;AADA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAzBA;AAyBA;AACA;AArCA;AAAA;AAAA;AAsCA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAzCA;AAAA;AAAA;AA4CA;AACA;AACA;AACA;AACA;AAhDA;AAAA;AAAA;AAAA;AAkDA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAnDA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AAIA;AAOA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAKA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AADA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAlFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AAGA;AACA;AAiBA;AACA;AACA;AAEA;AAAA;AACA;AADA;AACA;AAKA;AAYA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AAFA;AACA;AAFA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AAKA;AACA;AADA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAeA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAtCA;AAuCA;AACA;AA1DA;AAAA;AAAA;AA2DA;AACA;AAAA;AACA;AAEA;AAFA;AAIA;AACA;AAlEA;AAAA;AAAA;AAqEA;AACA;AACA;AAvEA;AAAA;AAAA;AAAA;AAyEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAMA;AACA;AAFA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA1EA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAoFA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAzFA;AACA;AADA;AAAA;;;;;;;;;;;;;ACzBA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACGA;AAEA;AAAA;AACA;AADA;AACA;AAEA;AAUA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAFA;AACA;AAMA;AAPA;AAQA;AACA;AAtBA;AAAA;AAAA;AAwBA;AACA;AACA;AACA;AACA;AACA;AA7BA;AACA;AADA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AAkBA;AAEA;AAAA;AACA;AADA;AACA;AAQA;AAQA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAFA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AAMA;AACA;AADA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AA1BA;AA8BA;AACA;AAhDA;AAAA;AAAA;AAkDA;AACA;AAnDA;AAAA;AAAA;AAqDA;AACA;AACA;AACA;AAxDA;AAAA;AAAA;AAAA;AA0DA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAKA;AACA;AARA;AAAA;AAAA;AAAA;AACA;AAQA;AATA;AAAA;AAYA;AACA;AACA;AAHA;AAUA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAzBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA3DA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsFA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAKA;AACA;AARA;AAAA;AAAA;AAAA;AACA;AAQA;AATA;AAAA;AAYA;AACA;AACA;AAHA;AAOA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AApBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAvFA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6GA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA9GA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAiHA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlIA;AAAA;AAAA;AAoIA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AA3IA;AACA;AADA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBA;AACA;AACA;AAEA;AAeA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBA;AACA;AACA;AA8BA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvDA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AALA;AAYA;AAAA;AACA;AADA;AACA;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AAAA;AAAA;AACA;AAFA;AACA;AACA;AAFA;AAGA;AACA;AAPA;AAAA;AAAA;AASA;AAAA;AADA;AACA;AACA;AAAA;AACA;AACA;AAZA;AAAA;AAAA;AAcA;AAAA;AADA;AACA;AACA;AAAA;AACA;AACA;AAjBA;AAAA;AAAA;AAmBA;AAAA;AADA;AACA;AACA;AAAA;AACA;AACA;AAtBA;AAAA;AAAA;AAwBA;AAAA;AADA;AACA;AACA;AAAA;AACA;AACA;AA3BA;AAAA;AAAA;AA6BA;AAAA;AADA;AACA;AACA;AAAA;AACA;AACA;AAhCA;AAAA;AAAA;AAkCA;AACA;AACA;AACA;AACA;AACA;AAvCA;AACA;AADA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AAEA;AAAA;AACA;AADA;AACA;AAEA;AAAA;AACA;AADA;AAAA;AACA;AADA;AACA;AAAA;AAAA;AAAA;AACA;AAFA;AACA;AACA;AAFA;AAGA;AACA;AACA;AARA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBA;AACA;AACA;AACA;AACA;AACA;AAxBA;AACA;AADA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AAEA;AACA;AACA;AAEA;AACA;AACA;AA4DA;AAWA;AAQA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AAgBA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9BA;AAmFA;AAEA;AAEA;AACA;AACA;AAzFA;AAyGA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzHA;AA0IA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAtJA;AAwJA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AApLA;AAsLA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AA1MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAjCA;AAAA;AAAA;AAmDA;AAEA;AACA;AAtDA;AAAA;AAAA;AAyDA;AACA;AACA;AAFA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5EA;AAAA;AAAA;AA+EA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAvFA;AAAA;AAAA;AA0FA;AACA;AACA;AACA;AACA;AAC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AAcA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AAeA;AACA;AAAA;AACA;AAFA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AApBA;AAsBA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAKA;AACA;AACA;AArCA;AAuCA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAtDA;AAwDA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjEA;AAmEA;AACA;AACA;AACA;AACA;AACA;AACA;AAzEA;AA2EA;AAAA;AAAA;AAAA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9FA;AAgGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxGA;AA0GA;AACA;AACA;AAAA;AAAA;AACA;AACA;AA7GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;AC3CA;AAAA;AAGA;AACA;AAFA;;;;;;;;;;;;;ACFA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACFA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AADA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3DA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzCA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACFA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAHA;AAOA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AARA;AAYA;AACA;AAEA;AACA;AAFA;AAMA;AACA;;;;;;;;;;;;;ACpCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAmBA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClCA;AAEA;AAsBA;AAIA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAlCA;AAAA;AAAA;AAoCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxDA;AAAA;AAAA;AA0DA;AAEA;AACA;AACA;AA9DA;AAAA;AAAA;AAiEA;AAEA;AACA;AApEA;AAAA;AAAA;AAuEA;AAEA;AACA;AA1EA;AAAA;AAAA;AA6EA;AAEA;AACA;AAhFA;AACA;AADA;AAAA;AAmFA;;;;;;;;;;;;;AC7FA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AArBA;AAuBA;AACA;AACA;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACxDA;AACA;AACA;AADA;AACA;AAAA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AAIA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AAMA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AAfA;AAiBA;AACA;AACA;AAnBA;AAqBA;AACA;AACA;AAtBA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVA;AAuBA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AACA;AASA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AASA;AAAA;AAAA;AACA;;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;AC5HA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AAgBA;AAUA;AAAA;AAAA;AACA;;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAGA;AAAA;AAAA;AACA;AAFA;AACA;AAHA;AAEA;AAFA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AASA;AAAA;AAAA;AACA;;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAGA;AACA;AAFA;AACA;AAHA;AAEA;AAFA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AASA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAKA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAKA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AANA;AAeA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAdA;AAAA;AAAA;AAaA;AACA;AAAA;AAAA;AAAA;AAKA;AAnBA;AACA;AADA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1HA;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAUA;;;;;;;AAKA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;;;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AAIA;;;AAEA;AACA;AACA;AACA;;;AAxDA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC3CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACEA;AAEA;AAMA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AAAA;AACA;AACA;AATA;AAAA;AAAA;AAWA;AACA;AAZA;AAAA;AAAA;AAeA;AACA;AAhBA;AAAA;AAAA;AAmBA;AACA;AACA;AACA;AAtBA;AACA;AADA;AAAA;AAyBA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAhBA;AAAA;AAAA;AAmBA;AACA;AACA;AACA;AAtBA;AAAA;AAAA;AAyBA;AACA;AA1BA;AAAA;AAAA;AA4BA;AACA;AAAA;AACA;AACA;AACA;AACA;AAjCA;AAAA;AAAA;AAoCA;AACA;AArCA;AAAA;AAAA;AAuCA;AACA;AAAA;AACA;AAzCA;AACA;AADA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AAGA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AATA;AAAA;AAAA;AAUA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AArBA;AAAA;AAAA;AAwBA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AALA;AAOA;AAjCA;AAAA;AAAA;AAoCA;AACA;AACA;AAtCA;AAAA;AAAA;AAwCA;AACA;AACA;AA1CA;AAAA;AAAA;AA6CA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAlDA;AAAA;AAAA;AAqDA;AACA;AAAA;AACA;AACA;AACA;AAzDA;AAAA;AAAA;AA4DA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1EA;AAAA;AAAA;AA6EA;AAIA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AA5FA;AACA;AADA;AAAA;;;;;;;;;;;;;ACnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAUA;AAEA;AAEA;AAAA;AACA;AADA;AACA;AAIA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AACA;AADA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AApBA;AAqBA;AACA;AA3BA;AAAA;AAAA;AA4BA;AACA;AAAA;AACA;AAAA;AAKA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAnDA;AAAA;AAAA;AAsDA;AACA;AACA;AACA;AAzDA;AAAA;AAAA;AA4DA;AACA;AACA;AA9DA;AAAA;AAAA;AAgEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAzEA;AAAA;AAAA;AA4EA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AApFA;AAAA;AAAA;AAuFA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAUA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AArIA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","sourceRoot":""}
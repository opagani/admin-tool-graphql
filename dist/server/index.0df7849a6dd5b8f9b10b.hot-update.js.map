{"version":3,"file":"index.0df7849a6dd5b8f9b10b.hot-update.js","sources":["webpack:///./app/graphql/index.ts"],"sourcesContent":["/* eslint-disable no-console */\n//resolvers\nimport searchPoliciesResolvers from './SearchPolicies/resolvers';\nimport policyDetailsResolvers from './PolicyDetails/resolvers';\nimport reportsResolvers from './Reports/resolvers';\n\nconst { GraphQLScalarType, Kind } = require('graphql');\n\nconst dateScalar = new GraphQLScalarType({\n  name: 'Date',\n  description: 'Date custom scalar type',\n  serialize(value: { getTime: () => unknown }) {\n    console.log('UNO', value);\n    return value.getTime(); // Convert outgoing Date to integer for JSON\n  },\n  parseValue(value: string | number | Date) {\n    console.log('DOS', value);\n    return new Date(value); // Convert incoming integer to Date\n  },\n  parseLiteral(ast: { kind: unknown; value: string }) {\n    if (ast.kind === Kind.INT) {\n      console.log('TRES', ast.value);\n      return new Date(parseInt(ast.value, 10)); // Convert hard-coded AST string to integer and then to Date\n    }\n    return null; // Invalid hard-coded value (not an integer)\n  },\n});\n\n//typedefs\nimport searchPoliciesSchema from './SearchPolicies/schema.graphql';\nimport policyDetailsSchema from './PolicyDetails/schema.graphql';\nimport reportsSchema from './Reports/schema.graphql';\n\nexport const mergedResolvers = {\n  searchPoliciesResolvers,\n  policyDetailsResolvers,\n  reportsResolvers,\n  dateScalar,\n};\n\nexport const mergedSchema = {\n  searchPoliciesSchema,\n  policyDetailsSchema,\n  reportsSchema,\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAjBA;AACA;AAoBA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAHA;;;;A","sourceRoot":""}
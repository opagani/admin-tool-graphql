{"version":3,"file":"index.6d7254fde007b3328b72.hot-update.js","sources":["webpack:///./app/graphql/SearchPolicies/services/getHistory.ts"],"sourcesContent":["import type { LogIdType } from './../../../../shared/generated-types/graphql';\nimport axios from 'axios';\nimport log from '../../../server/utils/log';\nimport { tracer } from '../../../server/utils/tracer';\nimport { api } from '../../utils/api';\nimport type { History } from '../../../../shared/generated-types/graphql';\nimport nodeMonitor from '../../../server/utils/nodeMonitor';\n\nconst getHistory = async (\n  searchType: LogIdType,\n  searchValue: string,\n  rentGuaranteeUserToken: string,\n  rentGuaranteeSessionToken: string,\n): Promise<History | null> => {\n  const response = await axios\n    .get(`${api.gql.history}?logIdType=${searchType}&logIdValue=${searchValue}`, {\n      headers: {\n        Cookie: `rent-guaranteeUserToken=${rentGuaranteeUserToken}; rent-guaranteeSessionToken=${rentGuaranteeSessionToken}`,\n      },\n    })\n    .then((res) => res.data.data)\n    .catch((err) => {\n      log.error(`Network error fetching history for searchValue: ${searchValue}: ${err}`);\n      // Log an error (using the class instance's logger):\n      nodeMonitor.increment({ name: 'getHistory failed', amount: 1 });\n      return null;\n    });\n\n  // Increment a count:\n  await nodeMonitor.increment({ name: 'getHistory viewed', amount: 1 });\n\n  return response;\n};\n\nexport default tracer.wrap(getHistory);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AADA;AADA;AAKA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAnBA;AAMA;AANA;AAAA;AAqBA;AAAA;AAAA;AACA;AAtBA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAyBA;;;;A","sourceRoot":""}
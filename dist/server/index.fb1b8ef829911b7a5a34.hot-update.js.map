{"version":3,"file":"index.fb1b8ef829911b7a5a34.hot-update.js","sources":["webpack:////Users/opagani/projects/zillowgroup/rentals-js/modules/particles-js-utils/src/getIp.ts"],"sourcesContent":["import type http from 'http';\n\n/* eslint-disable @typescript-eslint/no-var-requires */\nconst ipRangeCheck = require('ip-range-check');\n\n// TODO: inherently insecure to ip spoofing\n// x-client-ip is only set on node -> node proxy\n// need to protect against x-client-ip spoof on client requests\n\n// req.get is a case-insensitive match\n// http://expressjs.com/en/api.html#req.get\nexport function getIpsFromReq(req: http.IncomingMessage) {\n  const zgIpHeader = req.headers['x-client-ip'] || req.headers['X-Client-Ip'];\n  const xForwadedFor = req.headers['x-forwarded-for'];\n  const socketRemoteAddres = (req.socket || {}).remoteAddress;\n\n  return {\n    zgIpHeader,\n    xForwadedFor,\n    socketRemoteAddres,\n    defaultIpAddress: '0.0.0.0',\n  };\n}\n\nexport function selectValidIp(req: http.IncomingMessage) {\n  const { zgIpHeader, xForwadedFor, socketRemoteAddres, defaultIpAddress } = getIpsFromReq(req);\n  const ipByPrecedence = zgIpHeader || xForwadedFor || socketRemoteAddres || defaultIpAddress;\n\n  // deal with comma delimited ips\n  if (!Array.isArray(ipByPrecedence) && ipByPrecedence.indexOf(',') > -1) {\n    const ipArr = ipByPrecedence.replace(/ /g, '').split(',');\n    const filteredIps = ipArr.filter((ip) => !ipRangeCheck(ip, '10.0.0.0/8') && !ipRangeCheck(ip, '172.16.1.0/12') && !ipRangeCheck(ip, '100.64.0.0/10'));\n\n    if (filteredIps.length) {\n      return filteredIps[0];\n    }\n\n    return defaultIpAddress;\n  }\n\n  return ipByPrecedence;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}
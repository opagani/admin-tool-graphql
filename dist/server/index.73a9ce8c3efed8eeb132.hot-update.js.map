{"version":3,"file":"index.73a9ce8c3efed8eeb132.hot-update.js","sources":["webpack:///./app/graphql/index.ts"],"sourcesContent":["//resolvers\nimport searchPoliciesResolvers from './SearchPolicies/resolvers';\nimport policyDetailsResolvers from './PolicyDetails/resolvers';\nimport reportsResolvers from './Reports/resolvers';\nconst { GraphQLScalarType, Kind } = require('graphql');\n\nconst resolverMap = {\n  Date: new GraphQLScalarType({\n    name: 'Date',\n    description: 'Date custom scalar type',\n    parseValue(value) {\n      return new Date(value); // value from the client\n    },\n    serialize(value) {\n      return value.getTime(); // value sent to the client\n    },\n    parseLiteral(ast) {\n      if (ast.kind === Kind.INT) {\n        return new Date(+ast.value); // ast value is always in string format\n      }\n      return null;\n    },\n  }),\n};\n\n//typedefs\nimport searchPoliciesSchema from './SearchPolicies/schema.graphql';\nimport policyDetailsSchema from './PolicyDetails/schema.graphql';\nimport reportsSchema from './Reports/schema.graphql';\n\nexport const mergedResolvers = {\n  searchPoliciesResolvers,\n  policyDetailsResolvers,\n  reportsResolvers,\n};\n\nexport const mergedSchema = {\n  searchPoliciesSchema,\n  policyDetailsSchema,\n  reportsSchema,\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAdA;AADA;AACA;AAmBA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAHA;;;;;;;A","sourceRoot":""}
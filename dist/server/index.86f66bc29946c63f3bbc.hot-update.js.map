{"version":3,"file":"index.86f66bc29946c63f3bbc.hot-update.js","sources":["webpack:////Users/opagani/projects/zillowgroup/rentals-js/modules/logger-node/src/get-log-middleware.ts","webpack:////Users/opagani/projects/zillowgroup/rentals-js/modules/logger-node/src/index.ts","webpack:////Users/opagani/projects/zillowgroup/rentals-js/modules/trace-node/src/tracer.ts","webpack:///./app/graphql/PolicyDetails/schema.graphql","webpack:///./app/server/server.ts","webpack:///./app/server/utils/log.ts","webpack:///external \"url\""],"sourcesContent":["import type { Request, Response } from 'express';\nimport type { Level, LogEvent } from 'pino';\nimport type { Logger } from '@zg-rentals/logger-base';\n\nexport function getLogMiddleware(logger: Logger) {\n  return function logMiddleware(req: Request, res: Response) {\n    const logs = req.body?.logs || req.body;\n\n    if (logs && Array.isArray(logs)) {\n      logs.forEach((logEvent: LogEvent) => {\n        const { level, ts, messages, bindings } = logEvent;\n        const bindingsAsObj = bindings.reduce((acc, binding) => {\n          return {\n            ...acc,\n            ...binding,\n          };\n        }, {});\n\n        bindingsAsObj.browser = true;\n\n        const childLogger = logger.child(bindingsAsObj);\n\n        if (messages[0]) {\n          if (typeof messages[0] !== 'object') {\n            messages.unshift({});\n          }\n\n          messages[0] = {\n            ...messages[0],\n            requestId: req.id,\n            time: ts,\n          };\n\n          childLogger[level.label as Level](messages[0], ...messages.slice(1));\n        }\n      });\n    }\n\n    res.send('ok');\n  };\n}\n","import getNodeLogger from './get-node-logger';\n\nexport type { Logger } from '@zg-rentals/logger-base';\nexport * from './get-node-logger';\nexport * from './get-log-middleware';\nexport * from './get-child-logger';\nexport * from './get-http-logger';\nexport * from './verbosity-to-level';\nexport * from './log-sync';\n\nexport default getNodeLogger;\n","import type { Span, Trace } from '@zg-rentals/trace-base';\nimport { BaseTracerPlugin } from './plugins';\nimport crypto from 'crypto';\nimport httpContext from 'express-http-context';\nimport http from 'http';\nimport https from 'https';\nimport { URL } from 'url';\nimport type { Application, NextFunction, Request, Response } from 'express';\nimport type { NodeTracerPlugin } from './plugins';\nimport nanoTime from 'nano-time';\nimport BaseTracer from '@zg-rentals/trace-base';\n\nexport const TRACE_COOKIE_NAME = 'rjs-trace';\nexport const TRACE_COOKIE_DURATION_SEC = 31536000;\nexport const SESSION_ID_LENGTH = 26;\nexport const TRACE_ID_LENGTH = 32;\nexport const SPAN_ID_LENGTH = 16;\n\nexport interface NodeTracerOptions {\n  plugin?: NodeTracerPlugin;\n  app?: Application;\n  saveAllTraces?: boolean;\n}\n\nexport type HttpCallback = (res: http.IncomingMessage) => void;\n\nlet requestsIntercepted: boolean = false;\n\nconst ERROR_KEYS = ['error', 'stack', 'err', 'errorStack', 'trace'];\n\nexport class NodeTracer extends BaseTracer {\n  plugin: NodeTracerPlugin;\n  app?: Application;\n  saveAllTraces: boolean;\n\n  constructor({ app, plugin, saveAllTraces = false }: NodeTracerOptions = {}) {\n    super();\n\n    if (typeof window !== 'undefined') {\n      throw new Error('@zg-rentals/trace-node should not be included in client-side code.');\n    }\n\n    this.saveAllTraces = saveAllTraces;\n\n    this.plugin = plugin || new BaseTracerPlugin();\n\n    if (app) {\n      this.traceApp(app);\n    }\n\n    if (!requestsIntercepted) {\n      this.interceptRequests(http);\n      this.interceptRequests(https);\n    }\n\n    requestsIntercepted = true;\n  }\n\n  interceptRequests(protocol: typeof http | typeof https) {\n    const originalRequest = protocol.request;\n    const wrappedRequest = (\n      urlOrOptions: http.RequestOptions | string | URL,\n      optionsOrCallback?: http.RequestOptions | HttpCallback,\n      callbackOrVoid?: HttpCallback,\n    ) => {\n      let url: string | URL;\n      let options: http.RequestOptions;\n      let callback: (res: http.IncomingMessage) => void;\n      if (typeof urlOrOptions === 'string' || urlOrOptions instanceof URL) {\n        url = urlOrOptions as string | URL;\n        options = optionsOrCallback as http.RequestOptions;\n        callback = callbackOrVoid as HttpCallback;\n        this.addTraceHeaders(options);\n        return originalRequest(url, options, callback);\n      }\n      options = urlOrOptions as http.RequestOptions;\n      callback = optionsOrCallback as HttpCallback;\n      this.addTraceHeaders(options);\n      return originalRequest(options, callback);\n    };\n    protocol.request = wrappedRequest;\n  }\n\n  traceApp(app: Application) {\n    this.app = app;\n    app.use(httpContext.middleware);\n    app.use(this.middleware.bind(this));\n  }\n\n  shouldBeTraced(req: Request) {\n    const contentType = req.headers['content-type'];\n    return Boolean(!contentType || contentType.match(/^(text|application)\\/(html|json)/i));\n  }\n\n  parseTraceState(tracestate = '') {\n    const state: Record<string, string> = {};\n    tracestate.split(',').forEach((keyVal) => {\n      if (keyVal) {\n        const [key, value] = keyVal.split('=');\n        state[key.trim()] = value.trim();\n      }\n    });\n    return state;\n  }\n\n  parseCookie(cookieName: string, req: Request) {\n    const cookies = req.get('cookie');\n    if (cookies) {\n      const regex = new RegExp(`(?:^|;\\\\s*)${cookieName}=(.*?)(?:;|$)`);\n      const match = cookies.match(regex);\n      if (match) {\n        return match[1];\n      }\n    }\n  }\n\n  middleware(req: Request, res: Response, next: NextFunction) {\n    if (this.shouldBeTraced(req)) {\n      const traceCookie = this.parseCookie(TRACE_COOKIE_NAME, req);\n      const cookieParts = traceCookie ? traceCookie.split(':') : [];\n      let [sessionId, traceId] = cookieParts;\n      let doSaveFlag = cookieParts[2];\n      if (!traceId || traceId.length !== TRACE_ID_LENGTH) {\n        const traceparent = req.headers?.traceparent || '';\n        const traceParts = traceparent.toString().split('-');\n        if (traceParts.length === 4 && traceParts[1].length === TRACE_ID_LENGTH) {\n          traceId = traceParts[1];\n          doSaveFlag = traceParts[3];\n        }\n        if (!traceId) {\n          traceId = this.makeTraceID();\n        }\n      }\n      if (!sessionId) {\n        sessionId = this.makeID(SESSION_ID_LENGTH);\n      }\n      res.setHeader(\n        'set-cookie',\n        `${TRACE_COOKIE_NAME}=${sessionId}::; path=/; max-age=${TRACE_COOKIE_DURATION_SEC}; samesite=strict`,\n      );\n      const tracestate = this.parseTraceState(req.headers.tracestate as string);\n      const pluginTags = this.plugin.parseRequestTags(req, this.parseCookie);\n      httpContext.set('trace', {\n        traceId,\n        sessionId,\n        reqId: this.makeID(SPAN_ID_LENGTH),\n        doSave: doSaveFlag || this.saveAllTraces || req.query.debug,\n        tags: {\n          ...tracestate,\n          ...pluginTags,\n        },\n      });\n      this.plugin.trace(\n        (done) => {\n          res.on('finish', () => {\n            done();\n          });\n        },\n        `${req.method} ${req.path}`,\n        tracestate,\n      );\n    }\n    next();\n  }\n\n  trace<T>(fn: (...args: Array<unknown>) => T, name = fn.name || 'anonymous', tags: Record<string, unknown> = {}): T {\n    const currentTrace = this.getCurrentTrace();\n    if (currentTrace) {\n      Object.assign(tags, currentTrace.tags);\n    }\n    return this.plugin.trace(fn, name, tags) as T;\n  }\n\n  setRequestTag(key: string, value: string) {\n    const trace = this.getCurrentTrace() || { tags: {} };\n    trace.tags[key] = value;\n  }\n\n  getRequestTag(key: string) {\n    const trace = this.getCurrentTrace() || {};\n    return trace.tags[key];\n  }\n\n  getCurrentTrace(): Trace {\n    return httpContext.get('trace');\n  }\n\n  getCurrentSpan(): Span | undefined {\n    return this.plugin.getCurrentSpan();\n  }\n\n  makeID(length = SESSION_ID_LENGTH) {\n    const id = crypto.randomBytes(Math.ceil(length / 2)).toString('hex');\n    return id.slice(0, length);\n  }\n\n  makeTraceID() {\n    const currentTimeNs = BigInt(nanoTime());\n    const formattedTimestamp = currentTimeNs.toString(16).padStart(16, '0').substring(0, 16);\n    return formattedTimestamp + this.makeID(SPAN_ID_LENGTH);\n  }\n\n  getCurrentTags() {\n    let spanTags = this.plugin.getAllTags();\n    let trace = httpContext.get('trace');\n    if (trace || spanTags) {\n      trace = trace || { tags: {} };\n      spanTags = spanTags || {};\n      const { sessionId, reqId } = trace;\n      return {\n        sessionId,\n        reqId,\n        ...trace.tags,\n        ...spanTags,\n      };\n    }\n  }\n\n  addTraceHeaders(options: http.RequestOptions) {\n    let trace = httpContext.get('trace');\n    let tags = this.getCurrentTags();\n    if (trace || tags) {\n      trace = trace || {};\n      tags = tags || {};\n      const traceId = trace.traceId || this.makeTraceID();\n      const spanId = this.makeID(SPAN_ID_LENGTH);\n      let doSaveFlag: string | number = parseInt(trace.doSave);\n      if (isNaN(doSaveFlag)) {\n        doSaveFlag = trace.doSave || this.saveAllTraces ? '1' : '0';\n      }\n      const traceparent = `00-${traceId}-${spanId}-0${doSaveFlag}`;\n      const tracestate = Object.keys(tags)\n        .map((key) => `${key}=${tags[key]}`)\n        .join(',');\n      options.headers = options.headers || {};\n      options.headers.traceparent = traceparent;\n      options.headers.tracestate = tracestate;\n    }\n  }\n\n  logMixin(log?: unknown) {\n    const tags = this.getCurrentTags();\n    if (tags) {\n      const trace = httpContext.get('trace') || {};\n      if (this.isError(log)) {\n        this.setSaveTrace(true);\n      }\n      return {\n        traceId: trace.traceId,\n        ...tags,\n      };\n    }\n    return {};\n  }\n\n  isError(log?: unknown) {\n    return log && typeof log === 'object' && ERROR_KEYS.find((key) => (log as Record<string, unknown>)[key]);\n  }\n\n  setSaveTrace(doSave: boolean) {\n    const trace = httpContext.get('trace');\n    if (trace) {\n      trace.doSave = doSave;\n    }\n  }\n\n  errorMiddleware(app = this.app) {\n    app?.use((error: Error, req: Request, res: Response, next: NextFunction) => {\n      this.setSaveTrace(true);\n      error.name && this.setSpanTag('error.type', error.name);\n      error.message && this.setSpanTag('error.msg', error.message);\n      error.stack && this.setSpanTag('error.stack', error.stack);\n      next(error);\n    });\n  }\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Lease\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"monthlyRentUsd\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"startDate\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Float\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"endDate\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Float\"}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Payments\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"termType\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"firstExpectedPaymentDate\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"PaymentDateType\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"finalExpectedPaymentDate\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"PaymentDateType\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"firstSuccessfulPaymentDate\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"PaymentDateType\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"mostRecentSuccessfulPaymentDate\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"PaymentDateType\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"rentTermsCancelledDate\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"PaymentDateType\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"daysDelinquent\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"PaymentDateType\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"year\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"month\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"day\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Property\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"listingAlias\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"street\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"unit\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"city\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"state\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"zip\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Landlord\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"firstName\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"lastName\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"email\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"phone\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"ApplicationEligibility\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"applicationId\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"applicationEligibilityStatus\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Renter\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"renterId\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"firstName\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"lastName\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"email\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"phone\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"creditCheckEligibleFlag\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Boolean\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"incomeToRentEligibleFlag\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Boolean\"}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"PolicyDetails\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"policyId\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"property\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Property\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"lease\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Lease\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"payments\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Payments\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"landlords\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Landlord\"}}}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"applicationEligibility\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ApplicationEligibility\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"renters\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Renter\"}}}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"policyStatus\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"isCancellable\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Boolean\"}}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"HistoryForPolicyRelatedActionsType\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"policyId\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"action\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"createdDate\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Float\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"message\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"source\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"sourceId\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"HistoryForPolicyRelatedActions\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"logs\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"HistoryForPolicyRelatedActionsType\"}}}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"CancelPolicyResponse\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"success\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Boolean\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"httpStatus\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"error\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"CancelPolicyError\"}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"CancelPolicyError\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"message\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Query\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"expandedPolicyDetails\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"policyId\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"PolicyDetails\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"historyForPolicyRelatedActions\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"policyId\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"HistoryForPolicyRelatedActions\"}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Mutation\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"cancelPolicy\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"policyId\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"caseNumber\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"note\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"CancelPolicyResponse\"}},\"directives\":[]}]}],\"loc\":{\"start\":0,\"end\":1858}};\n    doc.loc.source = {\"body\":\"type Lease {\\n  id: Int\\n  monthlyRentUsd: Int\\n  startDate: Float\\n  endDate: Float\\n}\\n\\ntype Payments {\\n  id: Int\\n  termType: String\\n  firstExpectedPaymentDate: PaymentDateType\\n  finalExpectedPaymentDate: PaymentDateType\\n  firstSuccessfulPaymentDate: PaymentDateType\\n  mostRecentSuccessfulPaymentDate: PaymentDateType\\n  rentTermsCancelledDate: PaymentDateType\\n  daysDelinquent: Int\\n}\\n\\ntype PaymentDateType {\\n  year: Int\\n  month: Int\\n  day: Int\\n}\\n\\ntype Property {\\n  listingAlias: String!\\n  street: String!\\n  unit: String\\n  city: String!\\n  state: String!\\n  zip: String!\\n}\\n\\ntype Landlord {\\n  id: String\\n  firstName: String!\\n  lastName: String!\\n  email: String!\\n  phone: String\\n}\\n\\ntype ApplicationEligibility {\\n  applicationId: String\\n  applicationEligibilityStatus: String\\n}\\n\\ntype Renter {\\n  renterId: String\\n  firstName: String!\\n  lastName: String!\\n  email: String!\\n  phone: String\\n  creditCheckEligibleFlag: Boolean\\n  incomeToRentEligibleFlag: Boolean\\n}\\n\\ntype PolicyDetails {\\n  policyId: String!\\n  property: Property\\n  lease: Lease\\n  payments: Payments\\n  landlords: [Landlord!]!\\n  applicationEligibility: ApplicationEligibility!\\n  renters: [Renter!]!\\n  policyStatus: String\\n  isCancellable: Boolean!\\n}\\n\\ntype HistoryForPolicyRelatedActionsType {\\n  policyId: String!\\n  action: String!\\n  createdDate: Float!\\n  message: String!\\n  source: String!\\n  sourceId: String!\\n}\\n\\ntype HistoryForPolicyRelatedActions {\\n  logs: [HistoryForPolicyRelatedActionsType]!\\n}\\n\\ntype CancelPolicyResponse {\\n  success: Boolean!\\n  httpStatus: Int!\\n  error: CancelPolicyError\\n}\\n\\ntype CancelPolicyError {\\n  message: String\\n}\\n\\ntype Query {\\n  expandedPolicyDetails(policyId: String!): PolicyDetails\\n  historyForPolicyRelatedActions(policyId: String!): HistoryForPolicyRelatedActions\\n}\\n\\ntype Mutation {\\n  cancelPolicy(policyId: String!, caseNumber: String!, note: String!): CancelPolicyResponse\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n      module.exports = doc;\n    \n","import express from 'express';\nimport cookieParser from 'cookie-parser';\nimport { getHttpLogger } from '@zg-rentals/logger-node';\nimport cors from 'cors';\nimport type { NextFunction, Request, Response } from 'express';\n\nimport monitorMiddleware from './middleware/nodeMonitor';\nimport log from './utils/log';\nimport createHealthcheck from './middleware/healthcheck';\nimport { tracer } from './utils/tracer';\n\n// GraphQL\nimport { ApolloServer } from 'apollo-server-express';\nimport schema from '../graphql/federatedSchema';\n\nconst step = log.child({ name: 'server' });\n\nstep.warn('running server');\n\nconst server = new ApolloServer({\n  schema,\n  context: ({ req }) => {\n    const token = req.cookies;\n\n    return {\n      token,\n    };\n  },\n  introspection: __DEV__,\n  playground: __DEV__,\n});\n\n// Express\nconst app = express();\nconst healthcheck = createHealthcheck(log.child({ name: 'healthcheck' }));\n\nconst httpLogger = getHttpLogger({\n  logger: log,\n});\n\n// must bind 'this' because of JS\nmonitorMiddleware(app);\n\ntracer.traceApp(app);\n\nif (__DEV__) {\n  const corsOptions = {\n    // @ts-ignore expect-any\n    origin: (origin, callback) => {\n      callback(null, origin);\n    },\n    credentials: true,\n  };\n  app.use(cors(corsOptions));\n}\n\napp.use(cookieParser());\napp.use(httpLogger);\napp.use(`*/check`, tracer.wrap(healthcheck.check as (...args: Array<unknown>) => unknown, 'healthcheck'));\napp.use(`*/shutdown`, healthcheck.shutdown);\napp.get(`/`, (req, res) => {\n  step.warn(req.cookies, 'Cookies');\n  res.writeHead(200, { 'Content-Type': 'text/html' });\n  res.write(`Rent Guarantee Express Server Response!`);\n  res.end();\n});\n\ntracer.errorMiddleware();\n\n// Express error handler - catches any express error uncaught by a middleware function\napp.use((err: Error, req: Request, res: Response, next: NextFunction) => {\n  log.error(err);\n  res.status(500);\n  next();\n});\n\nserver.applyMiddleware({ app, path: '/rent-guarantee-graphql/graphql', cors: false });\n\nexport default app;\n","import getNodeLogger from '@zg-rentals/logger-node';\nimport { tracer } from './tracer';\n\nconst log = getNodeLogger({\n  logPath: process.env.NODE_OUT_FILE,\n  level: process.env.LOG_LEVEL,\n  mixin: () => tracer.logMixin(),\n});\n\nexport default log;\n","module.exports = require(\"url\");"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAIA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAUA;AAEA;AAEA;AAAA;AACA;AADA;AACA;AAIA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AACA;AADA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AApBA;AAqBA;AACA;AA3BA;AAAA;AAAA;AA4BA;AACA;AAAA;AACA;AAAA;AAKA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAnDA;AAAA;AAAA;AAsDA;AACA;AACA;AACA;AAzDA;AAAA;AAAA;AA4DA;AACA;AACA;AA9DA;AAAA;AAAA;AAgEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAzEA;AAAA;AAAA;AA4EA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AApFA;AAAA;AAAA;AAuFA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAUA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AArIA;AAAA;AAAA;AAuIA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AA7IA;AAAA;AAAA;AAgJA;AAAA;AAAA;AACA;AACA;AAlJA;AAAA;AAAA;AAqJA;AACA;AACA;AAvJA;AAAA;AAAA;AA0JA;AACA;AA3JA;AAAA;AAAA;AA8JA;AACA;AA/JA;AAAA;AAAA;AAiKA;AACA;AACA;AACA;AApKA;AAAA;AAAA;AAuKA;AACA;AACA;AACA;AA1KA;AAAA;AAAA;AA6KA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAMA;AACA;AA1LA;AAAA;AAAA;AA6LA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAhNA;AAAA;AAAA;AAmNA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;AAAA;AACA;AA/NA;AAAA;AAAA;AAkOA;AAAA;AAAA;AACA;AAnOA;AAAA;AAAA;AAsOA;AACA;AAAA;AACA;AACA;AACA;AA1OA;AAAA;AAAA;AA4OA;AACA;AADA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AApPA;AACA;AADA;AAAA;;;;;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AAEA;AACA;AADA;AAGA;AACA;AACA;AAVA;AACA;AAaA;AACA;AAAA;AAAA;AAEA;AACA;AADA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;AC9EA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAMA;;;;;;;;;;;;ACTA;;;;A","sourceRoot":""}